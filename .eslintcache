[{"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/index.js":"1","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/reportWebVitals.js":"2","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/App.js":"3","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/crash/index.js":"4","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/setting/index.js":"5","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/fileHelper.js":"6","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/FileSearch.js":"7","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/FileList.js":"8","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/treeHelper.js":"9","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/hooks/useIpcRenderer.js":"10","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/index.js":"11","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/todo/index.js":"12","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/note/index.js":"13","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/hooks/useContextMenu.js":"14","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/hooks/useKeyPressed.js":"15","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/helper.js":"16","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/antdIcons.js":"17","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/initial.js":"18","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/AimList.js":"19","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/todo/TodoList.js":"20","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/EditAim.js":"21","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/todo/initial.js":"22","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Column.js":"23","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/index.js":"24","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Task.js":"25","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/exportHtml.js":"26","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/exportMarkdown.js":"27","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/eventHandler/resize.js":"28","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/eventHandler/dragDrop.js":"29","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/eventHandler/keyboard.js":"30","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/eventHandler/clickEvent.js":"31","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/eventHandler/clipboard.js":"32","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/eventHandler/event.js":"33","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/eventHandler/mouseEvent.js":"34","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/index.js":"35","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/config/index.js":"36","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/index.js":"37","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/ui/tooltip/index.js":"38","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/getLinkInfo.js":"39","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/getImageInfo.js":"40","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/domManipulate.js":"41","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/selection/dom.js":"42","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/dompurify.js":"43","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/selection/cursor.js":"44","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/selection/index.js":"45","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/ui/emojis/index.js":"46","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/importMarkdown.js":"47","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/escapeCharacter.js":"48","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/turndownService.js":"49","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/prism/index.js":"50","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/index.js":"51","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/index.js":"52","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/index.js":"53","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/prism/loadLanguage.js":"54","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/linkCtrl.js":"55","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/footnoteCtrl.js":"56","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/dragDropCtrl.js":"57","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/emojiCtrl.js":"58","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/tocCtrl.js":"59","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/imageCtrl.js":"60","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/inputCtrl.js":"61","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/clickCtrl.js":"62","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/htmlBlock.js":"63","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/containerCtrl.js":"64","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/searchCtrl.js":"65","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/tabCtrl.js":"66","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/formatCtrl.js":"67","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/pasteCtrl.js":"68","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/copyCutCtrl.js":"69","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/arrowCtrl.js":"70","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/history.js":"71","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/paragraphCtrl.js":"72","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/core.js":"73","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/tableSelectCellsCtrl.js":"74","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/tableDragBarCtrl.js":"75","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/tableBlockCtrl.js":"76","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/codeBlockCtrl.js":"77","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/deleteCtrl.js":"78","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/backspaceCtrl.js":"79","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/updateCtrl.js":"80","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/enterCtrl.js":"81","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/utils.js":"82","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/utils.js":"83","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/rules.js":"84","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/options.js":"85","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/snabbdom.js":"86","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/parser.js":"87","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/lexer.js":"88","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/renderer.js":"89","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/cumputeCheckBoxStatus.js":"90","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/getParentCheckBox.js":"91","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderBlock/index.js":"92","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/index.js":"93","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/renderers/index.js":"94","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/textRenderer.js":"95","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/slugger.js":"96","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/blockRules.js":"97","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/inlineLexer.js":"98","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderBlock/renderIcon.js":"99","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderBlock/renderBlock.js":"100","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderBlock/renderContainerBlock.js":"101","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/footnoteIdentifier.js":"102","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderBlock/renderLeafBlock.js":"103","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/superSubScript.js":"104","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/referenceLink.js":"105","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/htmlRuby.js":"106","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/referenceDefinition.js":"107","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/referenceImage.js":"108","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/multipleMath.js":"109","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/htmlEscape.js":"110","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/em.js":"111","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/strong.js":"112","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/del.js":"113","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/text.js":"114","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/inlineCode.js":"115","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/emoji.js":"116","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/delEmStringFactory.js":"117","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/image.js":"118","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/loadImageAsync.js":"119","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/autoLinkExtension.js":"120","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/sequence.js":"121","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/autoLink.js":"122","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/inlineMath.js":"123","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/codeFense.js":"124","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/urlify.js":"125","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/softLineBreak.js":"126","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/inlineRules.js":"127","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/hardLineBreak.js":"128","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/tailHeader.js":"129","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/hr.js":"130","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/htmlTag.js":"131","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/link.js":"132","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/header.js":"133","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/highlight.js":"134","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/backlashInToken.js":"135","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/backlash.js":"136","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderBlock/renderTableDargBar.js":"137","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderBlock/renderCopyButton.js":"138","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderBlock/renderFootnoteJump.js":"139","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderBlock/renderContainerEditIcon.js":"140","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderBlock/renderToolBar.js":"141","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/codePicker/index.js":"142","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/tablePicker/index.js":"143","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/quickInsert/index.js":"144","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/imagePicker/index.js":"145","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/imageSelector/index.js":"146","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/emojiPicker/index.js":"147","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/frontMenu/index.js":"148","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/index.js":"149","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/footnoteTool/index.js":"150","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/imageToolbar/index.js":"151","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/linkTools/index.js":"152","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/tableTools/index.js":"153","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/formatPicker/index.js":"154","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/tableTools/config.js":"155","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/linkTools/config.js":"156","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/imageToolbar/config.js":"157","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/snabbdom.js":"158","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/formatPicker/config.js":"159","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/config/index.js":"160","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/baseFloat/index.js":"161","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/index.js":"162","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/dompurify.js":"163","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/exportMarkdown.js":"164","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/eventHandler/clickEvent.js":"165","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/eventHandler/clipboard.js":"166","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/eventHandler/resize.js":"167","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/eventHandler/mouseEvent.js":"168","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/eventHandler/dragDrop.js":"169","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/exportHtml.js":"170","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/eventHandler/event.js":"171","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/getImageInfo.js":"172","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/frontMenu/config.js":"173","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/eventHandler/keyboard.js":"174","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/quickInsert/config.js":"175","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/prism/index.js":"176","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/tooltip/index.js":"177","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/index.js":"178","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/emojis/index.js":"179","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/domManipulate.js":"180","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/getLinkInfo.js":"181","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/baseScrollFloat/index.js":"182","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/selection/dom.js":"183","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/fileIcons/index.js":"184","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/prism/loadLanguage.js":"185","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/selection/index.js":"186","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/escapeCharacter.js":"187","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/index.js":"188","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/renderers/index.js":"189","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/index.js":"190","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/footnoteCtrl.js":"191","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/selection/cursor.js":"192","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/dragDropCtrl.js":"193","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/linkCtrl.js":"194","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/tocCtrl.js":"195","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/imageCtrl.js":"196","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/importMarkdown.js":"197","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/htmlBlock.js":"198","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/containerCtrl.js":"199","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/searchCtrl.js":"200","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/tabCtrl.js":"201","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/pasteCtrl.js":"202","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/arrowCtrl.js":"203","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/copyCutCtrl.js":"204","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/core.js":"205","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/history.js":"206","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/tableSelectCellsCtrl.js":"207","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/tableDragBarCtrl.js":"208","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/deleteCtrl.js":"209","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/tableBlockCtrl.js":"210","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/emojiCtrl.js":"211","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/clickCtrl.js":"212","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/inputCtrl.js":"213","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/formatCtrl.js":"214","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/paragraphCtrl.js":"215","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/codeBlockCtrl.js":"216","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/backspaceCtrl.js":"217","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/updateCtrl.js":"218","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/enterCtrl.js":"219","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/utils.js":"220","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/rules.js":"221","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/utils.js":"222","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/sequence.js":"223","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/options.js":"224","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/parser.js":"225","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/renderer.js":"226","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/lexer.js":"227","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/turndownService.js":"228","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/cumputeCheckBoxStatus.js":"229","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/getParentCheckBox.js":"230","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/slugger.js":"231","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/textRenderer.js":"232","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/inlineLexer.js":"233","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/blockRules.js":"234","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/index.js":"235","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/urlify.js":"236","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/inlineRules.js":"237","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderBlock/index.js":"238","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/index.js":"239","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderBlock/renderIcon.js":"240","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/footnoteIdentifier.js":"241","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/superSubScript.js":"242","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/referenceImage.js":"243","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/referenceLink.js":"244","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/multipleMath.js":"245","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/referenceDefinition.js":"246","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/htmlRuby.js":"247","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/htmlEscape.js":"248","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/strong.js":"249","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/text.js":"250","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/inlineCode.js":"251","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/em.js":"252","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/del.js":"253","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/emoji.js":"254","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/delEmStringFactory.js":"255","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/image.js":"256","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/loadImageAsync.js":"257","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/autoLinkExtension.js":"258","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/inlineMath.js":"259","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/autoLink.js":"260","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/codeFense.js":"261","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/tailHeader.js":"262","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/hardLineBreak.js":"263","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/hr.js":"264","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/softLineBreak.js":"265","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/link.js":"266","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/htmlTag.js":"267","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/header.js":"268","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/highlight.js":"269","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderBlock/renderContainerBlock.js":"270","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/backlash.js":"271","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/backlashInToken.js":"272","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderBlock/renderBlock.js":"273","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderBlock/renderLeafBlock.js":"274","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderBlock/renderCopyButton.js":"275","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderBlock/renderTableDargBar.js":"276","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderBlock/renderContainerEditIcon.js":"277","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderBlock/renderFootnoteJump.js":"278","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderBlock/renderToolBar.js":"279","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/transformer/index.js":"280","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/fileSystem.js":"281","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/fileSystemExtra.js":"282","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/axios.js":"283","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/clipboard.js":"284","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/note/index2.js":"285","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/note/index3.js":"286"},{"size":847,"mtime":1639829280043,"results":"287","hashOfConfig":"288"},{"size":362,"mtime":1607156125945,"results":"289","hashOfConfig":"288"},{"size":11735,"mtime":1640618054187,"results":"290","hashOfConfig":"288"},{"size":103,"mtime":1610287098559,"results":"291","hashOfConfig":"288"},{"size":4752,"mtime":1610873685202,"results":"292","hashOfConfig":"288"},{"size":447,"mtime":1610257880565,"results":"293","hashOfConfig":"288"},{"size":1978,"mtime":1618638838820,"results":"294","hashOfConfig":"288"},{"size":5500,"mtime":1618638838822,"results":"295","hashOfConfig":"288"},{"size":7050,"mtime":1640620770032,"results":"296","hashOfConfig":"288"},{"size":453,"mtime":1618638838820,"results":"297","hashOfConfig":"288"},{"size":2729,"mtime":1610198915311,"results":"298","hashOfConfig":"288"},{"size":1061,"mtime":1610198892850,"results":"299","hashOfConfig":"288"},{"size":7503,"mtime":1639838637153,"results":"300","hashOfConfig":"288"},{"size":1112,"mtime":1618856466874,"results":"301","hashOfConfig":"288"},{"size":746,"mtime":1618856410510,"results":"302","hashOfConfig":"288"},{"size":658,"mtime":1610271712589,"results":"303","hashOfConfig":"288"},{"size":861,"mtime":1610184870996,"results":"304","hashOfConfig":"288"},{"size":773,"mtime":1610185767507,"results":"305","hashOfConfig":"288"},{"size":2346,"mtime":1610250059618,"results":"306","hashOfConfig":"288"},{"size":3838,"mtime":1610185059191,"results":"307","hashOfConfig":"288"},{"size":6685,"mtime":1610185605487,"results":"308","hashOfConfig":"288"},{"size":1006,"mtime":1618856425571,"results":"309","hashOfConfig":"288"},{"size":986,"mtime":1610184733421,"results":"310","hashOfConfig":"288"},{"size":13807,"mtime":1618856672011,"results":"311","hashOfConfig":"288"},{"size":958,"mtime":1610208057449,"results":"312","hashOfConfig":"288"},{"size":11385,"mtime":1618856675886,"results":"313","hashOfConfig":"288"},{"size":13632,"mtime":1618679819978,"results":"314","hashOfConfig":"288"},{"size":694,"mtime":1618679819954,"results":"315","hashOfConfig":"288"},{"size":1207,"mtime":1618679819953,"results":"316","hashOfConfig":"288"},{"size":9427,"mtime":1618856683569,"results":"317","hashOfConfig":"288"},{"size":8655,"mtime":1618679819953,"results":"318","hashOfConfig":"288"},{"size":2323,"mtime":1618679819953,"results":"319","hashOfConfig":"288"},{"size":2821,"mtime":1618679819954,"results":"320","hashOfConfig":"288"},{"size":2919,"mtime":1618679819954,"results":"321","hashOfConfig":"288"},{"size":10480,"mtime":1618679819979,"results":"322","hashOfConfig":"288"},{"size":9641,"mtime":1618679819947,"results":"323","hashOfConfig":"288"},{"size":21825,"mtime":1618679819950,"results":"324","hashOfConfig":"288"},{"size":1650,"mtime":1618679819976,"results":"325","hashOfConfig":"288"},{"size":497,"mtime":1618679819978,"results":"326","hashOfConfig":"288"},{"size":1003,"mtime":1618679819978,"results":"327","hashOfConfig":"288"},{"size":578,"mtime":1618679819977,"results":"328","hashOfConfig":"288"},{"size":4884,"mtime":1618679819966,"results":"329","hashOfConfig":"288"},{"size":62,"mtime":1618679819977,"results":"330","hashOfConfig":"288"},{"size":1337,"mtime":1618679819966,"results":"331","hashOfConfig":"288"},{"size":22383,"mtime":1618679819967,"results":"332","hashOfConfig":"288"},{"size":1330,"mtime":1618679819969,"results":"333","hashOfConfig":"288"},{"size":22223,"mtime":1618851319354,"results":"334","hashOfConfig":"288"},{"size":5033,"mtime":1618679819955,"results":"335","hashOfConfig":"288"},{"size":2092,"mtime":1618732808632,"results":"336","hashOfConfig":"288"},{"size":1101,"mtime":1618679819965,"results":"337","hashOfConfig":"288"},{"size":17143,"mtime":1618854512077,"results":"338","hashOfConfig":"288"},{"size":937,"mtime":1618679819956,"results":"339","hashOfConfig":"288"},{"size":8146,"mtime":1618679819958,"results":"340","hashOfConfig":"288"},{"size":3936,"mtime":1618679819966,"results":"341","hashOfConfig":"288"},{"size":1045,"mtime":1618679819951,"results":"342","hashOfConfig":"288"},{"size":1965,"mtime":1618679819949,"results":"343","hashOfConfig":"288"},{"size":5797,"mtime":1618679819948,"results":"344","hashOfConfig":"288"},{"size":1266,"mtime":1618856688793,"results":"345","hashOfConfig":"288"},{"size":606,"mtime":1618679819953,"results":"346","hashOfConfig":"288"},{"size":6483,"mtime":1618679819950,"results":"347","hashOfConfig":"288"},{"size":11510,"mtime":1618856679957,"results":"348","hashOfConfig":"288"},{"size":8579,"mtime":1618745317129,"results":"349","hashOfConfig":"288"},{"size":2025,"mtime":1618679819950,"results":"350","hashOfConfig":"288"},{"size":3766,"mtime":1618679819948,"results":"351","hashOfConfig":"288"},{"size":3733,"mtime":1618679819952,"results":"352","hashOfConfig":"288"},{"size":13725,"mtime":1618679819952,"results":"353","hashOfConfig":"288"},{"size":11285,"mtime":1618851189997,"results":"354","hashOfConfig":"288"},{"size":17841,"mtime":1618679819951,"results":"355","hashOfConfig":"288"},{"size":10682,"mtime":1618679819948,"results":"356","hashOfConfig":"288"},{"size":6880,"mtime":1618679819947,"results":"357","hashOfConfig":"288"},{"size":1641,"mtime":1618679819949,"results":"358","hashOfConfig":"288"},{"size":34594,"mtime":1618856646594,"results":"359","hashOfConfig":"288"},{"size":2241,"mtime":1618679819948,"results":"360","hashOfConfig":"288"},{"size":8733,"mtime":1618679819952,"results":"361","hashOfConfig":"288"},{"size":10906,"mtime":1618679819952,"results":"362","hashOfConfig":"288"},{"size":13943,"mtime":1618679819952,"results":"363","hashOfConfig":"288"},{"size":5052,"mtime":1618856704809,"results":"364","hashOfConfig":"288"},{"size":2301,"mtime":1618679819948,"results":"365","hashOfConfig":"288"},{"size":17851,"mtime":1618856581590,"results":"366","hashOfConfig":"288"},{"size":20638,"mtime":1618850990358,"results":"367","hashOfConfig":"288"},{"size":18533,"mtime":1618856661649,"results":"368","hashOfConfig":"288"},{"size":7954,"mtime":1618679819965,"results":"369","hashOfConfig":"288"},{"size":5156,"mtime":1618679819958,"results":"370","hashOfConfig":"288"},{"size":2550,"mtime":1618679819965,"results":"371","hashOfConfig":"288"},{"size":968,"mtime":1618679819956,"results":"372","hashOfConfig":"288"},{"size":1111,"mtime":1618679819965,"results":"373","hashOfConfig":"288"},{"size":5688,"mtime":1618679819957,"results":"374","hashOfConfig":"288"},{"size":18789,"mtime":1618745670727,"results":"375","hashOfConfig":"288"},{"size":6220,"mtime":1618679819957,"results":"376","hashOfConfig":"288"},{"size":337,"mtime":1618679819977,"results":"377","hashOfConfig":"288"},{"size":281,"mtime":1618679819978,"results":"378","hashOfConfig":"288"},{"size":275,"mtime":1618679819958,"results":"379","hashOfConfig":"288"},{"size":1611,"mtime":1618679819963,"results":"380","hashOfConfig":"288"},{"size":891,"mtime":1618679819966,"results":"381","hashOfConfig":"288"},{"size":1197,"mtime":1618679819957,"results":"382","hashOfConfig":"288"},{"size":857,"mtime":1618679819957,"results":"383","hashOfConfig":"288"},{"size":6848,"mtime":1618679819956,"results":"384","hashOfConfig":"288"},{"size":11629,"mtime":1618679819956,"results":"385","hashOfConfig":"288"},{"size":3394,"mtime":1618679819959,"results":"386","hashOfConfig":"288"},{"size":388,"mtime":1618679819958,"results":"387","hashOfConfig":"288"},{"size":5989,"mtime":1618679819959,"results":"388","hashOfConfig":"288"},{"size":863,"mtime":1618679819962,"results":"389","hashOfConfig":"288"},{"size":8869,"mtime":1618856538908,"results":"390","hashOfConfig":"288"},{"size":835,"mtime":1618679819964,"results":"391","hashOfConfig":"288"},{"size":2712,"mtime":1618679819964,"results":"392","hashOfConfig":"288"},{"size":994,"mtime":1618679819963,"results":"393","hashOfConfig":"288"},{"size":1780,"mtime":1618679819964,"results":"394","hashOfConfig":"288"},{"size":1264,"mtime":1618679819964,"results":"395","hashOfConfig":"288"},{"size":311,"mtime":1618679819964,"results":"396","hashOfConfig":"288"},{"size":560,"mtime":1618679819962,"results":"397","hashOfConfig":"288"},{"size":141,"mtime":1618679819961,"results":"398","hashOfConfig":"288"},{"size":149,"mtime":1618679819964,"results":"399","hashOfConfig":"288"},{"size":143,"mtime":1618679819961,"results":"400","hashOfConfig":"288"},{"size":222,"mtime":1618679819965,"results":"401","hashOfConfig":"288"},{"size":776,"mtime":1618679819963,"results":"402","hashOfConfig":"288"},{"size":1978,"mtime":1618679819962,"results":"403","hashOfConfig":"288"},{"size":1110,"mtime":1618679819961,"results":"404","hashOfConfig":"288"},{"size":4285,"mtime":1618679819963,"results":"405","hashOfConfig":"288"},{"size":2690,"mtime":1618679819963,"results":"406","hashOfConfig":"288"},{"size":641,"mtime":1618679819960,"results":"407","hashOfConfig":"288"},{"size":145,"mtime":1618727016398,"results":"408","hashOfConfig":"288"},{"size":907,"mtime":1618679819960,"results":"409","hashOfConfig":"288"},{"size":1771,"mtime":1618679819963,"results":"410","hashOfConfig":"288"},{"size":531,"mtime":1618679819961,"results":"411","hashOfConfig":"288"},{"size":8398,"mtime":1618679819958,"results":"412","hashOfConfig":"288"},{"size":334,"mtime":1618679819964,"results":"413","hashOfConfig":"288"},{"size":5272,"mtime":1618679819956,"results":"414","hashOfConfig":"288"},{"size":545,"mtime":1618679819962,"results":"415","hashOfConfig":"288"},{"size":373,"mtime":1618679819964,"results":"416","hashOfConfig":"288"},{"size":301,"mtime":1618679819962,"results":"417","hashOfConfig":"288"},{"size":3218,"mtime":1618679819963,"results":"418","hashOfConfig":"288"},{"size":3932,"mtime":1618679819963,"results":"419","hashOfConfig":"288"},{"size":797,"mtime":1618679819962,"results":"420","hashOfConfig":"288"},{"size":897,"mtime":1618679819962,"results":"421","hashOfConfig":"288"},{"size":865,"mtime":1618679819961,"results":"422","hashOfConfig":"288"},{"size":370,"mtime":1618679819960,"results":"423","hashOfConfig":"288"},{"size":290,"mtime":1618679819960,"results":"424","hashOfConfig":"288"},{"size":475,"mtime":1618679819959,"results":"425","hashOfConfig":"288"},{"size":122,"mtime":1618679819959,"results":"426","hashOfConfig":"288"},{"size":484,"mtime":1618679819959,"results":"427","hashOfConfig":"288"},{"size":1736,"mtime":1618679819960,"results":"428","hashOfConfig":"288"},{"size":2752,"mtime":1618679819967,"results":"429","hashOfConfig":"288"},{"size":3834,"mtime":1618679819975,"results":"430","hashOfConfig":"288"},{"size":4143,"mtime":1618679819975,"results":"431","hashOfConfig":"288"},{"size":2393,"mtime":1618679819972,"results":"432","hashOfConfig":"288"},{"size":14085,"mtime":1638025378838,"results":"433","hashOfConfig":"288"},{"size":2569,"mtime":1618679819968,"results":"434","hashOfConfig":"288"},{"size":5278,"mtime":1618679819971,"results":"435","hashOfConfig":"288"},{"size":13807,"mtime":1618856672011,"results":"436","hashOfConfig":"288"},{"size":3771,"mtime":1618679819970,"results":"437","hashOfConfig":"288"},{"size":3651,"mtime":1618679819973,"results":"438","hashOfConfig":"288"},{"size":2857,"mtime":1618679819974,"results":"439","hashOfConfig":"288"},{"size":1964,"mtime":1618679819976,"results":"440","hashOfConfig":"288"},{"size":2674,"mtime":1618679819971,"results":"441","hashOfConfig":"288"},{"size":665,"mtime":1618679819975,"results":"442","hashOfConfig":"288"},{"size":261,"mtime":1618679819974,"results":"443","hashOfConfig":"288"},{"size":878,"mtime":1618679819973,"results":"444","hashOfConfig":"288"},{"size":1111,"mtime":1618679819965,"results":"445","hashOfConfig":"288"},{"size":1856,"mtime":1618679819970,"results":"446","hashOfConfig":"288"},{"size":9641,"mtime":1618679819947,"results":"447","hashOfConfig":"288"},{"size":3811,"mtime":1618679819967,"results":"448","hashOfConfig":"288"},{"size":10480,"mtime":1618679819979,"results":"449","hashOfConfig":"288"},{"size":62,"mtime":1618679819977,"results":"450","hashOfConfig":"288"},{"size":13632,"mtime":1618679819978,"results":"451","hashOfConfig":"288"},{"size":8655,"mtime":1618679819953,"results":"452","hashOfConfig":"288"},{"size":2323,"mtime":1618679819953,"results":"453","hashOfConfig":"288"},{"size":694,"mtime":1618679819954,"results":"454","hashOfConfig":"288"},{"size":2919,"mtime":1618679819954,"results":"455","hashOfConfig":"288"},{"size":1207,"mtime":1618679819953,"results":"456","hashOfConfig":"288"},{"size":11385,"mtime":1618856675886,"results":"457","hashOfConfig":"288"},{"size":2821,"mtime":1618679819954,"results":"458","hashOfConfig":"288"},{"size":1003,"mtime":1618679819978,"results":"459","hashOfConfig":"288"},{"size":3061,"mtime":1618679819971,"results":"460","hashOfConfig":"288"},{"size":9427,"mtime":1618856683569,"results":"461","hashOfConfig":"288"},{"size":5582,"mtime":1638034923576,"results":"462","hashOfConfig":"288"},{"size":1101,"mtime":1618679819965,"results":"463","hashOfConfig":"288"},{"size":1650,"mtime":1618679819976,"results":"464","hashOfConfig":"288"},{"size":22370,"mtime":1640620469933,"results":"465","hashOfConfig":"288"},{"size":1330,"mtime":1618679819969,"results":"466","hashOfConfig":"288"},{"size":578,"mtime":1618679819977,"results":"467","hashOfConfig":"288"},{"size":497,"mtime":1618679819978,"results":"468","hashOfConfig":"288"},{"size":2279,"mtime":1618679819967,"results":"469","hashOfConfig":"288"},{"size":4884,"mtime":1618679819966,"results":"470","hashOfConfig":"288"},{"size":203,"mtime":1638015033806,"results":"471","hashOfConfig":"288"},{"size":3936,"mtime":1618679819966,"results":"472","hashOfConfig":"288"},{"size":22383,"mtime":1618679819967,"results":"473","hashOfConfig":"288"},{"size":5033,"mtime":1618679819955,"results":"474","hashOfConfig":"288"},{"size":17157,"mtime":1640620107471,"results":"475","hashOfConfig":"288"},{"size":891,"mtime":1618679819966,"results":"476","hashOfConfig":"288"},{"size":937,"mtime":1618679819956,"results":"477","hashOfConfig":"288"},{"size":1965,"mtime":1618679819949,"results":"478","hashOfConfig":"288"},{"size":1337,"mtime":1618679819966,"results":"479","hashOfConfig":"288"},{"size":5797,"mtime":1618679819948,"results":"480","hashOfConfig":"288"},{"size":1045,"mtime":1618679819951,"results":"481","hashOfConfig":"288"},{"size":606,"mtime":1618679819953,"results":"482","hashOfConfig":"288"},{"size":6786,"mtime":1639491329837,"results":"483","hashOfConfig":"288"},{"size":22186,"mtime":1640620237045,"results":"484","hashOfConfig":"288"},{"size":2025,"mtime":1618679819950,"results":"485","hashOfConfig":"288"},{"size":3766,"mtime":1618679819948,"results":"486","hashOfConfig":"288"},{"size":3733,"mtime":1618679819952,"results":"487","hashOfConfig":"288"},{"size":14296,"mtime":1640619877905,"results":"488","hashOfConfig":"288"},{"size":17841,"mtime":1618679819951,"results":"489","hashOfConfig":"288"},{"size":6880,"mtime":1618679819947,"results":"490","hashOfConfig":"288"},{"size":10682,"mtime":1618679819948,"results":"491","hashOfConfig":"288"},{"size":2241,"mtime":1618679819948,"results":"492","hashOfConfig":"288"},{"size":1641,"mtime":1618679819949,"results":"493","hashOfConfig":"288"},{"size":8733,"mtime":1618679819952,"results":"494","hashOfConfig":"288"},{"size":10906,"mtime":1618679819952,"results":"495","hashOfConfig":"288"},{"size":2301,"mtime":1618679819948,"results":"496","hashOfConfig":"288"},{"size":13943,"mtime":1618679819952,"results":"497","hashOfConfig":"288"},{"size":1272,"mtime":1640619877819,"results":"498","hashOfConfig":"288"},{"size":8643,"mtime":1640620309682,"results":"499","hashOfConfig":"288"},{"size":11510,"mtime":1618856679957,"results":"500","hashOfConfig":"288"},{"size":11291,"mtime":1640619877841,"results":"501","hashOfConfig":"288"},{"size":34594,"mtime":1618856646594,"results":"502","hashOfConfig":"288"},{"size":5058,"mtime":1640619877820,"results":"503","hashOfConfig":"288"},{"size":17863,"mtime":1640619877863,"results":"504","hashOfConfig":"288"},{"size":20638,"mtime":1618850990358,"results":"505","hashOfConfig":"288"},{"size":18533,"mtime":1618856661649,"results":"506","hashOfConfig":"288"},{"size":7954,"mtime":1618679819965,"results":"507","hashOfConfig":"288"},{"size":2550,"mtime":1618679819965,"results":"508","hashOfConfig":"288"},{"size":5156,"mtime":1618679819958,"results":"509","hashOfConfig":"288"},{"size":145,"mtime":1618727016398,"results":"510","hashOfConfig":"288"},{"size":968,"mtime":1618679819956,"results":"511","hashOfConfig":"288"},{"size":5688,"mtime":1618679819957,"results":"512","hashOfConfig":"288"},{"size":6220,"mtime":1618679819957,"results":"513","hashOfConfig":"288"},{"size":18789,"mtime":1618745670727,"results":"514","hashOfConfig":"288"},{"size":2092,"mtime":1618732808632,"results":"515","hashOfConfig":"288"},{"size":337,"mtime":1618679819977,"results":"516","hashOfConfig":"288"},{"size":281,"mtime":1618679819978,"results":"517","hashOfConfig":"288"},{"size":857,"mtime":1618679819957,"results":"518","hashOfConfig":"288"},{"size":1197,"mtime":1618679819957,"results":"519","hashOfConfig":"288"},{"size":11629,"mtime":1618679819956,"results":"520","hashOfConfig":"288"},{"size":6848,"mtime":1618679819956,"results":"521","hashOfConfig":"288"},{"size":8146,"mtime":1618679819958,"results":"522","hashOfConfig":"288"},{"size":8398,"mtime":1618679819958,"results":"523","hashOfConfig":"288"},{"size":5272,"mtime":1618679819956,"results":"524","hashOfConfig":"288"},{"size":275,"mtime":1618679819958,"results":"525","hashOfConfig":"288"},{"size":1611,"mtime":1618679819963,"results":"526","hashOfConfig":"288"},{"size":3394,"mtime":1618679819959,"results":"527","hashOfConfig":"288"},{"size":863,"mtime":1618679819962,"results":"528","hashOfConfig":"288"},{"size":835,"mtime":1618679819964,"results":"529","hashOfConfig":"288"},{"size":1264,"mtime":1618679819964,"results":"530","hashOfConfig":"288"},{"size":2712,"mtime":1618679819964,"results":"531","hashOfConfig":"288"},{"size":311,"mtime":1618679819964,"results":"532","hashOfConfig":"288"},{"size":1780,"mtime":1618679819964,"results":"533","hashOfConfig":"288"},{"size":994,"mtime":1618679819963,"results":"534","hashOfConfig":"288"},{"size":560,"mtime":1618679819962,"results":"535","hashOfConfig":"288"},{"size":149,"mtime":1618679819964,"results":"536","hashOfConfig":"288"},{"size":222,"mtime":1618679819965,"results":"537","hashOfConfig":"288"},{"size":776,"mtime":1618679819963,"results":"538","hashOfConfig":"288"},{"size":141,"mtime":1618679819961,"results":"539","hashOfConfig":"288"},{"size":143,"mtime":1618679819961,"results":"540","hashOfConfig":"288"},{"size":1978,"mtime":1618679819962,"results":"541","hashOfConfig":"288"},{"size":1110,"mtime":1618679819961,"results":"542","hashOfConfig":"288"},{"size":4285,"mtime":1618679819963,"results":"543","hashOfConfig":"288"},{"size":2690,"mtime":1618679819963,"results":"544","hashOfConfig":"288"},{"size":641,"mtime":1618679819960,"results":"545","hashOfConfig":"288"},{"size":1771,"mtime":1618679819963,"results":"546","hashOfConfig":"288"},{"size":907,"mtime":1618679819960,"results":"547","hashOfConfig":"288"},{"size":531,"mtime":1618679819961,"results":"548","hashOfConfig":"288"},{"size":373,"mtime":1618679819964,"results":"549","hashOfConfig":"288"},{"size":545,"mtime":1618679819962,"results":"550","hashOfConfig":"288"},{"size":301,"mtime":1618679819962,"results":"551","hashOfConfig":"288"},{"size":334,"mtime":1618679819964,"results":"552","hashOfConfig":"288"},{"size":3932,"mtime":1618679819963,"results":"553","hashOfConfig":"288"},{"size":3218,"mtime":1618679819963,"results":"554","hashOfConfig":"288"},{"size":797,"mtime":1618679819962,"results":"555","hashOfConfig":"288"},{"size":897,"mtime":1618679819962,"results":"556","hashOfConfig":"288"},{"size":5989,"mtime":1618679819959,"results":"557","hashOfConfig":"288"},{"size":370,"mtime":1618679819960,"results":"558","hashOfConfig":"288"},{"size":865,"mtime":1618679819961,"results":"559","hashOfConfig":"288"},{"size":388,"mtime":1618679819958,"results":"560","hashOfConfig":"288"},{"size":8869,"mtime":1618856538908,"results":"561","hashOfConfig":"288"},{"size":475,"mtime":1618679819959,"results":"562","hashOfConfig":"288"},{"size":290,"mtime":1618679819960,"results":"563","hashOfConfig":"288"},{"size":484,"mtime":1618679819959,"results":"564","hashOfConfig":"288"},{"size":122,"mtime":1618679819959,"results":"565","hashOfConfig":"288"},{"size":1736,"mtime":1618679819960,"results":"566","hashOfConfig":"288"},{"size":5232,"mtime":1618679819977,"results":"567","hashOfConfig":"288"},{"size":6224,"mtime":1639494037670,"results":"568","hashOfConfig":"288"},{"size":1154,"mtime":1639494016036,"results":"569","hashOfConfig":"288"},{"size":175,"mtime":1639493346928,"results":"570","hashOfConfig":"288"},{"size":2051,"mtime":1639751075707,"results":"571","hashOfConfig":"288"},{"size":6813,"mtime":1639833289336,"results":"572","hashOfConfig":"288"},{"size":7284,"mtime":1640619110350,"results":"573","hashOfConfig":"288"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},"1teqt1h",{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"576"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"576"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"576"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"604","messages":"605","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"576"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"576"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"576"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"576"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"576"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"631"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"675","usedDeprecatedRules":"631"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"694","usedDeprecatedRules":"631"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"631"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712","usedDeprecatedRules":"631"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721","usedDeprecatedRules":"631"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726","usedDeprecatedRules":"631"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"729","usedDeprecatedRules":"631"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"732","usedDeprecatedRules":"631"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"743","usedDeprecatedRules":"631"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"746","usedDeprecatedRules":"631"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761","usedDeprecatedRules":"631"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"766","usedDeprecatedRules":"631"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773","usedDeprecatedRules":"631"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"778","messages":"779","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"782","usedDeprecatedRules":"631"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"785","usedDeprecatedRules":"631"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"828","messages":"829","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"830","messages":"831","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"836","messages":"837","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"842","messages":"843","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"846","messages":"847","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"848","messages":"849","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"850","messages":"851","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"852","messages":"853","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"854","messages":"855","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"856","messages":"857","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"858","messages":"859","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"860","messages":"861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"870","usedDeprecatedRules":"631"},{"filePath":"871","messages":"872","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"875","messages":"876","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"887","messages":"888","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"889","messages":"890","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"895","messages":"896","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"897","messages":"898","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903","usedDeprecatedRules":"576"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"906","usedDeprecatedRules":"576"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"909","messages":"910","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"911","usedDeprecatedRules":"576"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"914","messages":"915","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"918","messages":"919","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"920","messages":"921","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"922","messages":"923","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"926","messages":"927","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"930","messages":"931","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"576"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"936","messages":"937","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"938","messages":"939","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"940","messages":"941","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"954","messages":"955","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"956","messages":"957","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"968","messages":"969","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"694","usedDeprecatedRules":"576"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"675","usedDeprecatedRules":"576"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"980","messages":"981","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"982","messages":"983","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"986","messages":"987","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"988","messages":"989","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"576"},{"filePath":"992","messages":"993","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"994","messages":"995","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"996","messages":"997","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"998","messages":"999","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1004","messages":"1005","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721","usedDeprecatedRules":"576"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726","usedDeprecatedRules":"576"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"732","usedDeprecatedRules":"576"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"729","usedDeprecatedRules":"576"},{"filePath":"1012","messages":"1013","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1014","messages":"1015","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1016","messages":"1017","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1018","messages":"1019","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"743","usedDeprecatedRules":"576"},{"filePath":"1020","messages":"1021","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1022","messages":"1023","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"746","usedDeprecatedRules":"576"},{"filePath":"1024","messages":"1025","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1026","messages":"1027","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1028","usedDeprecatedRules":"576"},{"filePath":"1029","messages":"1030","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1031","messages":"1032","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1033","messages":"1034","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1035","messages":"1036","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1037","messages":"1038","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1039","messages":"1040","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1041","messages":"1042","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1043","messages":"1044","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1045","messages":"1046","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1047","messages":"1048","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761","usedDeprecatedRules":"576"},{"filePath":"1049","messages":"1050","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1051","messages":"1052","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"766","usedDeprecatedRules":"576"},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1055","messages":"1056","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1057","messages":"1058","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773","usedDeprecatedRules":"576"},{"filePath":"1059","messages":"1060","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1061","messages":"1062","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1063","messages":"1064","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1065"},{"filePath":"1066","messages":"1067","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1068","messages":"1069","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1070","messages":"1071","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1072","messages":"1073","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1074","messages":"1075","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1076","messages":"1077","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1078","messages":"1079","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1080","messages":"1081","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"782","usedDeprecatedRules":"576"},{"filePath":"1082","messages":"1083","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"785","usedDeprecatedRules":"576"},{"filePath":"1084","messages":"1085","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1086","messages":"1087","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1088","messages":"1089","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1090","messages":"1091","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1092","messages":"1093","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1094","messages":"1095","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1096","messages":"1097","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1098","messages":"1099","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1100","messages":"1101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1102","messages":"1103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1104","messages":"1105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1106","messages":"1107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1108","messages":"1109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1110","messages":"1111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1112","messages":"1113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1114","messages":"1115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1116","messages":"1117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1118","messages":"1119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1120","messages":"1121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1122","messages":"1123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1124","messages":"1125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1126","messages":"1127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1128","messages":"1129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1130","messages":"1131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1132","messages":"1133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1134","messages":"1135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1136","messages":"1137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1138","messages":"1139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1140","messages":"1141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1142","messages":"1143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1144","messages":"1145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1146","messages":"1147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1148","messages":"1149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"870","usedDeprecatedRules":"576"},{"filePath":"1150","messages":"1151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1152","messages":"1153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1154","messages":"1155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1156","messages":"1157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1158","messages":"1159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1160","messages":"1161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1162","messages":"1163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1164","messages":"1165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1166","usedDeprecatedRules":"576"},{"filePath":"1167","messages":"1168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1169","messages":"1170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1171","messages":"1172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1173","messages":"1174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"1175","messages":"1176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1177","messages":"1178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1179","usedDeprecatedRules":"576"},"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/index.js",[],["1180","1181"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/reportWebVitals.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/App.js",["1182"],"import { useState } from 'react';\nimport styles from './App.less';\nimport moment from 'moment';\nimport FileSearch from './components/FileSearch';\nimport FileList from './components/FileList';\nimport Note from './note/index3';\nimport Todo from './todo';\nimport Aim from './aim';\nimport {\n  defaultFiles,\n  importChildren,\n  findItemById,\n  editItemById,\n  createItemByFatherId,\n  deleteItemById,\n  findItemsByIds,\n  getIconByFileType,\n  deleteExtraAttr,\n  deepClone,\n} from './utils/treeHelper';\nimport emptyImg from '../public/empty.png';\nimport shortid from 'shortid';\nimport fileHelper from './utils/fileHelper';\nimport useIpcRenderer from './hooks/useIpcRenderer';\nimport Draggable from 'react-draggable';\n// Node API\nconst { remote, ipcRenderer } = window.require('electron');\nconst { join, basename, extname, dirname } = window.require('path');\nconst Store = window.require('electron-store');\n\nconst fileStore = new Store({ name: 'Files Data' });\nconst settingStore = new Store({ name: 'settings' });\n// fileStore.delete('files');\n\nconst getAutoSync = () =>\n  ['accessKey', 'secretKey', 'bucket', 'enableAutoSync'].every(\n    (key) => !!settingStore.get(key)\n  );\nconst defaultSiderWidth = 260;\nconst miniSiderWidth = 0;\nconst maxSiderWidth = 360;\n/**\n * state分析\n * - 文件列表 【】\n * - 搜索后的文件列表 key\n * - 未保存的文件列表 [id]\n * - 已经打开的文件列表 [id]\n * - 当前选中的文件\n */\nfunction App() {\n  const [files, setFiles] = useState(fileStore.get('files') || defaultFiles);\n  const [activeFileId, setActiveFileId] = useState('');\n  const [openedFileIds, setOpenedFileIds] = useState([]);\n  const [unsavedFileIds, setUnsavedFileIds] = useState([]);\n  const [newFile, setNewFile] = useState(null);\n  const [siderWidth, setSiderWidth] = useState(defaultSiderWidth);\n\n  const activeFile = findItemById(files, activeFileId);\n  const openedFiles = findItemsByIds(files, openedFileIds);\n  const unsavedFiles = findItemsByIds(files, unsavedFileIds);\n  const savedLocation =\n    settingStore.get('savedFileLocatiion') ||\n    `${remote.app.getPath('documents')}/cloud-note/`;\n\n  const saveFile2Store = (data) => {\n    const newData = deleteExtraAttr(deepClone(data));\n    fileStore.set('files', newData);\n  };\n\n  const clearUnsavedFile = (id) => {\n    const newUnsavedFileIds = unsavedFileIds.filter((fileId) => fileId !== id);\n    setUnsavedFileIds(newUnsavedFileIds);\n  };\n\n  const closeOpenedFile = (id) => {\n    const newOpenedFileIds = openedFileIds.filter((openId) => openId !== id);\n    setOpenedFileIds(newOpenedFileIds);\n    if (newOpenedFileIds.length > 0) {\n      setActiveFileId(newOpenedFileIds[newOpenedFileIds.length - 1]);\n    } else {\n      setActiveFileId('');\n    }\n  };\n\n  const openClickedFile = (id, isLoaded, path) => {\n    const curFile = findItemById(files, id);\n    console.log('++++', path, id, curFile, isLoaded, getAutoSync());\n    if (!isLoaded && path) {\n      // TODO\n      if (getAutoSync()) {\n        ipcRenderer.send('download-file', {\n          key: `${curFile.title}.md`,\n          path: curFile.path,\n          id: curFile.id,\n          updatedAt: curFile.updatedAt,\n        });\n      } else {\n        fileHelper.readFile(path).then((val) => {\n          console.log('readFile-222', path, val);\n          const newFiles = editItemById(files, id, {\n            body: val,\n            isLoaded: true,\n          });\n          setFiles(newFiles);\n          if (!openedFileIds.includes(id)) {\n            setOpenedFileIds([...openedFileIds, id]);\n          }\n        });\n      }\n      setActiveFileId(id);\n    } else {\n      setActiveFileId(id);\n      if (!openedFileIds.includes(id)) {\n        setOpenedFileIds([...openedFileIds, id]);\n      }\n    }\n  };\n  const deleteFile = (id, path) => {\n    fileHelper.deleteFile(path).then(() => {\n      const newFiles = deleteItemById(files, id);\n      saveFile2Store(newFiles);\n      setFiles(newFiles);\n      closeOpenedFile(id);\n      clearUnsavedFile(id);\n    });\n  };\n  const createNewFile = (fatherId, type, isLeaf) => {\n    const folder = isLeaf ? {} : { children: [] };\n    const newId = shortid.generate();\n    const newPath = join(\n      savedLocation,\n      `${newId}${type === 'note' ? '.md' : '.json'}`\n    );\n    const newFile = {\n      id: newId,\n      title: '',\n      path: newPath,\n      key: newId,\n      type,\n      icon: getIconByFileType(type, isLeaf),\n      createAt: moment().valueOf(),\n      isLeaf,\n      isSync: false,\n      updatedAt: 0,\n      ...folder,\n    };\n    const newFiles = createItemByFatherId(files, fatherId, newFile);\n    fileHelper\n      .writeFile(newPath, type === 'note' ? '## 请输入markdown' : '{}')\n      .then((res) => {\n        console.log('新建', newFiles, res);\n        setNewFile(newFile);\n        setFiles(newFiles);\n      });\n  };\n  const renameFile = (id, path, title, type) => {\n    const newPath = `${dirname(path)}/${title}${\n      type === 'note' ? '.md' : '.json'\n    }`;\n    fileHelper.renameFile(path, newPath).then(() => {\n      const newFiles = editItemById(files, id, { title, path: newPath });\n      saveFile2Store(newFiles);\n      setFiles(newFiles);\n      setNewFile(null);\n    });\n  };\n\n  const fileChange = (id, value) => {\n    console.log('fileChange', id, value);\n    if (value !== activeFile.body) {\n      const newFiles = editItemById(files, id, { body: value });\n      setFiles(newFiles);\n      if (!unsavedFileIds.includes(id)) {\n        setUnsavedFileIds([...unsavedFileIds, id]);\n      }\n    }\n  };\n\n  const saveEditFile = () => {\n    const { path, body, title } = activeFile;\n    if (activeFile.type === 'note') {\n      console.log('保存文件，我执行了', path, body);\n      fileHelper.writeFile(path, body).then(() => {\n        setUnsavedFileIds(unsavedFileIds.filter((id) => id !== activeFileId));\n        if (getAutoSync()) {\n          ipcRenderer.send('upload-file', {\n            key: `${title}.md`,\n            path: path,\n          });\n        }\n      });\n    }\n  };\n\n  const onImportFiles = (id, type) => {\n    remote.dialog\n      .showOpenDialog({\n        title: '选择导入MD文档',\n        filters: [{ name: 'Markdown Files', extension: ['md'] }],\n        properties: ['openFile', 'multiSelections'],\n      })\n      .then(({ filePaths }) => {\n        if (Array.isArray(filePaths)) {\n          // TODO 过滤已经添加过的文件\n          const children = filePaths.map((path) => {\n            const newId = shortid.generate();\n            return {\n              id: newId,\n              title: basename(path, extname(path)),\n              path,\n              key: newId,\n              type,\n              icon: getIconByFileType(type, true),\n              createAt: moment().valueOf(),\n              isLeaf: true,\n              isSync: false,\n              updatedAt: 0,\n            };\n          });\n          const newFiles = importChildren(files, id, children);\n          saveFile2Store(newFiles);\n          setFiles(newFiles);\n          if (children.length > 0) {\n            remote.dialog.showMessageBox({\n              type: 'info',\n              title: `导入成功`,\n              message: `成功导入了${children.length}个文件`,\n            });\n          }\n        }\n      });\n  };\n\n  const activeFileUploaded = () => {\n    const newFiles = editItemById(files, activeFileId, {\n      isSynced: true,\n      uploadedAt: moment().valueOf(),\n    });\n    setFiles(newFiles);\n    saveFile2Store(newFiles);\n  };\n\n  const activeFileDownloaded = (_, data) => {\n    console.log('activeFileDownloaded++++', data);\n    const curFile = findItemById(files, data.id);\n    console.log('activeFileDownloaded++++', curFile.path);\n    fileHelper.readFile(curFile.path).then((value) => {\n      console.log('readFile++++++', value);\n      let newData;\n      if (data.status === 'downloaded-success') {\n        newData = {\n          body: value,\n          isLoaded: true,\n          isSynced: true,\n          updatedAt: moment().valueOf(),\n        };\n      } else {\n        newData = {\n          body: value,\n          isLoaded: true,\n        };\n      }\n      console.log('activeFileDownloaded', newData);\n      const newFiles = editItemById(files, data.id, newData);\n      setFiles(newFiles);\n      saveFile2Store(newFiles);\n    });\n  };\n\n  const handleDrag = (_, ui) => {\n    const dragWidth = ui.x + defaultSiderWidth;\n    setSiderWidth(dragWidth);\n  };\n\n  useIpcRenderer({\n    'active-file-uploaded': activeFileUploaded,\n    'file-downloaded': activeFileDownloaded,\n    'save-edit-file': saveEditFile,\n  });\n  console.log('activeFileId', activeFile);\n  return (\n    <div className={styles.App}>\n      <div style={{ height: '100%', display: 'flex' }}>\n        <div\n          style={{\n            width: siderWidth,\n            background: '#6E6E6E',\n            color: 'white',\n            minWidth: siderWidth,\n            position: 'relative',\n          }}\n        >\n          <div className={styles.dragArea} />\n          <FileSearch\n            title=\"\"\n            onFileSearch={(val) => {\n              console.log(val);\n            }}\n          />\n          <FileList\n            activeId={activeFileId}\n            files={deepClone(files)}\n            newFile={newFile}\n            openedFiles={openedFiles}\n            onImportFiles={onImportFiles}\n            closeOpenedFile={closeOpenedFile}\n            unsavedFileIds={unsavedFileIds}\n            onFileClick={openClickedFile}\n            createNewFile={createNewFile}\n            onFileDelete={deleteFile}\n            onFileRename={renameFile}\n          />\n          <Draggable\n            axis=\"x\"\n            bounds={{\n              left: miniSiderWidth - defaultSiderWidth,\n              right: maxSiderWidth - defaultSiderWidth,\n            }}\n            defaultPosition={{ x: 0, y: 0 }}\n            onDrag={handleDrag}\n          >\n            <div className={styles.handle} />\n          </Draggable>\n        </div>\n        <div\n          style={{ flex: 1, backgroundColor: '#fafbfc', overflow: 'hidden' }}\n        >\n          {!activeFile ? (\n            <div className={styles.empty}>\n              <div\n                style={{ width: '100%', position: 'absolute', top: 0 }}\n                className={styles.dragArea}\n              />\n              <img src={emptyImg} alt=\"没有数据\" />\n              <span className={styles.emptyWord}>空空如也</span>\n            </div>\n          ) : (\n            <>\n              <h1\n                className={styles.dragArea}\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  height: 58,\n                  padding: '0 58px',\n                  fontSize: 26,\n                  fontWeight: 600,\n                  margin: 0,\n                  backgroundColor: '#fafbfc',\n                }}\n              >\n                {unsavedFileIds.includes(activeFileId) && (\n                  <span className={styles.unsaveIcon} />\n                )}\n                {activeFile.title}\n              </h1>\n              {activeFile.type === 'todo' ? (\n                <Todo activeFile={activeFile} onChange={fileChange} />\n              ) : activeFile.type === 'note' ? (\n                <Note activeFile={activeFile} onChange={fileChange} />\n              ) : activeFile.type === 'aim' ? (\n                <Aim activeFile={activeFile} onChange={fileChange} />\n              ) : (\n                <div className={styles.empty}>\n                  <h3 style={{ color: 'red' }}>\n                    {activeFile.title}, 正在开发中...\n                  </h3>\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/crash/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/setting/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/fileHelper.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/FileSearch.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/FileList.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/treeHelper.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/hooks/useIpcRenderer.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/index.js",["1183"],"import React, { useState } from 'react';\n// import { useIdb } from 'react-use-idb';\nimport moment from 'moment';\nimport styles from './index.less';\nimport AimList from './AimList';\nimport { EAimType, EAimSort, initAim } from './initial';\nimport { message } from 'antd';\nimport EditAim from './EditAim';\nimport EmptyStatus from '../../public/empty.png';\n\nconst Aim = (props) => {\n  const initAims = initAim(moment());\n  const [allAims, setAllAims] = useState(initAims);\n  const { currentId = allAims.data[0].id, editId, data = [] } = allAims;\n  const [currentAim] = data.filter((item) => item.id === currentId);\n  console.log('currentAim', initAims, currentAim);\n  const changeCurrentAim = (aim) => {\n    const newDatas = data.filter((item) => item.id !== currentId);\n    newDatas.push({ ...aim, modifyTime: moment().valueOf() });\n    setAllAims({ ...allAims, editId: '', data: newDatas });\n  };\n\n  const addBranchTimes = (index) => {\n    const { data } = allAims;\n    const newData = data.map((item) => {\n      if (item.id === currentId) {\n        item.currentTimes += 1;\n        if (index >= 0) {\n          item.branchs[index].currentTimes += 1;\n        }\n      }\n      return item;\n    });\n\n    setAllAims({\n      ...allAims,\n      data: newData,\n    });\n  };\n  const onEditChange = (type, id, title) => {\n    if (type === EAimType.start) {\n      setAllAims({ ...allAims, editId: id });\n      return;\n    }\n    const { data } = allAims;\n    if (type === EAimType.delete) {\n      const newData = data.filter((item) => item.id !== id);\n      setAllAims({ ...allAims, data: newData });\n      return;\n    }\n    if (type === EAimType.top) {\n      const newData = data.map((item) => {\n        if (item.id === id) {\n          item.sort =\n            item.sort === EAimSort.top ? EAimSort.normal : EAimSort.top;\n          item.modifyTime = moment().valueOf();\n        }\n        return item;\n      });\n      setAllAims({ ...allAims, editId: '', data: newData });\n      return;\n    }\n    if (type === EAimType.rename) {\n      if (!title) {\n        message.error('标题不能为空');\n        return;\n      }\n      const newData = data.map((item) => {\n        if (item.id === id) {\n          item.title = title;\n          item.modifyTime = moment().valueOf();\n        }\n        return item;\n      });\n      setAllAims({ ...allAims, editId: '', data: newData });\n    }\n  };\n\n  return (\n    <div className={styles.Aim}>\n      <div className={styles.content}>\n        <EditAim\n          editId={editId}\n          data={currentAim}\n          onEditChange={onEditChange}\n          onSubmit={changeCurrentAim}\n        />\n        <AimList data={currentAim} addBranchTimes={addBranchTimes} />\n      </div>\n    </div>\n  );\n};\nexport default Aim;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/todo/index.js",["1184","1185","1186","1187"],"import React, { useState } from 'react';\n// import { useIdb } from 'react-use-idb';\nimport moment from 'moment';\nimport styles from './index.less';\nimport shortid from 'shortid';\nimport { ITodo, newTodo, ESort, initTodo } from './initial';\nimport { message } from 'antd';\nimport TodoList from './TodoList';\n\nconst Todo = (props) => {\n  const newId = shortid.generate();\n  const initTodos = initTodo(newTodo(moment(), newId), newId);\n  const [allTodos, setAllTodos] = useState(initTodos);\n  const { currentId = '', editId, data = [] } = allTodos || {};\n  const [currentTodo] = data.filter((item) => item.id === currentId);\n\n  const changeCurrentTodo = (todo) => {\n    const newDatas = data.filter((item) => item.id !== currentId);\n    newDatas.push({ ...todo, modifyTime: moment().valueOf() });\n    setAllTodos({ ...allTodos, data: newDatas });\n  };\n\n  return (\n    <div className={styles.Todo}>\n      <div className={styles.content}>\n        <TodoList todoData={currentTodo} onChange={changeCurrentTodo} />\n      </div>\n    </div>\n  );\n};\n\nexport default Todo;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/note/index.js",["1188","1189","1190"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/hooks/useContextMenu.js",["1191"],"import { useEffect, useRef } from 'react';\nimport { getParentNode } from '../utils/helper';\n// import nodejs modules\nconst { remote } = window.require('electron');\nconst { Menu, MenuItem } = remote;\n\nconst useContextMenu = (menus, targetClass) => {\n  const clickElement = useRef(null);\n  useEffect(() => {\n    const menu = new Menu();\n    menus.forEach((item) => {\n      menu.append(new MenuItem(item));\n    });\n    const handleContextMenu = ({ target }) => {\n      // 只有 e.target被 target 包裹时才出现\n      // const targetEle = document.querySelector(target);\n      // if (targetEle && targetEle.contains(e.target)) {\n      //if (target.classList.contains(targetClass)) {\n      const parentNode = getParentNode(target, targetClass);\n      if (parentNode) {\n        clickElement.current = parentNode;\n        menu.popup({ window: remote.getCurrentWindow() });\n      }\n    };\n    window.addEventListener('contextmenu', handleContextMenu);\n    return () => {\n      window.removeEventListener('contextmenu', handleContextMenu);\n    };\n  }, []);\n  return clickElement;\n};\n\nexport default useContextMenu;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/hooks/useKeyPressed.js",["1192"],"import { useState, useEffect } from 'react';\n\nconst useKeyPressed = (targetKeyCode) => {\n  const [keyPressed, setKeyPressed] = useState(false);\n  useEffect(() => {\n    const keyDownHandler = ({ keyCode }) => {\n      if (keyCode === targetKeyCode) {\n        setKeyPressed(true);\n      }\n    };\n    const keyUpHandler = ({ keyCode }) => {\n      if (keyCode === targetKeyCode) {\n        setKeyPressed(false);\n      }\n    };\n    document.addEventListener('keyup', keyUpHandler);\n    document.addEventListener('keydown', keyDownHandler);\n    return () => {\n      document.removeEventListener('keyup', keyUpHandler);\n      document.removeEventListener('keydown', keyDownHandler);\n    };\n  }, []);\n  return keyPressed;\n};\n\nexport default useKeyPressed;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/helper.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/antdIcons.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/initial.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/AimList.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/todo/TodoList.js",["1193","1194","1195","1196","1197","1198","1199"],"import React, { useState } from 'react';\nimport moment from 'moment';\nimport styles from './index.less';\nimport { IColumn, ITask, EStatus, ERate, ERepeat } from './initial';\nimport shortid from 'shortid';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport Column from '../components/Column';\nimport { Input, Rate, Dropdown, Button, Menu } from 'antd';\nimport { ITodo } from './initial';\n\nconst switchColumnTask = (todoData, source, destination) => {\n  const { columns } = todoData;\n  let task;\n  let targetColumnIndex;\n  const newColumns = columns.map((column, index) => {\n    if (column.id === source.droppableId) {\n      task = column.tasks[source.index];\n      column.tasks.splice(source.index, 1);\n    }\n    if (column.id === destination.droppableId) {\n      targetColumnIndex = index;\n    }\n    return column;\n  });\n  if ((targetColumnIndex || targetColumnIndex === 0) && task) {\n    newColumns[targetColumnIndex].tasks.splice(destination.index, 0, task);\n  }\n  return { ...todoData, columns: newColumns };\n};\n\nconst deleteColumnTask = (todoData, source) => ({\n  ...todoData,\n  columns: todoData.columns.map((column) => {\n    if (column.id === source.droppableId) {\n      column.tasks.splice(source.index, 1);\n    }\n    return {\n      ...column,\n    };\n  }),\n});\n\nconst sortTaskByRate = (columns)=>\n  columns.map((column) => {\n    column.tasks.sort((a, b) => b.rate - a.rate);\n    return column;\n  });\n\n\nconst TodoList = (props) => {\n  const { todoData, onChange } = props;\n  const { columns = [] } = todoData;\n  const [taskRate, setTaskRate] = useState(ERate.zero);\n  const [inputTask, setInputTask] = useState('');\n  const [taskRepeat, setTaskRepeat] = useState(ERepeat.once);\n\n  const handleDragEnd = (result) => {\n    const { source, destination } = result;\n    if (!destination) {\n      const newTodoData = deleteColumnTask({ ...todoData }, source);\n      onChange(newTodoData);\n      return;\n    }\n    if (\n      source.droppableId === destination.droppableId &&\n      source.index === destination.index\n    ) {\n      return;\n    }\n    const newTodoData = switchColumnTask(todoData, source, destination);\n    onChange(newTodoData);\n  };\n  const rate = (\n    <Rate\n      allowClear={false}\n      value={taskRate}\n      defaultValue={ERate.zero}\n      count={4}\n      tooltips={[\n        '不紧急不重要',\n        '不紧急很重要',\n        '很紧急不重要',\n        '很紧急很重要',\n      ]}\n      style={{ fontSize: 14 }}\n      onChange={setTaskRate}\n    />\n  );\n  const handleAddTask = (value) => {\n    if (!inputTask) {\n      return;\n    }\n    columns[0].tasks.unshift({\n      id: shortid.generate(),\n      status: EStatus.todo,\n      content: inputTask,\n      rate: taskRate,\n      repeat: taskRepeat,\n    });\n    onChange({ ...todoData, columns });\n    setInputTask('');\n    setTaskRate(ERate.one);\n  };\n\n  const sortedColumns = sortTaskByRate(columns);\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      {/* <div className={styles.title}>象限法则日程</div> */}\n      <Input.Search\n        value={inputTask}\n        className={styles.inputSearch}\n        placeholder=\"添加代办事项，记得打上紧急重要分哦～\"\n        enterButton={\n          <Button type=\"primary\" style={{ width: 80, background: '#6E6E6E' }}>\n            添加\n          </Button>\n        }\n        onChange={(e) => setInputTask(e.target.value)}\n        style={{\n          display: 'block',\n          width: '46%',\n          margin: '0 auto 12px',\n          marginTop: 30,\n        }}\n        size=\"middle\"\n        suffix={rate}\n        onSearch={handleAddTask}\n      />\n      <div className={styles.columns}>\n        {sortedColumns.map((column) => {\n          return <Column key={column.id} column={column} />;\n        })}\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default TodoList;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/EditAim.js",["1200","1201","1202"],"import React, { useState, useEffect, ChangeEvent } from 'react';\nimport { Input, Button, Select, DatePicker, InputNumber } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport styles from './index.less';\nimport shortid from 'shortid';\nimport { EAimType } from './initial';\n\nconst EditAim = (props) => {\n  const { data, editId, onSubmit, onEditChange } = props || {};\n  const [title, setTitle] = useState(data.title || '');\n  const [desc, setDesc] = useState(data.desc || '');\n  const [times, setTimes] = useState(data.times || 0);\n  const [startDate, setStartDate] = useState(\n    data.startDate || moment().format('YYYYMMDD')\n  );\n  const [branchs, setBranchs] = useState(\n    data.branchs || [{ id: shortid.generate(), name: '' }]\n  );\n  useEffect(() => {\n    setTitle(data.title);\n    setDesc(data.desc);\n    setTimes(data.times);\n    setStartDate(data.startDate);\n    setBranchs(data.branchs);\n  }, [data.id]);\n\n  const handleAddBranch = () => {\n    branchs.push({\n      id: shortid.generate(),\n      name: '',\n      desc: '',\n      times: 0,\n      currentTimes: 0,\n    });\n    setBranchs([...branchs]);\n    if (branchs.length === 1) {\n      setTimes(0);\n    }\n  };\n\n  const handleSubmit = () => {\n    onSubmit({\n      ...data,\n      createTime: moment().valueOf(),\n      title,\n      desc,\n      times,\n      startDate,\n      branchs,\n    });\n  };\n  const handleBranchChange = (key, e, index) => {\n    let newBranchs = [...branchs];\n    newBranchs[index][key] = e.target.value;\n    setBranchs(newBranchs);\n  };\n  const setBranchTimes = (num, index) => {\n    let newBranchs = [...branchs];\n    setTimes(times - newBranchs[index].times + num);\n    newBranchs[index].times = num;\n    setBranchs(newBranchs);\n  };\n  console.log('editAim', data.id);\n  const isEditing = data.id === editId;\n  return (\n    <div className={styles.EditAim}>\n      <div className={styles.formItem}>\n        <span className={styles.label}>目标名称：</span>\n        {isEditing ? (\n          <Input\n            onChange={(e) => setTitle(e.target.value)}\n            value={title}\n            style={{ width: '60%' }}\n            placeholder=\"请输入\"\n          />\n        ) : (\n          <div className={styles.aimTitle}>\n            {title}\n            <span\n              className={styles.edit}\n              onClick={() => onEditChange(EAimType.start, data.id)}\n            >\n              编辑\n            </span>\n          </div>\n        )}\n      </div>\n      <div className={styles.formItem}>\n        <span className={styles.label}>描述：</span>\n        {isEditing ? (\n          <Input.TextArea\n            rows={2}\n            onChange={(e) => setDesc(e.target.value)}\n            value={desc}\n            style={{ width: '60%' }}\n            placeholder=\"请输入\"\n          />\n        ) : (\n          <div style={{ width: '60%', wordWrap: 'break-word' }}>{desc}</div>\n        )}\n      </div>\n      {branchs.map((branch, index) => {\n        if (!branch) return null;\n        if (!isEditing && !branch.name) return null;\n        return (\n          <div key={branch.id}>\n            <div className={styles.formItem}>\n              <span className={styles.label}>分支{index + 1}：</span>\n              {isEditing ? (\n                <div className={styles.branchTitle}>\n                  <Input\n                    value={branch.name}\n                    onChange={(e) => handleBranchChange('name', e, index)}\n                    placeholder=\"请输入\"\n                  />\n                  <div className={styles.branchTimes}>\n                    <InputNumber\n                      placeholder=\"打卡次数\"\n                      style={{ flex: 1, margin: '0 6px' }}\n                      min={0}\n                      value={branch.times}\n                      onChange={(val) => setBranchTimes(Number(val), index)}\n                    />\n                    次打卡\n                  </div>\n                </div>\n              ) : (\n                <div className={styles.branchTitle}>\n                  {branch.name}\n                  <span>{branch.times}次打卡</span>\n                </div>\n              )}\n            </div>\n            <div className={styles.formItem}>\n              <span className={styles.label}></span>\n              {isEditing ? (\n                <Input.TextArea\n                  value={branch.desc}\n                  onChange={(e) => handleBranchChange('desc', e, index)}\n                  rows={2}\n                  style={{ width: '60%' }}\n                  placeholder=\"请输入\"\n                />\n              ) : (\n                <div style={{ width: '60%' }}>{branch.desc}</div>\n              )}\n            </div>\n          </div>\n        );\n      })}\n      {isEditing && (\n        <div className={styles.formItem}>\n          <span className={styles.label}></span>\n          <Button\n            type=\"dashed\"\n            style={{ width: '60%' }}\n            onClick={handleAddBranch}\n          >\n            <PlusOutlined /> 添加分支\n          </Button>\n        </div>\n      )}\n\n      <div className={styles.formItem}>\n        <span className={styles.label}>开始时间：</span>\n        <div className={styles.dateTimes} style={{ width: '60%' }}>\n          <div style={{ flex: 1 }}>\n            {isEditing ? (\n              <DatePicker\n                value={moment(startDate)}\n                onChange={(date) =>\n                  setStartDate(moment(date).format('YYYYMMDD'))\n                }\n                placeholder=\"开始时间\"\n                style={{ width: 280 }}\n              />\n            ) : (\n              <div>{startDate}</div>\n            )}\n          </div>\n          <div className={styles.times}>\n            <span className={styles.label}>预期投入：</span>\n            {isEditing ? (\n              <InputNumber\n                disabled={branchs.length > 0}\n                style={{ flex: 1, marginRight: 4 }}\n                min={0}\n                value={times}\n                onChange={(val) => setTimes(Number(val))}\n              />\n            ) : (\n              <span style={{ color: 'red', marginRight: 4 }}>{times}</span>\n            )}\n            次打卡\n          </div>\n        </div>\n      </div>\n      {isEditing && (\n        <div className={styles.formItem}>\n          <span className={styles.label}></span>\n          <div style={{ width: '60%', textAlign: 'left' }}>\n            <Button\n              type=\"primary\"\n              style={{ width: 180 }}\n              onClick={handleSubmit}\n            >\n              保存\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EditAim;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/todo/initial.js",["1203","1204"],"import shortid from 'shortid';\nimport moment from 'moment';\n\nexport const ERepeat = {\n  once: 0,\n  everyday: 1,\n  weekly: 2,\n};\n\nexport const ERate = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  three: 3,\n  four: 4,\n};\n\nexport const EStatus = {\n  todo: 0,\n  doing: 1,\n  done: 2,\n};\n\nexport const ESort = {\n  top: 1,\n  normal: 2,\n};\n\nexport const newTodo = (momentFn, id) => {\n  console.log('momentFn', momentFn, id);\n  const curTime = momentFn.valueOf();\n  return {\n    id,\n    title: momentFn.format('YYYYMMDD'),\n    createTime: curTime,\n    modifyTime: curTime,\n    sort: ESort.normal,\n    columns: [\n      {\n        id: 'column-todo',\n        name: '代办',\n        tasks: [],\n      },\n      {\n        id: 'column-inprogress',\n        name: '进行中',\n        tasks: [],\n      },\n      {\n        id: 'column-done',\n        name: '已完成',\n        tasks: [],\n      },\n    ],\n  };\n};\n\nexport const initTodo = (newTodo, newId) => {\n  return {\n    currentId: newId,\n    editId: '',\n    data: [newTodo],\n  };\n};\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Column.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/index.js",[],["1205","1206"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Task.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/exportHtml.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/exportMarkdown.js",["1207","1208"],"/**\n * Hi contributors!\n *\n * Before you edit or update codes in this file,\n * make sure you have read this bellow:\n * Commonmark Spec: https://spec.commonmark.org/0.29/\n * GitHub Flavored Markdown Spec: https://github.github.com/gfm/\n * Pandoc Markdown: https://pandoc.org/MANUAL.html#pandocs-markdown\n * The output markdown needs to obey the standards of these Spec.\n */\n\nclass ExportMarkdown {\n  constructor (blocks, listIndentation = 1, isGitlabCompatibilityEnabled = false) {\n    this.blocks = blocks\n    this.listType = [] // 'ul' or 'ol'\n    // helper to translate the first tight item in a nested list\n    this.isLooseParentList = true\n    this.isGitlabCompatibilityEnabled = !!isGitlabCompatibilityEnabled\n\n    // set and validate settings\n    this.listIndentation = 'number'\n    if (listIndentation === 'dfm') {\n      this.listIndentation = 'dfm'\n      this.listIndentationCount = 4\n    } else if (typeof listIndentation === 'number') {\n      this.listIndentationCount = Math.min(Math.max(listIndentation, 1), 4)\n    } else {\n      this.listIndentationCount = 1\n    }\n  }\n\n  generate () {\n    return this.translateBlocks2Markdown(this.blocks)\n  }\n\n  translateBlocks2Markdown (blocks, indent = '', listIndent = '') {\n    const result = []\n    // helper for CommonMark 264\n    let lastListBullet = ''\n\n    for (const block of blocks) {\n      if (block.type !== 'ul' && block.type !== 'ol') {\n        lastListBullet = ''\n      }\n\n      switch (block.type) {\n        case 'p':\n        case 'hr': {\n          this.insertLineBreak(result, indent)\n          result.push(this.translateBlocks2Markdown(block.children, indent))\n          break\n        }\n        case 'span': {\n          result.push(this.normalizeParagraphText(block, indent))\n          break\n        }\n        case 'h1':\n        case 'h2':\n        case 'h3':\n        case 'h4':\n        case 'h5':\n        case 'h6': {\n          this.insertLineBreak(result, indent)\n          result.push(this.normalizeHeaderText(block, indent))\n          break\n        }\n        case 'figure': {\n          this.insertLineBreak(result, indent)\n          switch (block.functionType) {\n            case 'table': {\n              const table = block.children[0]\n              result.push(this.normalizeTable(table, indent))\n              break\n            }\n            case 'html': {\n              result.push(this.normalizeHTML(block, indent))\n              break\n            }\n            case 'footnote': {\n              result.push(this.normalizeFootnote(block, indent))\n              break\n            }\n            case 'multiplemath': {\n              result.push(this.normalizeMultipleMath(block, indent))\n              break\n            }\n            case 'mermaid':\n            case 'flowchart':\n            case 'sequence':\n            case 'vega-lite': {\n              result.push(this.normalizeContainer(block, indent))\n              break\n            }\n          }\n          break\n        }\n        case 'li': {\n          const insertNewLine = block.isLooseListItem\n\n          // helper variable to correct the first tight item in a nested list\n          this.isLooseParentList = insertNewLine\n          if (insertNewLine) {\n            this.insertLineBreak(result, indent)\n          }\n          result.push(this.normalizeListItem(block, indent + listIndent))\n          this.isLooseParentList = true\n          break\n        }\n        case 'ul': {\n          let insertNewLine = this.isLooseParentList\n          this.isLooseParentList = true\n\n          // Start a new list without separation due changing the bullet or ordered list delimiter starts a new list.\n          const { bulletMarkerOrDelimiter } = block.children[0]\n          if (lastListBullet && lastListBullet !== bulletMarkerOrDelimiter) {\n            insertNewLine = false\n          }\n          lastListBullet = bulletMarkerOrDelimiter\n          if (insertNewLine) {\n            this.insertLineBreak(result, indent)\n          }\n\n          this.listType.push({ type: 'ul' })\n          result.push(this.normalizeList(block, indent, listIndent))\n          this.listType.pop()\n          break\n        }\n        case 'ol': {\n          let insertNewLine = this.isLooseParentList\n          this.isLooseParentList = true\n\n          // Start a new list without separation due changing the bullet or ordered list delimiter starts a new list.\n          const { bulletMarkerOrDelimiter } = block.children[0]\n          if (lastListBullet && lastListBullet !== bulletMarkerOrDelimiter) {\n            insertNewLine = false\n          }\n          lastListBullet = bulletMarkerOrDelimiter\n          if (insertNewLine) {\n            this.insertLineBreak(result, indent)\n          }\n          const listCount = block.start !== undefined ? block.start : 1\n          this.listType.push({ type: 'ol', listCount })\n          result.push(this.normalizeList(block, indent, listIndent))\n          this.listType.pop()\n          break\n        }\n        case 'pre': {\n          this.insertLineBreak(result, indent)\n          if (block.functionType === 'frontmatter') {\n            result.push(this.normalizeFrontMatter(block, indent))\n          } else {\n            result.push(this.normalizeCodeBlock(block, indent))\n          }\n          break\n        }\n        case 'blockquote': {\n          this.insertLineBreak(result, indent)\n          result.push(this.normalizeBlockquote(block, indent))\n          break\n        }\n        default: {\n          console.warn('translateBlocks2Markdown: Unknown block type:', block.type)\n          break\n        }\n      }\n    }\n    return result.join('')\n  }\n\n  insertLineBreak (result, indent) {\n    if (!result.length) return\n    result.push(`${indent}\\n`)\n  }\n\n  normalizeParagraphText (block, indent) {\n    const { text } = block\n    const lines = text.split('\\n')\n    return lines.map(line => `${indent}${line}`).join('\\n') + '\\n'\n  }\n\n  normalizeHeaderText (block, indent) {\n    const { headingStyle, marker } = block\n    const { text } = block.children[0]\n    if (headingStyle === 'atx') {\n      const match = text.match(/(#{1,6})(.*)/)\n      const atxHeadingText = `${match[1]} ${match[2].trim()}`\n      return `${indent}${atxHeadingText}\\n`\n    } else if (headingStyle === 'setext') {\n      const lines = text.trim().split('\\n')\n      return lines.map(line => `${indent}${line}`).join('\\n') + `\\n${indent}${marker.trim()}\\n`\n    }\n  }\n\n  normalizeBlockquote (block, indent) {\n    const { children } = block\n    const newIndent = `${indent}> `\n    return this.translateBlocks2Markdown(children, newIndent)\n  }\n\n  normalizeFrontMatter (block, indent) { // preBlock\n    let startToken\n    let endToken\n    switch (block.lang) {\n      case 'yaml':\n        startToken = '---\\n'\n        endToken = '---\\n'\n        break\n      case 'toml':\n        startToken = '+++\\n'\n        endToken = '+++\\n'\n        break\n      case 'json':\n        if (block.style === ';') {\n          startToken = ';;;\\n'\n          endToken = ';;;\\n'\n        } else {\n          startToken = '{\\n'\n          endToken = '}\\n'\n        }\n        break\n    }\n\n    const result = []\n    result.push(startToken)\n    for (const line of block.children[0].children) {\n      result.push(`${line.text}\\n`)\n    }\n    result.push(endToken)\n    return result.join('')\n  }\n\n  normalizeMultipleMath (block, /* figure */ indent) {\n    const { isGitlabCompatibilityEnabled } = this\n    let startToken = '$$'\n    let endToken = '$$'\n    if (isGitlabCompatibilityEnabled && block.mathStyle === 'gitlab') {\n      startToken = '```math'\n      endToken = '```'\n    }\n\n    const result = []\n    result.push(`${indent}${startToken}\\n`)\n    for (const line of block.children[0].children[0].children) {\n      result.push(`${indent}${line.text}\\n`)\n    }\n    result.push(`${indent}${endToken}\\n`)\n    return result.join('')\n  }\n\n  // `mermaid` `flowchart` `sequence` `vega-lite`\n  normalizeContainer (block, indent) {\n    const result = []\n    const diagramType = block.children[0].functionType\n    result.push('```' + diagramType + '\\n')\n    for (const line of block.children[0].children[0].children) {\n      result.push(`${line.text}\\n`)\n    }\n    result.push('```\\n')\n    return result.join('')\n  }\n\n  normalizeCodeBlock (block, indent) {\n    const result = []\n    const codeContent = block.children[1].children[0]\n    const textList = codeContent.text.split('\\n')\n    const { functionType } = block\n    if (functionType === 'fencecode') {\n      result.push(`${indent}${block.lang ? '```' + block.lang + '\\n' : '```\\n'}`)\n      textList.forEach(text => {\n        result.push(`${indent}${text}\\n`)\n      })\n      result.push(indent + '```\\n')\n    } else {\n      textList.forEach(text => {\n        result.push(`${indent}    ${text}\\n`)\n      })\n    }\n\n    return result.join('')\n  }\n\n  normalizeHTML (block, indent) { // figure\n    const result = []\n    const codeContentText = block.children[0].children[0].children[0].text\n    const lines = codeContentText.split('\\n')\n    for (const line of lines) {\n      result.push(`${indent}${line}\\n`)\n    }\n    return result.join('')\n  }\n\n  normalizeTable (table, indent) {\n    const result = []\n    const { row, column } = table\n    const tableData = []\n    const tHeader = table.children[0]\n    const tBody = table.children[1]\n    const escapeText = str => {\n      return str.replace(/([^\\\\])\\|/g, '$1\\\\|')\n    }\n\n    tableData.push(tHeader.children[0].children.map(th => escapeText(th.children[0].text).trim()))\n    if (tBody) {\n      tBody.children.forEach(bodyRow => {\n        tableData.push(bodyRow.children.map(td => escapeText(td.children[0].text).trim()))\n      })\n    }\n\n    const columnWidth = tHeader.children[0].children.map(th => ({ width: 5, align: th.align }))\n\n    let i\n    let j\n\n    for (i = 0; i <= row; i++) {\n      for (j = 0; j <= column; j++) {\n        columnWidth[j].width = Math.max(columnWidth[j].width, tableData[i][j].length + 2) // add 2, because have two space around text\n      }\n    }\n    tableData.forEach((r, i) => {\n      const rs = indent + '|' + r.map((cell, j) => {\n        const raw = ` ${cell + ' '.repeat(columnWidth[j].width)}`\n        return raw.substring(0, columnWidth[j].width)\n      }).join('|') + '|'\n      result.push(rs)\n      if (i === 0) {\n        const cutOff = indent + '|' + columnWidth.map(({ width, align }) => {\n          let raw = '-'.repeat(width - 2)\n          switch (align) {\n            case 'left':\n              raw = `:${raw} `\n              break\n            case 'center':\n              raw = `:${raw}:`\n              break\n            case 'right':\n              raw = ` ${raw}:`\n              break\n            default:\n              raw = ` ${raw} `\n              break\n          }\n          return raw\n        }).join('|') + '|'\n        result.push(cutOff)\n      }\n    })\n    return result.join('\\n') + '\\n'\n  }\n\n  normalizeList (block, indent, listIndent) {\n    const { children } = block\n    return this.translateBlocks2Markdown(children, indent, listIndent)\n  }\n\n  normalizeListItem (block, indent) {\n    const result = []\n    const listInfo = this.listType[this.listType.length - 1]\n    const isUnorderedList = listInfo.type === 'ul'\n    let { children, bulletMarkerOrDelimiter } = block\n    let itemMarker\n\n    if (isUnorderedList) {\n      itemMarker = bulletMarkerOrDelimiter ? `${bulletMarkerOrDelimiter} ` : '- '\n    } else {\n      // NOTE: GitHub and Bitbucket limit the list count to 99 but this is nowhere defined.\n      //  We limit the number to 99 for Daring Fireball Markdown to prevent indentation issues.\n      let n = listInfo.listCount\n      if ((this.listIndentation === 'dfm' && n > 99) || n > 999999999) {\n        n = 1\n      }\n      listInfo.listCount++\n\n      const delimiter = bulletMarkerOrDelimiter || '.'\n      itemMarker = `${n}${delimiter} `\n    }\n\n    // Subsequent paragraph indentation\n    const newIndent = indent + ' '.repeat(itemMarker.length)\n\n    // New list indentation. We already added one space to the indentation\n    let listIndent = ''\n    const { listIndentation } = this\n    if (listIndentation === 'dfm') {\n      listIndent = ' '.repeat(4 - itemMarker.length)\n    } else if (listIndentation === 'number') {\n      listIndent = ' '.repeat(this.listIndentationCount - 1)\n    }\n\n    // TODO: Indent subsequent paragraphs by one tab. - not important\n    //  Problem: \"translateBlocks2Markdown\" use \"indent\" in spaces to indent elements. How should\n    //  we integrate tabs in blockquotes and subsequent paragraphs and how to combine with spaces?\n    //  I don't know how to combine tabs and spaces and it seems not specified, so work for another day.\n\n    if (isUnorderedList && block.listItemType === 'task') {\n      const firstChild = children[0]\n      itemMarker += firstChild.checked ? '[x] ' : '[ ] '\n      children = children.slice(1)\n    }\n\n    result.push(`${indent}${itemMarker}`)\n    result.push(this.translateBlocks2Markdown(children, newIndent, listIndent).substring(newIndent.length))\n    return result.join('')\n  }\n\n  normalizeFootnote (block, indent) {\n    const result = []\n    const identifier = block.children[0].text\n    result.push(`${indent}[^${identifier}]:`)\n    const hasMultipleBlocks = block.children.length > 2 || block.children[1].type !== 'p'\n    if (hasMultipleBlocks) {\n      result.push('\\n')\n      const newIndent = indent + ' '.repeat(4)\n      result.push(this.translateBlocks2Markdown(block.children.slice(1), newIndent))\n    } else {\n      result.push(' ')\n      const paragraphContent = block.children[1].children[0]\n      result.push(this.normalizeParagraphText(paragraphContent, indent))\n    }\n\n    return result.join('')\n  }\n}\n\nexport default ExportMarkdown\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/eventHandler/resize.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/eventHandler/dragDrop.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/eventHandler/keyboard.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/eventHandler/clickEvent.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/eventHandler/clipboard.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/eventHandler/event.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/eventHandler/mouseEvent.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/config/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/ui/tooltip/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/getLinkInfo.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/getImageInfo.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/domManipulate.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/selection/dom.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/dompurify.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/selection/cursor.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/selection/index.js",["1209","1210","1211"],"/**\n * This file is copy from [medium-editor](https://github.com/yabwe/medium-editor)\n * and customize for specialized use.\n */\nimport Cursor from './cursor'\nimport { CLASS_OR_ID } from '../config'\nimport {\n  isBlockContainer,\n  traverseUp,\n  getFirstSelectableLeafNode,\n  getClosestBlockContainer,\n  getCursorPositionWithinMarkedText,\n  findNearestParagraph,\n  getTextContent,\n  getOffsetOfParagraph\n} from './dom'\n\nconst filterOnlyParentElements = node => {\n  return isBlockContainer(node) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP\n}\n\nclass Selection {\n  constructor (doc) {\n    this.doc = doc // document\n  }\n\n  findMatchingSelectionParent (testElementFunction, contentWindow) {\n    const selection = contentWindow.getSelection()\n    let range\n    let current\n\n    if (selection.rangeCount === 0) {\n      return false\n    }\n\n    range = selection.getRangeAt(0)\n    current = range.commonAncestorContainer\n\n    return traverseUp(current, testElementFunction)\n  }\n\n  // https://stackoverflow.com/questions/17678843/cant-restore-selection-after-html-modify-even-if-its-the-same-html\n  // Tim Down\n  //\n  // {object} selectionState - the selection to import\n  // {DOMElement} root - the root element the selection is being restored inside of\n  // {boolean} [favorLaterSelectionAnchor] - defaults to false. If true, import the cursor immediately\n  //      subsequent to an anchor tag if it would otherwise be placed right at the trailing edge inside the\n  //      anchor. This cursor positioning, even though visually equivalent to the user, can affect behavior\n  //      in MS IE.\n  importSelection (selectionState, root, favorLaterSelectionAnchor) {\n    if (!selectionState || !root) {\n      throw new Error('your must provide a [selectionState] and a [root] element')\n    }\n\n    let range = this.doc.createRange()\n    range.setStart(root, 0)\n    range.collapse(true)\n\n    let node = root\n    const nodeStack = []\n    let charIndex = 0\n    let foundStart = false\n    let foundEnd = false\n    let trailingImageCount = 0\n    let stop = false\n    let nextCharIndex\n    let allowRangeToStartAtEndOfNode = false\n    let lastTextNode = null\n\n    // When importing selection, the start of the selection may lie at the end of an element\n    // or at the beginning of an element.  Since visually there is no difference between these 2\n    // we will try to move the selection to the beginning of an element since this is generally\n    // what users will expect and it's a more predictable behavior.\n    //\n    // However, there are some specific cases when we don't want to do this:\n    //  1) We're attempting to move the cursor outside of the end of an anchor [favorLaterSelectionAnchor = true]\n    //  2) The selection starts with an image, which is special since an image doesn't have any 'content'\n    //     as far as selection and ranges are concerned\n    //  3) The selection starts after a specified number of empty block elements (selectionState.emptyBlocksIndex)\n    //\n    // For these cases, we want the selection to start at a very specific location, so we should NOT\n    // automatically move the cursor to the beginning of the first actual chunk of text\n    if (favorLaterSelectionAnchor || selectionState.startsWithImage || typeof selectionState.emptyBlocksIndex !== 'undefined') {\n      allowRangeToStartAtEndOfNode = true\n    }\n\n    while (!stop && node) {\n      // Only iterate over elements and text nodes\n      if (node.nodeType > 3) {\n        node = nodeStack.pop()\n        continue\n      }\n\n      // If we hit a text node, we need to add the amount of characters to the overall count\n      if (node.nodeType === 3 && !foundEnd) {\n        nextCharIndex = charIndex + node.length\n        // Check if we're at or beyond the start of the selection we're importing\n        if (!foundStart && selectionState.start >= charIndex && selectionState.start <= nextCharIndex) {\n          // NOTE: We only want to allow a selection to start at the END of an element if\n          //  allowRangeToStartAtEndOfNode is true\n          if (allowRangeToStartAtEndOfNode || selectionState.start < nextCharIndex) {\n            range.setStart(node, selectionState.start - charIndex)\n            foundStart = true\n          } else {\n            // We're at the end of a text node where the selection could start but we shouldn't\n            // make the selection start here because allowRangeToStartAtEndOfNode is false.\n            // However, we should keep a reference to this node in case there aren't any more\n            // text nodes after this, so that we have somewhere to import the selection to\n            lastTextNode = node\n          }\n        }\n        // We've found the start of the selection, check if we're at or beyond the end of the selection we're importing\n        if (foundStart && selectionState.end >= charIndex && selectionState.end <= nextCharIndex) {\n          if (!selectionState.trailingImageCount) {\n            range.setEnd(node, selectionState.end - charIndex)\n            stop = true\n          } else {\n            foundEnd = true\n          }\n        }\n        charIndex = nextCharIndex\n      } else {\n        if (selectionState.trailingImageCount && foundEnd) {\n          if (node.nodeName.toLowerCase() === 'img') {\n            trailingImageCount++\n          }\n          if (trailingImageCount === selectionState.trailingImageCount) {\n            // Find which index the image is in its parent's children\n            let endIndex = 0\n            while (node.parentNode.childNodes[endIndex] !== node) {\n              endIndex++\n            }\n            range.setEnd(node.parentNode, endIndex + 1)\n            stop = true\n          }\n        }\n\n        if (!stop && node.nodeType === 1) {\n          // this is an element\n          // add all its children to the stack\n          let i = node.childNodes.length - 1\n          while (i >= 0) {\n            nodeStack.push(node.childNodes[i])\n            i -= 1\n          }\n        }\n      }\n\n      if (!stop) {\n        node = nodeStack.pop()\n      }\n    }\n\n    // If we've gone through the entire text but didn't find the beginning of a text node\n    // to make the selection start at, we should fall back to starting the selection\n    // at the END of the last text node we found\n    if (!foundStart && lastTextNode) {\n      range.setStart(lastTextNode, lastTextNode.length)\n      range.setEnd(lastTextNode, lastTextNode.length)\n    }\n\n    if (typeof selectionState.emptyBlocksIndex !== 'undefined') {\n      range = this.importSelectionMoveCursorPastBlocks(root, selectionState.emptyBlocksIndex, range)\n    }\n\n    // If the selection is right at the ending edge of a link, put it outside the anchor tag instead of inside.\n    if (favorLaterSelectionAnchor) {\n      range = this.importSelectionMoveCursorPastAnchor(selectionState, range)\n    }\n\n    this.selectRange(range)\n  }\n\n  // Utility method called from importSelection only\n  importSelectionMoveCursorPastAnchor (selectionState, range) {\n    const nodeInsideAnchorTagFunction = function (node) {\n      return node.nodeName.toLowerCase() === 'a'\n    }\n    if (selectionState.start === selectionState.end &&\n      range.startContainer.nodeType === 3 &&\n      range.startOffset === range.startContainer.nodeValue.length &&\n      traverseUp(range.startContainer, nodeInsideAnchorTagFunction)) {\n      let prevNode = range.startContainer\n      let currentNode = range.startContainer.parentNode\n      while (currentNode !== null && currentNode.nodeName.toLowerCase() !== 'a') {\n        if (currentNode.childNodes[currentNode.childNodes.length - 1] !== prevNode) {\n          currentNode = null\n        } else {\n          prevNode = currentNode\n          currentNode = currentNode.parentNode\n        }\n      }\n      if (currentNode !== null && currentNode.nodeName.toLowerCase() === 'a') {\n        let currentNodeIndex = null\n        for (let i = 0; currentNodeIndex === null && i < currentNode.parentNode.childNodes.length; i++) {\n          if (currentNode.parentNode.childNodes[i] === currentNode) {\n            currentNodeIndex = i\n          }\n        }\n        range.setStart(currentNode.parentNode, currentNodeIndex + 1)\n        range.collapse(true)\n      }\n    }\n    return range\n  }\n\n  // Uses the emptyBlocksIndex calculated by getIndexRelativeToAdjacentEmptyBlocks\n  // to move the cursor back to the start of the correct paragraph\n  importSelectionMoveCursorPastBlocks (root, index = 1, range) {\n    const treeWalker = this.doc.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, filterOnlyParentElements, false)\n    const startContainer = range.startContainer\n    let startBlock\n    let targetNode\n    let currIndex = 0\n    // If index is 0, we still want to move to the next block\n\n    // Chrome counts newlines and spaces that separate block elements as actual elements.\n    // If the selection is inside one of these text nodes, and it has a previous sibling\n    // which is a block element, we want the treewalker to start at the previous sibling\n    // and NOT at the parent of the textnode\n    if (startContainer.nodeType === 3 && isBlockContainer(startContainer.previousSibling)) {\n      startBlock = startContainer.previousSibling\n    } else {\n      startBlock = getClosestBlockContainer(startContainer)\n    }\n\n    // Skip over empty blocks until we hit the block we want the selection to be in\n    while (treeWalker.nextNode()) {\n      if (!targetNode) {\n        // Loop through all blocks until we hit the starting block element\n        if (startBlock === treeWalker.currentNode) {\n          targetNode = treeWalker.currentNode\n        }\n      } else {\n        targetNode = treeWalker.currentNode\n        currIndex++\n        // We hit the target index, bail\n        if (currIndex === index) {\n          break\n        }\n        // If we find a non-empty block, ignore the emptyBlocksIndex and just put selection here\n        if (targetNode.textContent.length > 0) {\n          break\n        }\n      }\n    }\n\n    if (!targetNode) {\n      targetNode = startBlock\n    }\n\n    // We're selecting a high-level block node, so make sure the cursor gets moved into the deepest\n    // element at the beginning of the block\n    range.setStart(getFirstSelectableLeafNode(targetNode), 0)\n\n    return range\n  }\n\n  // https://stackoverflow.com/questions/4176923/html-of-selected-text\n  // by Tim Down\n  getSelectionHtml () {\n    const sel = this.doc.getSelection()\n    let i\n    let html = ''\n    let len\n    let container\n    if (sel.rangeCount) {\n      container = this.doc.createElement('div')\n      for (i = 0, len = sel.rangeCount; i < len; i += 1) {\n        container.appendChild(sel.getRangeAt(i).cloneContents())\n      }\n      html = container.innerHTML\n    }\n    return html\n  }\n\n  chopHtmlByCursor (root) {\n    const { left } = this.getCaretOffsets(root)\n    const markedText = root.textContent\n    const { type, info } = getCursorPositionWithinMarkedText(markedText, left)\n    const pre = markedText.slice(0, left)\n    const post = markedText.slice(left)\n    switch (type) {\n      case 'OUT':\n        return {\n          pre,\n          post\n        }\n      case 'IN':\n        return {\n          pre: `${pre}${info}`,\n          post: `${info}${post}`\n        }\n      case 'LEFT':\n        return {\n          pre: markedText.slice(0, left - info),\n          post: markedText.slice(left - info)\n        }\n      case 'RIGHT':\n        return {\n          pre: markedText.slice(0, left + info),\n          post: markedText.slice(left + info)\n        }\n    }\n  }\n\n  /**\n   *  Find the caret position within an element irrespective of any inline tags it may contain.\n   *\n   *  @param {DOMElement} An element containing the cursor to find offsets relative to.\n   *  @param {Range} A Range representing cursor position. Will window.getSelection if none is passed.\n   *  @return {Object} 'left' and 'right' attributes contain offsets from beginning and end of Element\n   */\n  getCaretOffsets (element, range) {\n    let preCaretRange\n    let postCaretRange\n\n    if (!range) {\n      range = window.getSelection().getRangeAt(0)\n    }\n\n    preCaretRange = range.cloneRange()\n    postCaretRange = range.cloneRange()\n\n    preCaretRange.selectNodeContents(element)\n    preCaretRange.setEnd(range.endContainer, range.endOffset)\n\n    postCaretRange.selectNodeContents(element)\n    postCaretRange.setStart(range.endContainer, range.endOffset)\n\n    return {\n      left: preCaretRange.toString().length,\n      right: postCaretRange.toString().length\n    }\n  }\n\n  selectNode (node) {\n    const range = this.doc.createRange()\n    range.selectNodeContents(node)\n    this.selectRange(range)\n  }\n\n  select (startNode, startOffset, endNode, endOffset) {\n    const range = this.doc.createRange()\n    range.setStart(startNode, startOffset)\n    if (endNode) {\n      range.setEnd(endNode, endOffset)\n    } else {\n      range.collapse(true)\n    }\n    this.selectRange(range)\n    return range\n  }\n\n  setFocus (focusNode, focusOffset) {\n    const selection = this.doc.getSelection()\n    selection.extend(focusNode, focusOffset)\n  }\n\n  /**\n   *  Clear the current highlighted selection and set the caret to the start or the end of that prior selection, defaults to end.\n   *\n   *  @param {boolean} moveCursorToStart  A boolean representing whether or not to set the caret to the beginning of the prior selection.\n   */\n  clearSelection (moveCursorToStart) {\n    const { rangeCount } = this.doc.getSelection()\n    if (!rangeCount) return\n    if (moveCursorToStart) {\n      this.doc.getSelection().collapseToStart()\n    } else {\n      this.doc.getSelection().collapseToEnd()\n    }\n  }\n\n  /**\n   * Move cursor to the given node with the given offset.\n   *\n   * @param  {DomElement}  node    Element where to jump\n   * @param  {integer}     offset  Where in the element should we jump, 0 by default\n   */\n  moveCursor (node, offset) {\n    this.select(node, offset)\n  }\n\n  getSelectionRange () {\n    const selection = this.doc.getSelection()\n    if (selection.rangeCount === 0) {\n      return null\n    }\n    return selection.getRangeAt(0)\n  }\n\n  selectRange (range) {\n    const selection = this.doc.getSelection()\n\n    selection.removeAllRanges()\n    selection.addRange(range)\n  }\n\n  // https://stackoverflow.com/questions/1197401/\n  // how-can-i-get-the-element-the-caret-is-in-with-javascript-when-using-contenteditable\n  // by You\n  getSelectionStart () {\n    const node = this.doc.getSelection().anchorNode\n    const startNode = (node && node.nodeType === 3 ? node.parentNode : node)\n\n    return startNode\n  }\n\n  setCursorRange (cursorRange) {\n    const { anchor, focus } = cursorRange\n    const anchorParagraph = document.querySelector(`#${anchor.key}`)\n    const focusParagraph = document.querySelector(`#${focus.key}`)\n    const getNodeAndOffset = (node, offset) => {\n      if (node.nodeType === 3) {\n        return {\n          node,\n          offset\n        }\n      }\n\n      const childNodes = node.childNodes\n      const len = childNodes.length\n      let i\n      let count = 0\n      for (i = 0; i < len; i++) {\n        const child = childNodes[i]\n        const textContent = getTextContent(child, [CLASS_OR_ID.AG_MATH_RENDER, CLASS_OR_ID.AG_RUBY_RENDER])\n        const textLength = textContent.length\n        if (child.classList && child.classList.contains(CLASS_OR_ID.AG_FRONT_ICON)) {\n          continue\n        }\n\n        // Fix #1460 - put the cursor at the next text node or element if it can be put at the last of /^\\n$/ or the next text node/element.\n        if (/^\\n$/.test(textContent) && i !== len - 1 ? count + textLength > offset : count + textLength >= offset) {\n          if (\n            child.classList && child.classList.contains('ag-inline-image')\n          ) {\n            const imageContainer = child.querySelector('.ag-image-container')\n            const hasImg = imageContainer.querySelector('img')\n\n            if (!hasImg) {\n              return {\n                node: child,\n                offset: 0\n              }\n            }\n            if (count + textLength === offset) {\n              if (child.nextElementSibling) {\n                return {\n                  node: child.nextElementSibling,\n                  offset: 0\n                }\n              } else {\n                return {\n                  node: imageContainer,\n                  offset: 1\n                }\n              }\n            } else if (count === offset && count === 0) {\n              return {\n                node: imageContainer,\n                offset: 0\n              }\n            } else {\n              return {\n                node: child,\n                offset: 0\n              }\n            }\n          } else {\n            return getNodeAndOffset(child, offset - count)\n          }\n        } else {\n          count += textLength\n        }\n      }\n      return { node, offset }\n    }\n\n    let { node: anchorNode, offset: anchorOffset } = getNodeAndOffset(anchorParagraph, anchor.offset)\n    let { node: focusNode, offset: focusOffset } = getNodeAndOffset(focusParagraph, focus.offset)\n\n    if (anchorNode.nodeType === 3 || anchorNode.nodeType === 1 && !anchorNode.classList.contains('ag-image-container')) {\n      anchorOffset = Math.min(anchorOffset, anchorNode.textContent.length)\n      focusOffset = Math.min(focusOffset, focusNode.textContent.length)\n    }\n\n    // First set the anchor node and anchor offset, make it collapsed\n    this.select(anchorNode, anchorOffset)\n    // Secondly, set the focus node and focus offset.\n    this.setFocus(focusNode, focusOffset)\n  }\n\n  isValidCursorNode (node) {\n    if (!node) return false\n    if (node.nodeType === 3) {\n      node = node.parentNode\n    }\n\n    return node.closest('span.ag-paragraph')\n  }\n\n  getCursorRange () {\n    let { anchorNode, anchorOffset, focusNode, focusOffset } = this.doc.getSelection()\n    const isAnchorValid = this.isValidCursorNode(anchorNode)\n    const isFocusValid = this.isValidCursorNode(focusNode)\n    let needFix = false\n    if (!isAnchorValid && isFocusValid) {\n      needFix = true\n      anchorNode = focusNode\n      anchorOffset = focusOffset\n    } else if (isAnchorValid && !isFocusValid) {\n      needFix = true\n      focusNode = anchorNode\n      focusOffset = anchorOffset\n    } else if (!isAnchorValid && !isFocusValid) {\n      const editor = document.querySelector('#ag-editor-id').parentNode\n      editor.blur()\n\n      return new Cursor({\n        start: null,\n        end: null,\n        anchor: null,\n        focus: null\n      })\n    }\n\n    // fix bug click empty line, the cursor will jump to the end of pre line.\n    if (\n      anchorNode === focusNode &&\n      anchorOffset === focusOffset &&\n      anchorNode.textContent === '\\n' &&\n      focusOffset === 0\n    ) {\n      focusOffset = anchorOffset = 1\n    }\n\n    const anchorParagraph = findNearestParagraph(anchorNode)\n    const focusParagraph = findNearestParagraph(focusNode)\n\n    let aOffset = getOffsetOfParagraph(anchorNode, anchorParagraph) + anchorOffset\n    let fOffset = getOffsetOfParagraph(focusNode, focusParagraph) + focusOffset\n\n    // fix input after image.\n    if (\n      anchorNode === focusNode &&\n      anchorOffset === focusOffset &&\n      anchorNode.parentNode.classList.contains('ag-image-container') &&\n      anchorNode.previousElementSibling &&\n      anchorNode.previousElementSibling.nodeName === 'IMG'\n    ) {\n      const imageWrapper = anchorNode.parentNode.parentNode\n      const preElement = imageWrapper.previousElementSibling\n      aOffset = 0\n      if (preElement) {\n        aOffset += getOffsetOfParagraph(preElement, anchorParagraph)\n        aOffset += getTextContent(preElement, [CLASS_OR_ID.AG_MATH_RENDER, CLASS_OR_ID.AG_RUBY_RENDER]).length\n      }\n      aOffset += getTextContent(imageWrapper, [CLASS_OR_ID.AG_MATH_RENDER, CLASS_OR_ID.AG_RUBY_RENDER]).length\n      fOffset = aOffset\n    }\n\n    if (\n      anchorNode === focusNode &&\n      anchorNode.nodeType === 1 &&\n      anchorNode.classList.contains('ag-image-container')\n    ) {\n      const imageWrapper = anchorNode.parentNode\n      const preElement = imageWrapper.previousElementSibling\n      aOffset = 0\n      if (preElement) {\n        aOffset += getOffsetOfParagraph(preElement, anchorParagraph)\n        aOffset += getTextContent(preElement, [CLASS_OR_ID.AG_MATH_RENDER, CLASS_OR_ID.AG_RUBY_RENDER]).length\n      }\n      if (anchorOffset === 1) {\n        aOffset += getTextContent(imageWrapper, [CLASS_OR_ID.AG_MATH_RENDER, CLASS_OR_ID.AG_RUBY_RENDER]).length\n      }\n      fOffset = aOffset\n    }\n\n    const anchor = { key: anchorParagraph.id, offset: aOffset }\n\n    const focus = { key: focusParagraph.id, offset: fOffset }\n    const result = new Cursor({ anchor, focus })\n\n    if (needFix) {\n      this.setCursorRange(result)\n    }\n\n    return result\n  }\n\n  // topOffset is the line counts above cursor, and bottomOffset is line counts bellow cursor.\n  getCursorYOffset (paragraph) {\n    const { y } = this.getCursorCoords()\n    const { height, top } = paragraph.getBoundingClientRect()\n    const lineHeight = parseFloat(getComputedStyle(paragraph).lineHeight)\n    const topOffset = Math.round((y - top) / lineHeight)\n    const bottomOffset = Math.round((top + height - lineHeight - y) / lineHeight)\n\n    return {\n      topOffset,\n      bottomOffset\n    }\n  }\n\n  getCursorCoords () {\n    const sel = this.doc.getSelection()\n    let range\n    let x = 0\n    let y = 0\n    let width = 0\n\n    if (sel.rangeCount) {\n      range = sel.getRangeAt(0).cloneRange()\n      if (range.getClientRects) {\n        // range.collapse(true)\n        let rects = range.getClientRects()\n        if (rects.length === 0 && range.startContainer && (range.startContainer.nodeType === Node.ELEMENT_NODE || range.startContainer.nodeType === Node.TEXT_NODE)) {\n          rects = range.startContainer.parentElement.getClientRects()\n          // prevent tiny vibrations\n          if (rects.length) {\n            const rect = rects[0]\n            rect.y = rect.y + 1\n          }\n        }\n        if (rects.length) {\n          const { left, top, x: rectX, y: rectY, width: rWidth } = rects[0]\n          x = rectX || left\n          y = rectY || top\n          width = rWidth\n        }\n      }\n    }\n\n    return { x, y, width }\n  }\n\n  getSelectionEnd () {\n    const node = this.doc.getSelection().focusNode\n    const endNode = (node && node.nodeType === 3 ? node.parentNode : node)\n\n    return endNode\n  }\n}\n\nexport default new Selection(document)\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/ui/emojis/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/importMarkdown.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/escapeCharacter.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/turndownService.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/prism/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/prism/loadLanguage.js",["1212","1213"],"import languages from './languages'\nlet peerDependentsMap = null\nexport const loadedCache = new Set(['markup', 'css', 'clike', 'javascript'])\nconst prismComponentCache = new Map()\n\nfunction getPeerDependentsMap () {\n  const peerDependentsMap = {}\n  Object.keys(languages).forEach(function (language) {\n    if (language === 'meta') {\n      return false\n    }\n    if (languages[language].peerDependencies) {\n      let peerDependencies = languages[language].peerDependencies\n      if (!Array.isArray(peerDependencies)) {\n        peerDependencies = [peerDependencies]\n      }\n      peerDependencies.forEach(function (peerDependency) {\n        if (!peerDependentsMap[peerDependency]) {\n          peerDependentsMap[peerDependency] = []\n        }\n        peerDependentsMap[peerDependency].push(language)\n      })\n    }\n  })\n  return peerDependentsMap\n}\n\nfunction getPeerDependents (mainLanguage) {\n  if (!peerDependentsMap) {\n    peerDependentsMap = getPeerDependentsMap()\n  }\n  return peerDependentsMap[mainLanguage] || []\n}\n\n// Look for the origin languge by alias\nexport const transfromAliasToOrigin = arr => {\n  const result = []\n  for (const lang of arr) {\n    if (languages[lang]) {\n      result.push(lang)\n    } else {\n      const language = Object.keys(languages).find(name => {\n        const l = languages[name]\n        if (l.alias) {\n          return l.alias === lang || Array.isArray(l.alias) && l.alias.includes(lang)\n        }\n        return false\n      })\n\n      if (language) {\n        result.push(language)\n      } else {\n        // The lang is not exist, the will handle in `initLoadLanguage`\n        result.push(lang)\n      }\n    }\n  }\n  return result\n}\n\nfunction initLoadLanguage (Prism) {\n  return async function loadLanguages (arr, withoutDependencies) {\n    // If no argument is passed, load all components\n    if (!arr) {\n      arr = Object.keys(languages).filter(function (language) {\n        return language !== 'meta'\n      })\n    }\n    if (arr && !arr.length) {\n      return Promise.reject(new Error('The first parameter should be a list of load languages or single language.'))\n    }\n\n    if (!Array.isArray(arr)) {\n      arr = [arr]\n    }\n\n    const promises = []\n    const transformedLangs = transfromAliasToOrigin(arr)\n    for (const language of transformedLangs) {\n      // handle not existed\n      if (!languages[language]) {\n        promises.push(Promise.resolve({\n          lang: language,\n          status: 'noexist'\n        }))\n        continue\n      }\n      // handle already cached\n      if (loadedCache.has(language)) {\n        promises.push(Promise.resolve({\n          lang: language,\n          status: 'cached'\n        }))\n        continue\n      }\n\n      // Load dependencies first\n      if (!withoutDependencies && languages[language].require) {\n        const results = await loadLanguages(languages[language].require)\n        promises.push(...results)\n      }\n\n      delete Prism.languages[language]\n      if (!prismComponentCache.has(language)) {\n        await import('prismjs/components/prism-' + language)\n        prismComponentCache.set(language, Prism.languages[language])\n      } else {\n        Prism.languages[language] = prismComponentCache.get(language)\n      }\n      loadedCache.add(language)\n      promises.push(Promise.resolve({\n        status: 'loaded',\n        lang: language\n      }))\n\n      // Reload dependents\n      const dependents = getPeerDependents(language).filter(function (dependent) {\n        // If dependent language was already loaded,\n        // we want to reload it.\n        if (Prism.languages[dependent]) {\n          delete Prism.languages[dependent]\n          loadedCache.delete(dependent)\n          return true\n        }\n        return false\n      })\n      if (dependents.length) {\n        const results = await loadLanguages(dependents, true)\n        promises.push(...results)\n      }\n    }\n\n    return Promise.all(promises)\n  }\n}\n\nexport default initLoadLanguage\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/linkCtrl.js",["1214"],"const linkCtrl = ContentState => {\n  /**\n   * Change a link into text.\n   */\n  ContentState.prototype.unlink = function (linkInfo) {\n    const { key, token } = linkInfo\n    const block = this.getBlock(key)\n    const { text } = block\n    let anchor\n    switch (token.type) {\n      case 'html_tag':\n        anchor = token.content\n        break\n      case 'link':\n        anchor = token.href\n        break\n      case 'text': {\n        const match = /^\\[(.+?)\\]/.exec(token.raw)\n        if (match && match[1]) {\n          anchor = match[1]\n        }\n        break\n      }\n    }\n    if (!anchor) {\n      console.error('Can not find anchor when unlink')\n      return\n    }\n    block.text = text.substring(0, token.range.start) + anchor + text.substring(token.range.end)\n    this.cursor = {\n      start: {\n        key,\n        offset: token.range.start\n      },\n      end: {\n        key,\n        offset: +token.range.start + anchor.length\n      }\n    }\n\n    this.singleRender(block)\n    return this.muya.dispatchChange()\n  }\n}\n\nexport default linkCtrl\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/footnoteCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/dragDropCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/emojiCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/tocCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/imageCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/inputCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/clickCtrl.js",["1215"],"import selection from '../selection';\nimport { isMuyaEditorElement } from '../selection/dom';\nimport { HAS_TEXT_BLOCK_REG, CLASS_OR_ID } from '../config';\nimport { getParentCheckBox } from '../utils/getParentCheckBox';\nimport { cumputeCheckboxStatus } from '../utils/cumputeCheckBoxStatus';\n\nconst clickCtrl = (ContentState) => {\n  ContentState.prototype.clickHandler = function (event) {\n    const { eventCenter } = this.muya;\n    const { target } = event;\n    if (isMuyaEditorElement(target)) {\n      const lastBlock = this.getLastBlock();\n      const archor = this.findOutMostBlock(lastBlock);\n      const archorParagraph = document.querySelector(`#${archor.key}`);\n      const rect = archorParagraph.getBoundingClientRect();\n      // If click below the last paragraph\n      // and the last paragraph is not empty, create a new empty paragraph\n      if (event.clientY > rect.top + rect.height) {\n        let needToInsertNewParagraph = false;\n        if (lastBlock.type === 'span') {\n          if (\n            /atxLine|paragraphContent/.test(lastBlock.functionType) &&\n            /\\S/.test(lastBlock.text)\n          ) {\n            needToInsertNewParagraph = true;\n          }\n          if (!/atxLine|paragraphContent/.test(lastBlock.functionType)) {\n            needToInsertNewParagraph = true;\n          }\n        } else {\n          needToInsertNewParagraph = true;\n        }\n\n        if (needToInsertNewParagraph) {\n          event.preventDefault();\n          const paragraphBlock = this.createBlockP();\n          this.insertAfter(paragraphBlock, archor);\n          const key = paragraphBlock.children[0].key;\n          const offset = 0;\n          this.cursor = {\n            start: { key, offset },\n            end: { key, offset },\n          };\n\n          return this.render();\n        }\n      }\n    }\n    // handle front menu click\n    const { start: oldStart, end: oldEnd } = this.cursor;\n    if (oldStart && oldEnd) {\n      let hasSameParent = false;\n      const startBlock = this.getBlock(oldStart.key);\n      const endBlock = this.getBlock(oldEnd.key);\n      if (startBlock && endBlock) {\n        const startOutBlock = this.findOutMostBlock(startBlock);\n        const endOutBlock = this.findOutMostBlock(endBlock);\n        hasSameParent = startOutBlock === endOutBlock;\n      }\n      // show the muya-front-menu only when the cursor in the same paragraph\n      if (target.closest('.ag-front-icon') && hasSameParent) {\n        const currentBlock = this.findOutMostBlock(startBlock);\n        const frontIcon = target.closest('.ag-front-icon');\n        const rect = frontIcon.getBoundingClientRect();\n        const reference = {\n          getBoundingClientRect() {\n            return rect;\n          },\n          clientWidth: rect.width,\n          clientHeight: rect.height,\n          id: currentBlock.key,\n        };\n        this.selectedBlock = currentBlock;\n        eventCenter.dispatch('muya-front-menu', {\n          reference,\n          outmostBlock: currentBlock,\n          startBlock,\n          endBlock,\n        });\n        return this.partialRender();\n      }\n    }\n    const { start, end } = selection.getCursorRange();\n    // fix #625, the selection maybe not in edit area.\n    if (!start || !end) {\n      return;\n    }\n    // format-click\n    const node = selection.getSelectionStart();\n    const inlineNode = node ? node.closest('.ag-inline-rule') : null;\n\n    // link-format-click\n    let parentNode = inlineNode;\n    while (\n      parentNode !== null &&\n      parentNode.classList.contains(CLASS_OR_ID.AG_INLINE_RULE)\n    ) {\n      if (parentNode.tagName === 'A') {\n        const formatType = 'link'; // auto link or []() link\n        const data = {\n          text: inlineNode.textContent,\n          href: parentNode.getAttribute('href'),\n        };\n        eventCenter.dispatch('format-click', {\n          event,\n          formatType,\n          data,\n        });\n        break;\n      } else {\n        parentNode = parentNode.parentNode;\n      }\n    }\n\n    if (inlineNode) {\n      let formatType = null;\n      let data = null;\n      switch (inlineNode.tagName) {\n        case 'SPAN': {\n          if (inlineNode.hasAttribute('data-emoji')) {\n            formatType = 'emoji';\n            data = inlineNode.getAttribute('data-emoji');\n          } else if (inlineNode.classList.contains('ag-math-text')) {\n            formatType = 'inline_math';\n            data = inlineNode.textContent;\n          }\n          break;\n        }\n        case 'STRONG': {\n          formatType = 'strong';\n          data = inlineNode.textContent;\n          break;\n        }\n        case 'EM': {\n          formatType = 'em';\n          data = inlineNode.textContent;\n          break;\n        }\n        case 'DEL': {\n          formatType = 'del';\n          data = inlineNode.textContent;\n          break;\n        }\n        case 'CODE': {\n          formatType = 'inline_code';\n          data = inlineNode.textContent;\n          break;\n        }\n      }\n      if (formatType) {\n        eventCenter.dispatch('format-click', {\n          event,\n          formatType,\n          data,\n        });\n      }\n    }\n    const block = this.getBlock(start.key);\n    let needRender = false;\n    // is show format float box?\n    if (\n      start.key === end.key &&\n      start.offset !== end.offset &&\n      HAS_TEXT_BLOCK_REG.test(block.type) &&\n      block.functionType !== 'codeContent' &&\n      block.functionType !== 'languageInput'\n    ) {\n      const reference = this.getPositionReference();\n      const { formats } = this.selectionFormats();\n      eventCenter.dispatch('muya-format-picker', { reference, formats });\n    }\n\n    // update '```xxx' to code block when you click other place or use press arrow key.\n    if (block && start.key !== this.cursor.start.key) {\n      const oldBlock = this.getBlock(this.cursor.start.key);\n      if (oldBlock) {\n        needRender = needRender || this.codeBlockUpdate(oldBlock);\n      }\n    }\n\n    // change active status when paragraph changed\n    if (\n      start.key !== this.cursor.start.key ||\n      end.key !== this.cursor.end.key\n    ) {\n      needRender = true;\n    }\n\n    const needMarkedUpdate =\n      this.checkNeedRender(this.cursor) || this.checkNeedRender({ start, end });\n\n    if (needRender) {\n      this.cursor = { start, end };\n      return this.partialRender();\n    } else if (needMarkedUpdate) {\n      // Fix: whole select can not be canceled #613\n      requestAnimationFrame(() => {\n        const cursor = selection.getCursorRange();\n        if (!cursor.start || !cursor.end) {\n          return;\n        }\n        this.cursor = cursor;\n\n        return this.partialRender();\n      });\n    } else {\n      this.cursor = { start, end };\n    }\n  };\n\n  ContentState.prototype.setCheckBoxState = function (checkbox, checked) {\n    checkbox.checked = checked;\n    const block = this.getBlock(checkbox.id);\n    block.checked = checked;\n    checkbox.classList.toggle(CLASS_OR_ID.AG_CHECKBOX_CHECKED);\n  };\n\n  ContentState.prototype.updateParentsCheckBoxState = function (checkbox) {\n    let parent = getParentCheckBox(checkbox);\n    while (parent !== null) {\n      const checked = cumputeCheckboxStatus(parent);\n      if (parent.checked !== checked) {\n        this.setCheckBoxState(parent, checked);\n        parent = getParentCheckBox(parent);\n      } else {\n        break;\n      }\n    }\n  };\n\n  ContentState.prototype.updateChildrenCheckBoxState = function (\n    checkbox,\n    checked\n  ) {\n    const checkboxes = checkbox.parentElement.querySelectorAll(\n      `input ~ ul .${CLASS_OR_ID.AG_TASK_LIST_ITEM_CHECKBOX}`\n    );\n    const len = checkboxes.length;\n    for (let i = 0; i < len; i++) {\n      const checkbox = checkboxes[i];\n      if (checkbox.checked !== checked) {\n        this.setCheckBoxState(checkbox, checked);\n      }\n    }\n  };\n\n  // handle task list item checkbox click\n  ContentState.prototype.listItemCheckBoxClick = function (checkbox) {\n    const { checked } = checkbox;\n    this.setCheckBoxState(checkbox, checked);\n\n    // A task checked, then related task should be update\n    const { autoCheck } = this.muya.options;\n    if (autoCheck) {\n      this.updateChildrenCheckBoxState(checkbox, checked);\n      this.updateParentsCheckBoxState(checkbox);\n    }\n\n    const block = this.getBlock(checkbox.id);\n    const parentBlock = this.getParent(block);\n    const firstEditableBlock = this.firstInDescendant(parentBlock);\n    const { key } = firstEditableBlock;\n    const offset = 0;\n    this.cursor = { start: { key, offset }, end: { key, offset } };\n    return this.partialRender();\n  };\n};\n\nexport default clickCtrl;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/htmlBlock.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/containerCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/searchCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/tabCtrl.js",["1216","1217","1218"],"import selection from '../selection'\nimport { HTML_TAGS, VOID_HTML_TAGS, HAS_TEXT_BLOCK_REG } from '../config'\nimport { tokenizer } from '../parser'\n\n/**\n * parseSelector\n * div#id.className => {tag: 'div', id: 'id', className: 'className', isVoid: false}\n */\n\nconst parseSelector = (str = '') => {\n  const REG_EXP = /(#|\\.)([^#.]+)/\n  let tag = ''\n  let id = ''\n  let className = ''\n  let isVoid = false\n  let cap\n  for (const tagName of HTML_TAGS) {\n    if (str.startsWith(tagName) && (!str[tagName.length] || /#|\\./.test(str[tagName.length]))) {\n      tag = tagName\n      if (VOID_HTML_TAGS.indexOf(tagName) > -1) isVoid = true\n      str = str.substring(tagName.length)\n    }\n  }\n  if (tag !== '') {\n    cap = REG_EXP.exec(str)\n    while (cap && str.length) {\n      if (cap[1] === '#') {\n        id = cap[2]\n      } else {\n        className = cap[2]\n      }\n      str = str.substring(cap[0].length)\n      cap = REG_EXP.exec(str)\n    }\n  }\n  return { tag, id, className, isVoid }\n}\n\nconst BOTH_SIDES_FORMATS = ['strong', 'em', 'inline_code', 'image', 'link', 'reference_image', 'reference_link', 'emoji', 'del', 'html_tag', 'inline_math']\n\nconst tabCtrl = ContentState => {\n  ContentState.prototype.findNextCell = function (block) {\n    if (block.functionType !== 'cellContent') {\n      throw new Error('only th and td can have next cell')\n    }\n    const cellBlock = this.getParent(block)\n    const nextSibling = this.getBlock(cellBlock.nextSibling)\n    const rowBlock = this.getBlock(cellBlock.parent)\n    const tbOrTh = this.getBlock(rowBlock.parent)\n    if (nextSibling) {\n      return this.firstInDescendant(nextSibling)\n    } else {\n      if (rowBlock.nextSibling) {\n        const nextRow = this.getBlock(rowBlock.nextSibling)\n        return this.firstInDescendant(nextRow)\n      } else if (tbOrTh.type === 'thead') {\n        const tBody = this.getBlock(tbOrTh.nextSibling)\n        if (tBody && tBody.children.length) {\n          return this.firstInDescendant(tBody)\n        }\n      }\n    }\n\n    return false\n  }\n\n  ContentState.prototype.findPreviousCell = function (block) {\n    if (block.functionType !== 'cellContent') {\n      throw new Error('only th and td can have previous cell')\n    }\n    const cellBlock = this.getParent(block)\n    const previousSibling = this.getBlock(cellBlock.preSibling)\n    const rowBlock = this.getBlock(cellBlock.parent)\n    const tbOrTh = this.getBlock(rowBlock.parent)\n    if (previousSibling) {\n      return this.firstInDescendant(previousSibling)\n    } else {\n      if (rowBlock.preSibling) {\n        const previousRow = this.getBlock(rowBlock.preSibling)\n        return this.lastInDescendant(previousRow)\n      } else if (tbOrTh.type === 'tbody') {\n        const tHead = this.getBlock(tbOrTh.preSibling)\n        if (tHead && tHead.children.length) {\n          return this.lastInDescendant(tHead)\n        }\n      }\n    }\n    return block\n  }\n\n  ContentState.prototype.isUnindentableListItem = function (block) {\n    const parent = this.getParent(block)\n    const listItem = this.getParent(parent)\n    const list = this.getParent(listItem)\n    const listParent = this.getParent(list)\n    if (!this.isCollapse()) return false\n    if (listParent && listParent.type === 'li') {\n      return !list.preSibling ? 'REPLACEMENT' : 'INDENT'\n    }\n    return false\n  }\n\n  ContentState.prototype.isIndentableListItem = function () {\n    const { start, end } = this.cursor\n    const startBlock = this.getBlock(start.key)\n    const parent = this.getParent(startBlock)\n    if (parent.type !== 'p' || !parent.parent) {\n      return false\n    }\n\n    const listItem = this.getParent(parent)\n    if (listItem.type !== 'li' || start.key !== end.key || start.offset !== end.offset) {\n      return false\n    }\n\n    // Now we know it's a list item. Check whether we can indent the list item.\n    const list = this.getParent(listItem)\n    return list && /ol|ul/.test(list.type) && listItem.preSibling\n  }\n\n  ContentState.prototype.unindentListItem = function (block, type) {\n    const pBlock = this.getParent(block)\n    const listItem = this.getParent(pBlock)\n    const list = this.getParent(listItem)\n    const listParent = this.getParent(list)\n    if (type === 'REPLACEMENT') {\n      this.insertBefore(pBlock, list)\n      if (this.isOnlyChild(listItem)) {\n        this.removeBlock(list)\n      } else {\n        this.removeBlock(listItem)\n      }\n    } else if (type === 'INDENT') {\n      if (list.children.length === 1) {\n        this.removeBlock(list)\n      } else {\n        const newList = this.createBlock(list.type)\n        let target = this.getNextSibling(listItem)\n        while (target) {\n          this.appendChild(newList, target)\n          const temp = target\n          target = this.getNextSibling(target)\n          this.removeBlock(temp, list)\n        }\n\n        if (newList.children.length) this.appendChild(listItem, newList)\n        this.removeBlock(listItem, list)\n        if (!list.children.length) {\n          this.removeBlock(list)\n        }\n      }\n      this.insertAfter(listItem, listParent)\n      let target = this.getNextSibling(list)\n      while (target) {\n        this.appendChild(listItem, target)\n        this.removeBlock(target, listParent)\n        target = this.getNextSibling(target)\n      }\n    }\n\n    return this.partialRender()\n  }\n\n  ContentState.prototype.indentListItem = function () {\n    const { start } = this.cursor\n    const startBlock = this.getBlock(start.key)\n    const parent = this.getParent(startBlock)\n    const listItem = this.getParent(parent)\n    const list = this.getParent(listItem)\n    const prevListItem = this.getPreSibling(listItem)\n\n    this.removeBlock(listItem)\n\n    // Search for a list in previous block\n    let newList = this.getLastChild(prevListItem)\n    if (!newList || !/ol|ul/.test(newList.type)) {\n      newList = this.createBlock(list.type)\n      this.appendChild(prevListItem, newList)\n    }\n\n    // Update item type only if we insert into an existing list\n    if (newList.children.length !== 0) {\n      listItem.isLooseListItem = newList.children[0].isLooseListItem\n    }\n\n    this.appendChild(newList, listItem)\n    return this.partialRender()\n  }\n\n  ContentState.prototype.insertTab = function () {\n    const tabSize = this.tabSize\n    const tabCharacter = String.fromCharCode(160).repeat(tabSize)\n    const { start, end } = this.cursor\n    const startBlock = this.getBlock(start.key)\n    const endBlock = this.getBlock(end.key)\n    if (start.key === end.key && start.offset === end.offset) {\n      startBlock.text = startBlock.text.substring(0, start.offset) +\n        tabCharacter + endBlock.text.substring(end.offset)\n      const key = start.key\n      const offset = start.offset + tabCharacter.length\n      this.cursor = {\n        start: { key, offset },\n        end: { key, offset }\n      }\n      return this.partialRender()\n    }\n  }\n\n  ContentState.prototype.checkCursorAtEndFormat = function (text, offset) {\n    const { labels } = this.stateRender\n    const tokens = tokenizer(text, {\n      hasBeginRules: false,\n      labels,\n      options: this.muya.options\n    })\n    let result = null\n    const walkTokens = tkns => {\n      for (const token of tkns) {\n        const { marker, type, range, children, srcAndTitle, hrefAndTitle, backlash, closeTag, isFullLink, label } = token\n        const { start, end } = range\n        if (BOTH_SIDES_FORMATS.includes(type) && offset > start && offset < end) {\n          switch (type) {\n            case 'strong':\n            case 'em':\n            case 'inline_code':\n            case 'emoji':\n            case 'del':\n            case 'inline_math': {\n              if (marker && offset === end - marker.length) {\n                result = {\n                  offset: marker.length\n                }\n                return\n              }\n              break\n            }\n            case 'image':\n            case 'link': {\n              const linkTitleLen = (srcAndTitle || hrefAndTitle).length\n              const secondLashLen = backlash && backlash.second ? backlash.second.length : 0\n              if (offset === end - 3 - (linkTitleLen + secondLashLen)) {\n                result = {\n                  offset: 2\n                }\n                return\n              } else if (offset === end - 1) {\n                result = {\n                  offset: 1\n                }\n                return\n              }\n              break\n            }\n            case 'reference_image':\n            case 'reference_link': {\n              const labelLen = label ? label.length : 0\n              const secondLashLen = backlash && backlash.second ? backlash.second.length : 0\n              if (isFullLink) {\n                if (offset === end - 3 - labelLen - secondLashLen) {\n                  result = {\n                    offset: 2\n                  }\n                  return\n                } else if (offset === end - 1) {\n                  result = {\n                    offset: 1\n                  }\n                  return\n                }\n              } else if (offset === end - 1) {\n                result = {\n                  offset: 1\n                }\n                return\n              }\n              break\n            }\n            case 'html_tag': {\n              if (closeTag && offset === end - closeTag.length) {\n                result = {\n                  offset: closeTag.length\n                }\n                return\n              }\n              break\n            }\n            default:\n              break\n          }\n        }\n        if (children && children.length) {\n          walkTokens(children)\n        }\n      }\n    }\n    walkTokens(tokens)\n\n    return result\n  }\n\n  ContentState.prototype.tabHandler = function (event) {\n    // disable tab focus\n    event.preventDefault()\n\n    const { start, end } = selection.getCursorRange()\n    if (!start || !end) {\n      return\n    }\n    const startBlock = this.getBlock(start.key)\n    const endBlock = this.getBlock(end.key)\n\n    if (event.shiftKey && !startBlock.functionType === 'cellContent') {\n      const unindentType = this.isUnindentableListItem(startBlock)\n      if (unindentType) {\n        this.unindentListItem(startBlock, unindentType)\n      }\n      return\n    }\n\n    // Handle `tab` to jump to the end of format when the cursor is at the end of format content.\n    if (\n      start.key === end.key &&\n      start.offset === end.offset &&\n      HAS_TEXT_BLOCK_REG.test(startBlock.type) &&\n      startBlock.functionType !== 'codeContent' && // code content has no inline syntax\n      startBlock.functionType !== 'languageInput' // language input textarea has no inline syntax\n    ) {\n      const { text, key } = startBlock\n      const { offset } = start\n      const atEnd = this.checkCursorAtEndFormat(text, offset)\n      if (atEnd) {\n        this.cursor = {\n          start: { key, offset: offset + atEnd.offset },\n          end: { key, offset: offset + atEnd.offset }\n        }\n        return this.partialRender()\n      }\n    }\n\n    // Auto-complete of inline html tag and html block and `html` code block.\n    if (\n      start.key === end.key &&\n      start.offset === end.offset &&\n      startBlock.type === 'span' &&\n      (!startBlock.functionType || startBlock.functionType === 'codeContent' && /markup|html|xml|svg|mathml/.test(startBlock.lang))\n    ) {\n      const { text } = startBlock\n      const lastWordBeforeCursor = text.substring(0, start.offset).split(/\\s+/).pop()\n      const { tag, isVoid, id, className } = parseSelector(lastWordBeforeCursor)\n\n      if (tag) {\n        const preText = text.substring(0, start.offset - lastWordBeforeCursor.length)\n        const postText = text.substring(end.offset)\n        if (!tag) return\n        let html = `<${tag}`\n        const key = startBlock.key\n        let startOffset = 0\n        let endOffset = 0\n        switch (tag) {\n          case 'img':\n            html += ' alt=\"\" src=\"\"'\n            startOffset = endOffset = html.length - 1\n            break\n          case 'input':\n            html += ' type=\"text\"'\n            startOffset = html.length - 5\n            endOffset = html.length - 1\n            break\n          case 'a':\n            html += ' href=\"\"'\n            startOffset = endOffset = html.length - 1\n            break\n          case 'link':\n            html += ' rel=\"stylesheet\" href=\"\"'\n            startOffset = endOffset = html.length - 1\n            break\n        }\n        if (id) {\n          html += ` id=\"${id}\"`\n        }\n        if (className) {\n          html += ` class=\"${className}\"`\n        }\n        html += '>'\n        if (startOffset === 0 && endOffset === 0) {\n          startOffset = endOffset = html.length\n        }\n        if (!isVoid) {\n          html += `</${tag}>`\n        }\n        startBlock.text = preText + html + postText\n        this.cursor = {\n          start: { key, offset: startOffset + preText.length },\n          end: { key, offset: endOffset + preText.length }\n        }\n        return this.partialRender()\n      }\n    }\n\n    // Handle `tab` key in table cell.\n    let nextCell\n    if (start.key === end.key && startBlock.functionType === 'cellContent') {\n      nextCell = event.shiftKey\n        ? this.findPreviousCell(startBlock)\n        : this.findNextCell(startBlock)\n    } else if (endBlock.functionType === 'cellContent') {\n      nextCell = endBlock\n    }\n    if (nextCell) {\n      const { key } = nextCell\n\n      const offset = 0\n      this.cursor = {\n        start: { key, offset },\n        end: { key, offset }\n      }\n\n      const figure = this.closest(nextCell, 'figure')\n      return this.singleRender(figure)\n    }\n\n    if (this.isIndentableListItem()) {\n      return this.indentListItem()\n    }\n    return this.insertTab()\n  }\n}\n\nexport default tabCtrl\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/formatCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/pasteCtrl.js",["1219"],"\nimport { PARAGRAPH_TYPES, PREVIEW_DOMPURIFY_CONFIG, HAS_TEXT_BLOCK_REG, IMAGE_EXT_REG, URL_REG } from '../config'\nimport { sanitize, getUniqueId, getImageInfo as getImageSrc, getPageTitle } from '../utils'\nimport { getImageInfo } from '../utils/getImageInfo'\n\nconst LIST_REG = /ul|ol/\nconst LINE_BREAKS_REG = /\\n/\n\nconst pasteCtrl = ContentState => {\n  // check paste type: `MERGE` or `NEWLINE`\n  ContentState.prototype.checkPasteType = function (start, fragment) {\n    const fragmentType = fragment.type\n    const parent = this.getParent(start)\n\n    if (fragmentType === 'p') {\n      return 'MERGE'\n    } else if (/^h\\d/.test(fragmentType)) {\n      if (start.text) {\n        return 'MERGE'\n      } else {\n        return 'NEWLINE'\n      }\n    } else if (LIST_REG.test(fragmentType)) {\n      const listItem = this.getParent(parent)\n      const list = listItem && listItem.type === 'li' ? this.getParent(listItem) : null\n      if (list) {\n        if (\n          list.listType === fragment.listType &&\n          listItem.bulletMarkerOrDelimiter === fragment.children[0].bulletMarkerOrDelimiter\n        ) {\n          return 'MERGE'\n        } else {\n          return 'NEWLINE'\n        }\n      } else {\n        return 'NEWLINE'\n      }\n    } else {\n      return 'NEWLINE'\n    }\n  }\n\n  // Try to identify the data type.\n  ContentState.prototype.checkCopyType = function (html, text) {\n    let type = 'normal'\n    if (!html && text) {\n      type = 'copyAsMarkdown'\n      const match = /^<([a-zA-Z\\d-]+)(?=\\s|>).*?>[\\s\\S]+?<\\/([a-zA-Z\\d-]+)>$/.exec(text.trim())\n      if (match && match[1]) {\n        const tag = match[1]\n        if (tag === 'table' && match.length === 3 && match[2] === 'table') {\n          // Try to import a single table\n          const tmp = document.createElement('table')\n          tmp.innerHTML = text\n          if (tmp.childElementCount === 1) {\n            return 'htmlToMd'\n          }\n        }\n\n        // TODO: We could try to import HTML elements such as headings, text and lists to markdown for better UX.\n        type = PARAGRAPH_TYPES.find(type => type === tag) ? 'copyAsHtml' : type\n      }\n    }\n    return type\n  }\n\n  ContentState.prototype.standardizeHTML = async function (html) {\n    // Only extract the `body.innerHTML` when the `html` is a full HTML Document.\n    if (/<body>[\\s\\S]*<\\/body>/.test(html)) {\n      const match = /<body>([\\s\\S]*)<\\/body>/.exec(html)\n      if (match && typeof match[1] === 'string') {\n        html = match[1]\n      }\n    }\n\n    // Prevent XSS and sanitize HTML.\n    const { disableHtml } = this.muya.options\n    const sanitizedHtml = sanitize(html, PREVIEW_DOMPURIFY_CONFIG, disableHtml)\n    const tempWrapper = document.createElement('div')\n    tempWrapper.innerHTML = sanitizedHtml\n\n    // Special process for turndown.js, needed for Number app on macOS.\n    const tables = Array.from(tempWrapper.querySelectorAll('table'))\n    for (const table of tables) {\n      const row = table.querySelector('tr')\n      if (row.firstElementChild.tagName !== 'TH') {\n        [...row.children].forEach(cell => {\n          const th = document.createElement('th')\n          th.innerHTML = cell.innerHTML\n          cell.replaceWith(th)\n        })\n      }\n      const paragraphs = Array.from(table.querySelectorAll('p'))\n      for (const p of paragraphs) {\n        const span = document.createElement('span')\n        span.innerHTML = p.innerHTML\n        p.replaceWith(span)\n      }\n\n      const tds = table.querySelectorAll('td')\n      for (const td of tds) {\n        const rawHtml = td.innerHTML\n        if (/<br>/.test(rawHtml)) {\n          td.innerHTML = rawHtml.replace(/<br>/g, '&lt;br&gt;')\n        }\n      }\n    }\n\n    // Prevent it parse into a link if copy a url.\n    const links = Array.from(tempWrapper.querySelectorAll('a'))\n    for (const link of links) {\n      const href = link.getAttribute('href')\n      const text = link.textContent\n\n      if (href === text) {\n        const title = await getPageTitle(href)\n        if (title) {\n          link.textContent = title\n        } else {\n          const span = document.createElement('span')\n          span.innerHTML = text\n          link.replaceWith(span)\n        }\n      }\n    }\n    return tempWrapper.innerHTML\n  }\n\n  ContentState.prototype.pasteImage = async function (event) {\n    // Try to guess the clipboard file path.\n    const imagePath = this.muya.options.clipboardFilePath()\n    if (imagePath && typeof imagePath === 'string' && IMAGE_EXT_REG.test(imagePath)) {\n      const id = `loading-${getUniqueId()}`\n      if (this.selectedImage) {\n        this.replaceImage(this.selectedImage, {\n          alt: id,\n          src: imagePath\n        })\n      } else {\n        this.insertImage({\n          alt: id,\n          src: imagePath\n        })\n      }\n      const nSrc = await this.muya.options.imageAction(imagePath, id)\n      const { src } = getImageSrc(imagePath)\n      if (src) {\n        this.stateRender.urlMap.set(nSrc, src)\n      }\n\n      const imageWrapper = this.muya.container.querySelector(`span[data-id=${id}]`)\n\n      if (imageWrapper) {\n        const imageInfo = getImageInfo(imageWrapper)\n        this.replaceImage(imageInfo, {\n          src: nSrc\n        })\n      }\n      return imagePath\n    }\n\n    const items = event.clipboardData && event.clipboardData.items\n    let file = null\n    if (items && items.length) {\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].type.indexOf('image') !== -1) {\n          file = items[i].getAsFile()\n          break\n        }\n      }\n    }\n\n    // handle paste to create inline image\n    if (file) {\n      const id = `loading-${getUniqueId()}`\n      if (this.selectedImage) {\n        this.replaceImage(this.selectedImage, {\n          alt: id,\n          src: ''\n        })\n      } else {\n        this.insertImage({\n          alt: id,\n          src: ''\n        })\n      }\n\n      const reader = new FileReader()\n      reader.onload = event => {\n        const base64 = event.target.result\n        const imageWrapper = this.muya.container.querySelector(`span[data-id=${id}]`)\n        const imageContainer = this.muya.container.querySelector(`span[data-id=${id}] .ag-image-container`)\n        this.stateRender.urlMap.set(id, base64)\n        if (imageContainer) {\n          imageWrapper.classList.remove('ag-empty-image')\n          imageWrapper.classList.add('ag-image-success')\n          const image = document.createElement('img')\n          image.src = base64\n          imageContainer.appendChild(image)\n        }\n      }\n      reader.readAsDataURL(file)\n\n      const nSrc = await this.muya.options.imageAction(file, id)\n      const base64 = this.stateRender.urlMap.get(id)\n      if (base64) {\n        this.stateRender.urlMap.set(nSrc, base64)\n        this.stateRender.urlMap.delete(id)\n      }\n      const imageWrapper = this.muya.container.querySelector(`span[data-id=${id}]`)\n\n      if (imageWrapper) {\n        const imageInfo = getImageInfo(imageWrapper)\n        this.replaceImage(imageInfo, {\n          src: nSrc\n        })\n      }\n      return file\n    }\n    return null\n  }\n\n  // Handle global events.\n  ContentState.prototype.docPasteHandler = async function (event) {\n    // TODO: Pasting into CodeMirror will not work for special data like images\n    // or tables (HTML) because it's not handled.\n\n    const file = await this.pasteImage(event)\n    if (file) {\n      return event.preventDefault()\n    }\n\n    if (this.selectedTableCells) {\n      const { start } = this.cursor\n      const startBlock = this.getBlock(start.key)\n      const { selectedTableCells: stc } = this\n\n      // Exactly one table cell is selected. Replace the cells text via default handler.\n      if (startBlock && startBlock.functionType === 'cellContent' && stc.row === 1 && stc.column === 1) {\n        this.pasteHandler(event)\n        return event.preventDefault()\n      }\n    }\n  }\n\n  // Handle `normal` and `pasteAsPlainText` paste for preview mode.\n  ContentState.prototype.pasteHandler = async function (event, type = 'normal', rawText, rawHtml) {\n    event.preventDefault()\n    event.stopPropagation()\n\n    const text = rawText || event.clipboardData.getData('text/plain')\n    let html = rawHtml || event.clipboardData.getData('text/html')\n\n    // Support pasted URLs from Firefox.\n    if (URL_REG.test(text) && !/\\s/.test(text) && !html) {\n      html = `<a href=\"${text}\">${text}</a>`\n    }\n\n    // Remove crap from HTML such as meta data and styles.\n    html = await this.standardizeHTML(html)\n\n    let copyType = this.checkCopyType(html, text)\n    const { start, end } = this.cursor\n    const startBlock = this.getBlock(start.key)\n    const endBlock = this.getBlock(end.key)\n    const parent = this.getParent(startBlock)\n\n    if (copyType === 'htmlToMd') {\n      html = text\n      copyType = 'normal'\n    }\n\n    if (start.key !== end.key) {\n      this.cutHandler()\n      return this.pasteHandler(event, type, rawText, rawHtml)\n    }\n\n    // NOTE: We should parse HTML if we can and use it instead the image (see GH#1271).\n    if (!html) {\n      const file = await this.pasteImage(event)\n      if (file) {\n        return\n      }\n    }\n\n    const appendHtml = (text) => {\n      startBlock.text = startBlock.text.substring(0, start.offset) + text + startBlock.text.substring(start.offset)\n      const { key } = start\n      const offset = start.offset + text.length\n      this.cursor = {\n        start: { key, offset },\n        end: { key, offset }\n      }\n    }\n\n    // Prepare paste\n    if (startBlock.type === 'span' && startBlock.functionType === 'languageInput') {\n      // Extract the first line from the language identifier (GH#553)\n      let language = text.trim().match(/^.*$/m)[0] || ''\n      const oldLanguageLength = startBlock.text.length\n      let offset = 0\n      if (start.offset !== 0 || end.offset !== oldLanguageLength) {\n        const prePartText = startBlock.text.substring(0, start.offset)\n        const postPartText = startBlock.text.substring(end.offset)\n\n        // Expect that the language doesn't contain new lines\n        language = prePartText + language + postPartText\n        offset = prePartText.length + language.length\n      } else {\n        offset = language.length\n      }\n\n      startBlock.text = language\n\n      const key = startBlock.key\n      this.cursor = {\n        start: { key, offset },\n        end: { key, offset }\n      }\n\n      // Hide code picker float box\n      const { eventCenter } = this.muya\n      eventCenter.dispatch('muya-code-picker', { reference: null })\n\n      // Update code block language and render\n      this.updateCodeLanguage(startBlock, language)\n      return\n    }\n\n    if (startBlock.type === 'span' && startBlock.functionType === 'codeContent') {\n      const blockText = startBlock.text\n      const prePartText = blockText.substring(0, start.offset)\n      const postPartText = blockText.substring(end.offset)\n      startBlock.text = prePartText + text + postPartText\n      const { key } = startBlock\n      const offset = start.offset + text.length\n      this.cursor = {\n        start: { key, offset },\n        end: { key, offset }\n      }\n\n      return this.partialRender()\n    }\n\n    if (startBlock.functionType === 'cellContent') {\n      let isOneCellSelected = false\n      if (this.selectedTableCells) {\n        const { selectedTableCells: stc } = this\n        // Replace cells text when one cell is selected.\n        if (stc.row === 1 && stc.column === 1) {\n          isOneCellSelected = true\n        } else {\n          // Cancel event, multiple cells are selected.\n          return this.partialRender()\n        }\n      }\n\n      const { key } = startBlock\n      const pendingText = text.trim().replace(/\\n/g, '<br/>')\n      let offset = pendingText.length\n      if (isOneCellSelected) {\n        // Replace text and deselect cell.\n        startBlock.text = pendingText\n        this.selectedTableCells = null\n      } else {\n        offset += start.offset\n        startBlock.text = startBlock.text.substring(0, start.offset) + pendingText + startBlock.text.substring(end.offset)\n      }\n\n      this.cursor = {\n        start: { key, offset },\n        end: { key, offset }\n      }\n      return this.partialRender()\n    }\n\n    // Handle paste event and transform data into internal block structure.\n    if (copyType === 'copyAsHtml') {\n      switch (type) {\n        case 'normal': {\n          const htmlBlock = this.createBlockP(text.trim())\n          this.insertAfter(htmlBlock, parent)\n          this.removeBlock(parent)\n          // handler heading\n          this.insertHtmlBlock(htmlBlock)\n          break\n        }\n        case 'pasteAsPlainText': {\n          const lines = text.trim().split(LINE_BREAKS_REG)\n          let htmlBlock = null\n\n          if (!startBlock.text || lines.length > 1) {\n            htmlBlock = this.createBlockP((startBlock.text ? lines.slice(1) : lines).join('\\n'))\n          }\n          if (htmlBlock) {\n            this.insertAfter(htmlBlock, parent)\n            this.insertHtmlBlock(htmlBlock)\n          }\n          if (startBlock.text) {\n            appendHtml(lines[0])\n          } else {\n            this.removeBlock(parent)\n          }\n          break\n        }\n      }\n      return this.partialRender()\n    }\n\n    const stateFragments = type === 'pasteAsPlainText' || copyType === 'copyAsMarkdown'\n      ? this.markdownToState(text)\n      : this.html2State(html)\n\n    if (stateFragments.length <= 0) {\n      return\n    }\n\n    // Step 1: if select content, cut the content, and chop the block text into two part by the cursor.\n    const cacheText = endBlock.text.substring(end.offset)\n    startBlock.text = startBlock.text.substring(0, start.offset)\n\n    // Step 2: when insert the fragments, check begin a new block, or insert into pre block.\n    const firstFragment = stateFragments[0]\n    const tailFragments = stateFragments.slice(1)\n    const pasteType = this.checkPasteType(startBlock, firstFragment)\n\n    const getLastBlock = blocks => {\n      const len = blocks.length\n      const lastBlock = blocks[len - 1]\n\n      if (lastBlock.children.length === 0 && HAS_TEXT_BLOCK_REG.test(lastBlock.type)) {\n        return lastBlock\n      } else {\n        if (lastBlock.editable === false) {\n          return getLastBlock(blocks[len - 2].children)\n        } else {\n          return getLastBlock(lastBlock.children)\n        }\n      }\n    }\n\n    const lastBlock = getLastBlock(stateFragments)\n    let key = lastBlock.key\n    let offset = lastBlock.text.length\n    lastBlock.text += cacheText\n\n    switch (pasteType) {\n      case 'MERGE': {\n        if (LIST_REG.test(firstFragment.type)) {\n          const listItems = firstFragment.children\n          const firstListItem = listItems[0]\n          const liChildren = firstListItem.children\n          const originListItem = this.getParent(parent)\n          const originList = this.getParent(originListItem)\n          const targetListType = firstFragment.children[0].isLooseListItem\n          const originListType = originList.children[0].isLooseListItem\n          // No matter copy loose list to tight list or vice versa, the result is one loose list.\n          if (targetListType !== originListType) {\n            if (!targetListType) {\n              firstFragment.children.forEach(item => (item.isLooseListItem = true))\n            } else {\n              originList.children.forEach(item => (item.isLooseListItem = true))\n            }\n          }\n\n          if (liChildren[0].type === 'p') {\n            // TODO @JOCS\n            startBlock.text += liChildren[0].children[0].text\n            const tail = liChildren.slice(1)\n            if (tail.length) {\n              tail.forEach(t => {\n                this.appendChild(originListItem, t)\n              })\n            }\n            const firstFragmentTail = listItems.slice(1)\n            if (firstFragmentTail.length) {\n              firstFragmentTail.forEach(t => {\n                this.appendChild(originList, t)\n              })\n            }\n          } else {\n            listItems.forEach(c => {\n              this.appendChild(originList, c)\n            })\n          }\n          let target = originList\n          tailFragments.forEach(block => {\n            this.insertAfter(block, target)\n            target = block\n          })\n        } else if (firstFragment.type === 'p' || /^h\\d/.test(firstFragment.type)) {\n          const text = firstFragment.children[0].text\n          const lines = text.split('\\n')\n          let target = parent\n          if (parent.headingStyle === 'atx') {\n            startBlock.text += lines[0]\n            if (lines.length > 1) {\n              const pBlock = this.createBlockP(lines.slice(1).join('\\n'))\n              this.insertAfter(parent, pBlock)\n              target = pBlock\n            }\n          } else {\n            startBlock.text += text\n          }\n\n          tailFragments.forEach(block => {\n            this.insertAfter(block, target)\n            target = block\n          })\n        }\n        break\n      }\n      case 'NEWLINE': {\n        let target = parent\n        stateFragments.forEach(block => {\n          this.insertAfter(block, target)\n          target = block\n        })\n        if (startBlock.text.length === 0) {\n          this.removeBlock(parent)\n        }\n        break\n      }\n      default: {\n        throw new Error('unknown paste type')\n      }\n    }\n\n    // Step 3: set cursor and render\n    let cursorBlock = this.getBlock(key)\n    if (!cursorBlock) {\n      key = startBlock.key\n      offset = startBlock.text.length - cacheText.length\n      cursorBlock = startBlock\n    }\n\n    this.cursor = {\n      start: {\n        key, offset\n      },\n      end: {\n        key, offset\n      }\n    }\n    this.checkInlineUpdate(cursorBlock)\n    this.partialRender()\n    this.muya.dispatchSelectionChange()\n    this.muya.dispatchSelectionFormats()\n    return this.muya.dispatchChange()\n  }\n}\n\nexport default pasteCtrl\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/copyCutCtrl.js",["1220","1221"],"import selection from '../selection'\nimport { CLASS_OR_ID } from '../config'\nimport { escapeHtml } from '../utils'\nimport { getSanitizeHtml } from '../utils/exportHtml'\nimport ExportMarkdown from '../utils/exportMarkdown'\nimport marked from '../parser/marked'\n\nconst copyCutCtrl = ContentState => {\n  ContentState.prototype.docCutHandler = function (event) {\n    const { selectedTableCells } = this\n    if (selectedTableCells) {\n      event.preventDefault()\n      return this.deleteSelectedTableCells(true)\n    }\n  }\n\n  ContentState.prototype.cutHandler = function () {\n    if (this.selectedTableCells) {\n      return\n    }\n    const { selectedImage } = this\n    if (selectedImage) {\n      const { key, token } = selectedImage\n      this.deleteImage({\n        key,\n        token\n      })\n      return\n    }\n    const { start, end } = selection.getCursorRange()\n    if (!start || !end) {\n      return\n    }\n    const startBlock = this.getBlock(start.key)\n    const endBlock = this.getBlock(end.key)\n    startBlock.text = startBlock.text.substring(0, start.offset) + endBlock.text.substring(end.offset)\n    if (start.key !== end.key) {\n      this.removeBlocks(startBlock, endBlock)\n    }\n    this.cursor = {\n      start,\n      end: start\n    }\n    this.checkInlineUpdate(startBlock)\n    this.partialRender()\n  }\n\n  ContentState.prototype.getClipBoradData = function () {\n    const { start, end } = selection.getCursorRange()\n    if (!start || !end) {\n      return { html: '', text: '' }\n    }\n    if (start.key === end.key) {\n      const startBlock = this.getBlock(start.key)\n      const { type, text, functionType } = startBlock\n      // Fix issue #942\n      if (type === 'span' && functionType === 'codeContent') {\n        const selectedText = text.substring(start.offset, end.offset)\n        return {\n          html: marked(selectedText, this.muya.options),\n          text: selectedText\n        }\n      }\n    }\n    const html = selection.getSelectionHtml()\n    const wrapper = document.createElement('div')\n    wrapper.innerHTML = html\n    const removedElements = wrapper.querySelectorAll(\n      `.${CLASS_OR_ID.AG_TOOL_BAR},\n      .${CLASS_OR_ID.AG_MATH_RENDER},\n      .${CLASS_OR_ID.AG_RUBY_RENDER},\n      .${CLASS_OR_ID.AG_HTML_PREVIEW},\n      .${CLASS_OR_ID.AG_MATH_PREVIEW},\n      .${CLASS_OR_ID.AG_COPY_REMOVE},\n      .${CLASS_OR_ID.AG_LANGUAGE_INPUT},\n      .${CLASS_OR_ID.AG_HTML_TAG} br,\n      .${CLASS_OR_ID.AG_FRONT_ICON}`\n    )\n\n    for (const e of removedElements) {\n      e.remove()\n    }\n\n    // Fix #1678 copy task list, and the first list item is not task list item.\n    const taskListItems = wrapper.querySelectorAll('li.ag-task-list-item')\n    for (const item of taskListItems) {\n      const firstChild = item.firstElementChild\n      if (firstChild && firstChild.nodeName !== 'INPUT') {\n        const originItem = document.querySelector(`#${item.id}`)\n        let checked = false\n        if (originItem && originItem.firstElementChild && originItem.firstElementChild.nodeName === 'INPUT') {\n          checked = originItem.firstElementChild.checked\n        }\n\n        const input = document.createElement('input')\n        input.setAttribute('type', 'checkbox')\n        if (checked) {\n          input.setAttribute('checked', true)\n        }\n\n        item.insertBefore(input, firstChild)\n      }\n    }\n\n    const images = wrapper.querySelectorAll('span.ag-inline-image img')\n    for (const image of images) {\n      const src = image.getAttribute('src')\n      let originSrc = null\n      for (const [sSrc, tSrc] of this.stateRender.urlMap.entries()) {\n        if (tSrc === src) {\n          originSrc = sSrc\n          break\n        }\n      }\n\n      if (originSrc) {\n        image.setAttribute('src', originSrc)\n      }\n    }\n\n    const hrs = wrapper.querySelectorAll('[data-role=hr]')\n    for (const hr of hrs) {\n      hr.replaceWith(document.createElement('hr'))\n    }\n\n    const headers = wrapper.querySelectorAll('[data-head]')\n    for (const header of headers) {\n      const p = document.createElement('p')\n      p.textContent = header.textContent\n      header.replaceWith(p)\n    }\n\n    // replace inline rule element: code, a, strong, em, del, auto_link to span element\n    // in order to escape turndown translation\n\n    const inlineRuleElements = wrapper.querySelectorAll(\n      `a.${CLASS_OR_ID.AG_INLINE_RULE},\n      code.${CLASS_OR_ID.AG_INLINE_RULE},\n      strong.${CLASS_OR_ID.AG_INLINE_RULE},\n      em.${CLASS_OR_ID.AG_INLINE_RULE},\n      del.${CLASS_OR_ID.AG_INLINE_RULE}`\n    )\n    for (const e of inlineRuleElements) {\n      const span = document.createElement('span')\n      span.textContent = e.textContent\n      e.replaceWith(span)\n    }\n\n    const aLinks = wrapper.querySelectorAll(`.${CLASS_OR_ID.AG_A_LINK}`)\n    for (const l of aLinks) {\n      const span = document.createElement('span')\n      span.innerHTML = l.innerHTML\n      l.replaceWith(span)\n    }\n\n    const codefense = wrapper.querySelectorAll('pre[data-role$=\\'code\\']')\n    for (const cf of codefense) {\n      const id = cf.id\n      const block = this.getBlock(id)\n      const language = block.lang || ''\n      const codeContent = cf.querySelector('.ag-code-content')\n      const value = escapeHtml(codeContent.textContent)\n      cf.innerHTML = `<code class=\"language-${language}\">${value}</code>`\n    }\n\n    const tightListItem = wrapper.querySelectorAll('.ag-tight-list-item')\n    for (const li of tightListItem) {\n      for (const item of li.childNodes) {\n        if (item.tagName === 'P' && item.childElementCount === 1 && item.classList.contains('ag-paragraph')) {\n          li.replaceChild(item.firstElementChild, item)\n        }\n      }\n    }\n\n    const htmlBlock = wrapper.querySelectorAll('figure[data-role=\\'HTML\\']')\n    for (const hb of htmlBlock) {\n      const codeContent = hb.querySelector('.ag-code-content')\n      const pre = document.createElement('pre')\n      pre.textContent = codeContent.textContent\n      hb.replaceWith(pre)\n    }\n\n    // Just work for turndown, turndown will add `leading` and `traling` space in line-break.\n    const lineBreaks = wrapper.querySelectorAll('span.ag-soft-line-break, span.ag-hard-line-break')\n    for (const b of lineBreaks) {\n      b.innerHTML = ''\n    }\n\n    const mathBlock = wrapper.querySelectorAll('figure.ag-container-block')\n    for (const mb of mathBlock) {\n      const preElement = mb.querySelector('pre[data-role]')\n      const functionType = preElement.getAttribute('data-role')\n      const codeContent = mb.querySelector('.ag-code-content')\n      const value = codeContent.textContent\n      let pre\n      switch (functionType) {\n        case 'multiplemath':\n          pre = document.createElement('pre')\n          pre.classList.add('multiple-math')\n          pre.textContent = value\n          mb.replaceWith(pre)\n          break\n        case 'mermaid':\n        case 'flowchart':\n        case 'sequence':\n        case 'vega-lite':\n          pre = document.createElement('pre')\n          pre.innerHTML = `<code class=\"language-${functionType}\">${value}</code>`\n          mb.replaceWith(pre)\n          break\n      }\n    }\n\n    let htmlData = wrapper.innerHTML\n    const textData = this.htmlToMarkdown(htmlData)\n    htmlData = marked(textData)\n\n    return { html: htmlData, text: textData }\n  }\n\n  ContentState.prototype.docCopyHandler = function (event) {\n    const { selectedTableCells } = this\n    if (selectedTableCells) {\n      event.preventDefault()\n      const { row, column, cells } = selectedTableCells\n      const tableContents = []\n      let i\n      let j\n      for (i = 0; i < row; i++) {\n        const rowWrapper = []\n        for (j = 0; j < column; j++) {\n          const cell = cells[i * column + j]\n\n          rowWrapper.push({\n            text: cell.text,\n            align: cell.align\n          })\n        }\n        tableContents.push(rowWrapper)\n      }\n\n      if (row === 1 && column === 1) {\n        // Copy cells text if only one is selected\n        event.clipboardData.setData('text/html', '')\n        event.clipboardData.setData('text/plain', tableContents[0][0].text)\n      } else {\n        // Copy as markdown table\n        const figureBlock = this.createBlock('figure', {\n          functionType: 'table'\n        })\n        const table = this.createTableInFigure({ rows: row, columns: column }, tableContents)\n        this.appendChild(figureBlock, table)\n        const { isGitlabCompatibilityEnabled, listIndentation } = this\n        const markdown = new ExportMarkdown([figureBlock], listIndentation, isGitlabCompatibilityEnabled).generate()\n\n        event.clipboardData.setData('text/html', '')\n        event.clipboardData.setData('text/plain', markdown)\n      }\n    }\n  }\n\n  ContentState.prototype.copyHandler = function (event, type, copyInfo = null) {\n    if (this.selectedTableCells) {\n      // Hand over to docCopyHandler\n      return\n    }\n    event.preventDefault()\n    const { selectedImage } = this\n    if (selectedImage) {\n      const { token } = selectedImage\n      event.clipboardData.setData('text/html', token.raw)\n      event.clipboardData.setData('text/plain', token.raw)\n      return\n    }\n\n    const { html, text } = this.getClipBoradData()\n    switch (type) {\n      case 'normal': {\n        event.clipboardData.setData('text/html', html)\n        event.clipboardData.setData('text/plain', text)\n        break\n      }\n      case 'copyAsMarkdown': {\n        event.clipboardData.setData('text/html', '')\n        event.clipboardData.setData('text/plain', text)\n        break\n      }\n      case 'copyAsHtml': {\n        event.clipboardData.setData('text/html', '')\n        event.clipboardData.setData('text/plain', getSanitizeHtml(text, {\n          superSubScript: this.muya.options.superSubScript,\n          footnote: this.muya.options.footnote,\n          isGitlabCompatibilityEnabled: this.muya.options.isGitlabCompatibilityEnabled\n        }))\n        break\n      }\n\n      case 'copyBlock': {\n        const block = typeof copyInfo === 'string' ? this.getBlock(copyInfo) : copyInfo\n        if (!block) return\n        const anchor = this.getAnchor(block)\n        const { isGitlabCompatibilityEnabled, listIndentation } = this\n        const markdown = new ExportMarkdown([anchor], listIndentation, isGitlabCompatibilityEnabled).generate()\n        event.clipboardData.setData('text/html', '')\n        event.clipboardData.setData('text/plain', markdown)\n        break\n      }\n\n      case 'copyCodeContent': {\n        const codeContent = copyInfo\n        if (typeof codeContent !== 'string') {\n          return\n        }\n        event.clipboardData.setData('text/html', '')\n        event.clipboardData.setData('text/plain', codeContent)\n      }\n    }\n  }\n}\n\nexport default copyCutCtrl\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/arrowCtrl.js",["1222"],"import { EVENT_KEYS, CLASS_OR_ID } from '../config'\nimport { findNearestParagraph } from '../selection/dom'\nimport selection from '../selection'\n\n// If the next block is header, put cursor after the `#{1,6} *`\nconst adjustOffset = (offset, block, event) => {\n  if (/^span$/.test(block.type) && block.functionType === 'atxLine' && event.key === EVENT_KEYS.ArrowDown) {\n    const match = /^\\s{0,3}(?:#{1,6})(?:\\s{1,}|$)/.exec(block.text)\n    if (match) {\n      return match[0].length\n    }\n  }\n  return offset\n}\n\nconst arrowCtrl = ContentState => {\n  ContentState.prototype.findNextRowCell = function (cell) {\n    if (cell.functionType !== 'cellContent') {\n      throw new Error(`block with type ${cell && cell.type} is not a table cell`)\n    }\n    const thOrTd = this.getParent(cell)\n    const row = this.closest(cell, 'tr')\n    const rowContainer = this.closest(row, /thead|tbody/) // thead or tbody\n    const column = row.children.indexOf(thOrTd)\n    if (rowContainer.type === 'thead') {\n      const tbody = this.getNextSibling(rowContainer)\n      if (tbody && tbody.children.length) {\n        return tbody.children[0].children[column].children[0]\n      }\n    } else if (rowContainer.type === 'tbody') {\n      const nextRow = this.getNextSibling(row)\n      if (nextRow) {\n        return nextRow.children[column].children[0]\n      }\n    }\n    return null\n  }\n\n  ContentState.prototype.findPrevRowCell = function (cell) {\n    if (cell.functionType !== 'cellContent') {\n      throw new Error(`block with type ${cell && cell.type} is not a table cell`)\n    }\n    const thOrTd = this.getParent(cell)\n    const row = this.closest(cell, 'tr')\n    const rowContainer = this.getParent(row) // thead or tbody\n    const rowIndex = rowContainer.children.indexOf(row)\n    const column = row.children.indexOf(thOrTd)\n    if (rowContainer.type === 'tbody') {\n      if (rowIndex === 0 && rowContainer.preSibling) {\n        const thead = this.getPreSibling(rowContainer)\n        return thead.children[0].children[column].children[0]\n      } else if (rowIndex > 0) {\n        return this.getPreSibling(row).children[column].children[0]\n      }\n      return null\n    }\n    return null\n  }\n\n  ContentState.prototype.docArrowHandler = function (event) {\n    const { selectedImage } = this\n    if (selectedImage) {\n      const { key, token } = selectedImage\n      const { start, end } = token.range\n      event.preventDefault()\n      event.stopPropagation()\n      const block = this.getBlock(key)\n      switch (event.key) {\n        case EVENT_KEYS.ArrowUp:\n        case EVENT_KEYS.ArrowLeft: {\n          this.cursor = {\n            start: { key, offset: start },\n            end: { key, offset: start }\n          }\n          break\n        }\n        case EVENT_KEYS.ArrowDown:\n        case EVENT_KEYS.ArrowRight: {\n          this.cursor = {\n            start: { key, offset: end },\n            end: { key, offset: end }\n          }\n          break\n        }\n      }\n      this.muya.keyboard.hideAllFloatTools()\n      return this.singleRender(block)\n    }\n  }\n\n  ContentState.prototype.arrowHandler = function (event) {\n    const node = selection.getSelectionStart()\n    const paragraph = findNearestParagraph(node)\n    const id = paragraph.id\n    const block = this.getBlock(id)\n    const preBlock = this.findPreBlockInLocation(block)\n    const nextBlock = this.findNextBlockInLocation(block)\n    const { start, end } = selection.getCursorRange()\n    const { topOffset, bottomOffset } = selection.getCursorYOffset(paragraph)\n    if (!start || !end) {\n      return\n    }\n\n    // fix #101\n    if (event.key === EVENT_KEYS.ArrowRight && node && node.classList && node.classList.contains(CLASS_OR_ID.AG_MATH_TEXT)) {\n      const { right } = selection.getCaretOffsets(node)\n      if (right === 0 && start.key === end.key && start.offset === end.offset) {\n        // It's not recommended to use such lower API, but it's work well.\n        return selection.select(node.parentNode.nextElementSibling, 0)\n      }\n    }\n\n    // Just do nothing if the cursor is not collapsed or `shiftKey` pressed\n    if (\n      (start.key === end.key && start.offset !== end.offset) ||\n      start.key !== end.key || event.shiftKey\n    ) {\n      return\n    }\n\n    if (\n      (event.key === EVENT_KEYS.ArrowUp && topOffset > 0) ||\n      (event.key === EVENT_KEYS.ArrowDown && bottomOffset > 0)\n    ) {\n      if (!/pre/.test(block.type) || block.functionType !== 'cellContent') {\n        return\n      }\n    }\n\n    if (block.functionType === 'cellContent') {\n      let activeBlock\n      const cellInNextRow = this.findNextRowCell(block)\n      const cellInPrevRow = this.findPrevRowCell(block)\n\n      if (event.key === EVENT_KEYS.ArrowUp) {\n        if (cellInPrevRow) {\n          activeBlock = cellInPrevRow\n        } else {\n          activeBlock = this.findPreBlockInLocation(this.getTableBlock())\n        }\n      }\n\n      if (event.key === EVENT_KEYS.ArrowDown) {\n        if (cellInNextRow) {\n          activeBlock = cellInNextRow\n        } else {\n          activeBlock = this.findNextBlockInLocation(this.getTableBlock())\n        }\n      }\n\n      if (activeBlock) {\n        event.preventDefault()\n        event.stopPropagation()\n        let offset = activeBlock.type === 'p'\n          ? 0\n          : (event.key === EVENT_KEYS.ArrowUp\n            ? activeBlock.text.length\n            : 0)\n\n        offset = adjustOffset(offset, activeBlock, event)\n\n        const key = activeBlock.type === 'p'\n          ? activeBlock.children[0].key\n          : activeBlock.key\n\n        this.cursor = {\n          start: {\n            key,\n            offset\n          },\n          end: {\n            key,\n            offset\n          }\n        }\n\n        return this.partialRender()\n      }\n    }\n\n    if (\n      (event.key === EVENT_KEYS.ArrowUp) ||\n      (event.key === EVENT_KEYS.ArrowLeft && start.offset === 0)\n    ) {\n      event.preventDefault()\n      event.stopPropagation()\n      if (!preBlock) return\n      const key = preBlock.key\n      const offset = preBlock.text.length\n      this.cursor = {\n        start: { key, offset },\n        end: { key, offset }\n      }\n\n      return this.partialRender()\n    } else if (\n      (event.key === EVENT_KEYS.ArrowDown) ||\n      (event.key === EVENT_KEYS.ArrowRight && start.offset === block.text.length)\n    ) {\n      event.preventDefault()\n      event.stopPropagation()\n      let key\n      let newBlock\n      if (nextBlock) {\n        key = nextBlock.key\n      } else {\n        newBlock = this.createBlockP()\n        const lastBlock = this.blocks[this.blocks.length - 1]\n        this.insertAfter(newBlock, lastBlock)\n        key = newBlock.children[0].key\n      }\n      const offset = adjustOffset(0, nextBlock || newBlock, event)\n      this.cursor = {\n        start: { key, offset },\n        end: { key, offset }\n      }\n\n      return this.partialRender()\n    }\n  }\n}\n\nexport default arrowCtrl\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/history.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/paragraphCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/core.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/tableSelectCellsCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/tableDragBarCtrl.js",["1223","1224"],"const calculateAspects = (tableId, barType) => {\n  const table = document.querySelector(`#${tableId}`)\n  if (barType === 'bottom') {\n    const firstRow = table.querySelector('tr')\n    return Array.from(firstRow.children).map(cell => cell.clientWidth)\n  } else {\n    return Array.from(table.querySelectorAll('tr')).map(row => row.clientHeight)\n  }\n}\n\nexport const getAllTableCells = tableId => {\n  const table = document.querySelector(`#${tableId}`)\n  const rows = table.querySelectorAll('tr')\n  const cells = []\n  for (const row of Array.from(rows)) {\n    cells.push(Array.from(row.children))\n  }\n\n  return cells\n}\n\nexport const getIndex = (barType, cell) => {\n  if (cell.tagName === 'SPAN') {\n    cell = cell.parentNode\n  }\n  const row = cell.parentNode\n  if (barType === 'bottom') {\n    return Array.from(row.children).indexOf(cell)\n  } else {\n    const rowContainer = row.parentNode\n    if (rowContainer.tagName === 'THEAD') {\n      return 0\n    } else {\n      return Array.from(rowContainer.children).indexOf(row) + 1\n    }\n  }\n}\n\nconst getDragCells = (tableId, barType, index) => {\n  const table = document.querySelector(`#${tableId}`)\n  const dragCells = []\n  if (barType === 'left') {\n    if (index === 0) {\n      dragCells.push(...table.querySelectorAll('th'))\n    } else {\n      const row = table.querySelector('tbody').children[index - 1]\n      dragCells.push(...row.children)\n    }\n  } else {\n    const rows = Array.from(table.querySelectorAll('tr'))\n    const len = rows.length\n    let i\n    for (i = 0; i < len; i++) {\n      dragCells.push(rows[i].children[index])\n    }\n  }\n  return dragCells\n}\n\nconst tableDragBarCtrl = ContentState => {\n  ContentState.prototype.handleMouseDown = function (event) {\n    event.preventDefault()\n    const { eventCenter } = this.muya\n    const { clientX, clientY, target } = event\n    const tableId = target.closest('table').id\n    const barType = target.classList.contains('left') ? 'left' : 'bottom'\n    const index = getIndex(barType, target)\n    const aspects = calculateAspects(tableId, barType)\n    this.dragInfo = {\n      tableId,\n      clientX,\n      clientY,\n      barType,\n      index,\n      curIndex: index,\n      dragCells: getDragCells(tableId, barType, index),\n      cells: getAllTableCells(tableId),\n      aspects,\n      offset: 0\n    }\n\n    for (const row of this.dragInfo.cells) {\n      for (const cell of row) {\n        if (!this.dragInfo.dragCells.includes(cell)) {\n          cell.classList.add('ag-cell-transform')\n        }\n      }\n    }\n\n    const mouseMoveId = eventCenter.attachDOMEvent(document, 'mousemove', this.handleMouseMove.bind(this))\n    const mouseUpId = eventCenter.attachDOMEvent(document, 'mouseup', this.handleMouseUp.bind(this))\n    this.dragEventIds.push(mouseMoveId, mouseUpId)\n  }\n\n  ContentState.prototype.handleMouseMove = function (event) {\n    if (!this.dragInfo) {\n      return\n    }\n    const { barType } = this.dragInfo\n    const attrName = barType === 'bottom' ? 'clientX' : 'clientY'\n    const offset = this.dragInfo.offset = event[attrName] - this.dragInfo[attrName]\n    if (Math.abs(offset) < 5) {\n      return\n    }\n    this.isDragTableBar = true\n    this.hideUnnecessaryBar()\n    this.calculateCurIndex()\n    this.setDragTargetStyle()\n    this.setSwitchStyle()\n  }\n\n  ContentState.prototype.handleMouseUp = function (event) {\n    const { eventCenter } = this.muya\n    for (const id of this.dragEventIds) {\n      eventCenter.detachDOMEvent(id)\n    }\n    this.dragEventIds = []\n    if (!this.isDragTableBar) {\n      return\n    }\n\n    this.setDropTargetStyle()\n\n    // The drop animation need 300ms.\n    setTimeout(() => {\n      this.switchTableData()\n      this.resetDragTableBar()\n    }, 300)\n  }\n\n  ContentState.prototype.hideUnnecessaryBar = function () {\n    const { barType } = this.dragInfo\n    const hideClassName = barType === 'bottom' ? 'left' : 'bottom'\n    const needHideBar = document.querySelector(`.ag-drag-handler.${hideClassName}`)\n    if (needHideBar) {\n      needHideBar.style.display = 'none'\n    }\n  }\n\n  ContentState.prototype.calculateCurIndex = function () {\n    let { offset, aspects, index } = this.dragInfo\n    let curIndex = index\n    const len = aspects.length\n    let i\n    if (offset > 0) {\n      for (i = index; i < len; i++) {\n        const aspect = aspects[i]\n        if (i === index) {\n          offset -= Math.floor(aspect / 2)\n        } else {\n          offset -= aspect\n        }\n        if (offset < 0) {\n          break\n        } else {\n          curIndex++\n        }\n      }\n    } else if (offset < 0) {\n      for (i = index; i >= 0; i--) {\n        const aspect = aspects[i]\n        if (i === index) {\n          offset += Math.floor(aspect / 2)\n        } else {\n          offset += aspect\n        }\n        if (offset > 0) {\n          break\n        } else {\n          curIndex--\n        }\n      }\n    }\n\n    this.dragInfo.curIndex = Math.max(0, Math.min(curIndex, len - 1))\n  }\n\n  ContentState.prototype.setDragTargetStyle = function () {\n    const { offset, barType, dragCells } = this.dragInfo\n\n    for (const cell of dragCells) {\n      if (!cell.classList.contains('ag-drag-cell')) {\n        cell.classList.add('ag-drag-cell')\n        cell.classList.add(`ag-drag-${barType}`)\n      }\n      const valueName = barType === 'bottom' ? 'translateX' : 'translateY'\n      cell.style.transform = `${valueName}(${offset}px)`\n    }\n  }\n\n  ContentState.prototype.setSwitchStyle = function () {\n    const { index, offset, curIndex, barType, aspects, cells } = this.dragInfo\n    const aspect = aspects[index]\n    const len = aspects.length\n\n    let i\n    if (offset > 0) {\n      if (barType === 'bottom') {\n        for (const row of cells) {\n          for (i = 0; i < len; i++) {\n            const cell = row[i]\n            if (i > index && i <= curIndex) {\n              cell.style.transform = `translateX(${-aspect}px)`\n            } else if (i !== index) {\n              cell.style.transform = 'translateX(0px)'\n            }\n          }\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          const row = cells[i]\n          for (const cell of row) {\n            if (i > index && i <= curIndex) {\n              cell.style.transform = `translateY(${-aspect}px)`\n            } else if (i !== index) {\n              cell.style.transform = 'translateY(0px)'\n            }\n          }\n        }\n      }\n    } else {\n      if (barType === 'bottom') {\n        for (const row of cells) {\n          for (i = 0; i < len; i++) {\n            const cell = row[i]\n            if (i >= curIndex && i < index) {\n              cell.style.transform = `translateX(${aspect}px)`\n            } else if (i !== index) {\n              cell.style.transform = 'translateX(0px)'\n            }\n          }\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          const row = cells[i]\n          for (const cell of row) {\n            if (i >= curIndex && i < index) {\n              cell.style.transform = `translateY(${aspect}px)`\n            } else if (i !== index) {\n              cell.style.transform = 'translateY(0px)'\n            }\n          }\n        }\n      }\n    }\n  }\n\n  ContentState.prototype.setDropTargetStyle = function () {\n    const { dragCells, barType, curIndex, index, aspects, offset } = this.dragInfo\n    let move = 0\n    let i\n    if (offset > 0) {\n      for (i = index + 1; i <= curIndex; i++) {\n        move += aspects[i]\n      }\n    } else {\n      for (i = curIndex; i < index; i++) {\n        move -= aspects[i]\n      }\n    }\n    for (const cell of dragCells) {\n      cell.classList.remove('ag-drag-cell')\n      cell.classList.remove(`ag-drag-${barType}`)\n      cell.classList.add('ag-cell-transform')\n      const valueName = barType === 'bottom' ? 'translateX' : 'translateY'\n      cell.style.transform = `${valueName}(${move}px)`\n    }\n  }\n\n  ContentState.prototype.switchTableData = function () {\n    const { barType, index, curIndex, tableId, offset } = this.dragInfo\n    const table = this.getBlock(tableId)\n    const tHead = table.children[0]\n    const tBody = table.children[1]\n    const rows = [tHead.children[0], ...(tBody ? tBody.children : [])]\n    let i\n\n    if (index !== curIndex) {\n      // Cursor in the same cell.\n      const { start, end } = this.cursor\n      let key = null\n      if (barType === 'bottom') {\n        for (const row of rows) {\n          const isCursorCell = row.children[index].children[0].key === start.key\n          const { text } = row.children[index].children[0]\n          const { align } = row.children[index]\n          if (offset > 0) {\n            for (i = index; i < curIndex; i++) {\n              row.children[i].children[0].text = row.children[i + 1].children[0].text\n              row.children[i].align = row.children[i + 1].align\n            }\n            row.children[curIndex].children[0].text = text\n            row.children[curIndex].align = align\n          } else {\n            for (i = index; i > curIndex; i--) {\n              row.children[i].children[0].text = row.children[i - 1].children[0].text\n              row.children[i].align = row.children[i - 1].align\n            }\n            row.children[curIndex].children[0].text = text\n            row.children[curIndex].align = align\n          }\n          if (isCursorCell) {\n            key = row.children[curIndex].children[0].key\n          }\n        }\n      } else {\n        let column = null\n        const temp = rows[index].children.map((cell, i) => {\n          if (cell.children[0].key === start.key) {\n            column = i\n          }\n          return cell.children[0].text\n        })\n        if (offset > 0) {\n          for (i = index; i < curIndex; i++) {\n            rows[i].children.forEach((cell, ii) => {\n              cell.children[0].text = rows[i + 1].children[ii].children[0].text\n            })\n          }\n          rows[curIndex].children.forEach((cell, i) => {\n            if (i === column) {\n              key = cell.children[0].key\n            }\n            cell.children[0].text = temp[i]\n          })\n        } else {\n          for (i = index; i > curIndex; i--) {\n            rows[i].children.forEach((cell, ii) => {\n              cell.children[0].text = rows[i - 1].children[ii].children[0].text\n            })\n          }\n          rows[curIndex].children.forEach((cell, i) => {\n            if (i === column) {\n              key = cell.children[0].key\n            }\n            cell.children[0].text = temp[i]\n          })\n        }\n      }\n      if (key) {\n        this.cursor = {\n          start: {\n            key,\n            offset: start.offset\n          },\n          end: {\n            key,\n            offset: end.offset\n          }\n        }\n        return this.singleRender(table)\n      } else {\n        return this.partialRender()\n      }\n    }\n  }\n\n  ContentState.prototype.resetDragTableBar = function () {\n    this.dragInfo = null\n    this.isDragTableBar = false\n  }\n}\n\nexport default tableDragBarCtrl\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/tableBlockCtrl.js",["1225","1226"],"import { isLengthEven, getParagraphReference } from '../utils'\n\nconst TABLE_BLOCK_REG = /^\\|.*?(\\\\*)\\|.*?(\\\\*)\\|/\n\nconst tableBlockCtrl = ContentState => {\n  ContentState.prototype.createTableInFigure = function ({ rows, columns }, tableContents = []) {\n    const table = this.createBlock('table', {\n      row: rows - 1, // zero base\n      column: columns - 1\n    })\n    const tHead = this.createBlock('thead')\n    const tBody = this.createBlock('tbody')\n\n    let i\n    let j\n    for (i = 0; i < rows; i++) {\n      const rowBlock = this.createBlock('tr')\n      i === 0 ? this.appendChild(tHead, rowBlock) : this.appendChild(tBody, rowBlock)\n      const rowContents = tableContents[i]\n      for (j = 0; j < columns; j++) {\n        const cell = this.createBlock(i === 0 ? 'th' : 'td', {\n          align: rowContents ? rowContents[j].align : '',\n          column: j\n        })\n        const cellContent = this.createBlock('span', {\n          text: rowContents ? rowContents[j].text : '',\n          functionType: 'cellContent'\n        })\n\n        this.appendChild(cell, cellContent)\n        this.appendChild(rowBlock, cell)\n      }\n    }\n\n    this.appendChild(table, tHead)\n    if (tBody.children.length) {\n      this.appendChild(table, tBody)\n    }\n\n    return table\n  }\n\n  ContentState.prototype.createFigure = function ({ rows, columns }) {\n    const { end } = this.cursor\n    const table = this.createTableInFigure({ rows, columns })\n    const figureBlock = this.createBlock('figure', {\n      functionType: 'table'\n    })\n    const endBlock = this.getBlock(end.key)\n    const anchor = this.getAnchor(endBlock)\n\n    if (!anchor) {\n      return\n    }\n\n    this.insertAfter(figureBlock, anchor)\n    if (/p|h\\d/.test(anchor.type) && !endBlock.text) {\n      this.removeBlock(anchor)\n    }\n    this.appendChild(figureBlock, table)\n    const { key } = this.firstInDescendant(table) // fist cell key in thead\n    const offset = 0\n    this.cursor = {\n      start: { key, offset },\n      end: { key, offset }\n    }\n    this.partialRender()\n  }\n\n  ContentState.prototype.createTable = function (tableChecker) {\n    this.createFigure(tableChecker)\n\n    this.muya.dispatchSelectionChange()\n    this.muya.dispatchSelectionFormats()\n    this.muya.dispatchChange()\n  }\n\n  ContentState.prototype.initTable = function (block) {\n    const { text } = block.children[0]\n    const rowHeader = []\n    const len = text.length\n    let i\n    for (i = 0; i < len; i++) {\n      const char = text[i]\n      if (/^[^|]$/.test(char)) {\n        rowHeader[rowHeader.length - 1] += char\n      }\n      if (/\\\\/.test(char)) {\n        rowHeader[rowHeader.length - 1] += text[++i]\n      }\n      if (/\\|/.test(char) && i !== len - 1) {\n        rowHeader.push('')\n      }\n    }\n\n    const columns = rowHeader.length\n    const rows = 2\n\n    const table = this.createTableInFigure({ rows, columns }, [rowHeader.map(text => ({ text, align: '' }))])\n\n    block.type = 'figure'\n    block.text = ''\n    block.children = []\n    block.functionType = 'table'\n    this.appendChild(block, table)\n\n    return this.firstInDescendant(table.children[1]) // first cell content in tbody\n  }\n\n  ContentState.prototype.tableToolBarClick = function (type) {\n    const { start: { key } } = this.cursor\n    const block = this.getBlock(key)\n    const parentBlock = this.getParent(block)\n    if (block.functionType !== 'cellContent') {\n      throw new Error('table is not active')\n    }\n    const { column, align } = parentBlock\n    const table = this.closest(block, 'table')\n    const figure = this.getBlock(table.parent)\n\n    switch (type) {\n      case 'left':\n      case 'center':\n      case 'right': {\n        const newAlign = align === type ? '' : type\n        table.children.forEach(rowContainer => {\n          rowContainer.children.forEach(row => {\n            row.children[column].align = newAlign\n          })\n        })\n        this.muya.eventCenter.dispatch('stateChange')\n        this.partialRender()\n        break\n      }\n      case 'delete': {\n        const newLine = this.createBlock('span')\n        figure.children = []\n        this.appendChild(figure, newLine)\n        figure.type = 'p'\n        figure.text = ''\n        const key = newLine.key\n        const offset = 0\n        this.cursor = {\n          start: { key, offset },\n          end: { key, offset }\n        }\n        this.muya.eventCenter.dispatch('stateChange')\n        this.partialRender()\n        break\n      }\n      case 'table': {\n        const { eventCenter } = this.muya\n        const figureKey = figure.key\n        const tableEle = document.querySelector(`#${figureKey} [data-label=table]`)\n        const { row = 1, column = 1 } = table // zero base\n\n        const handler = (row, column) => {\n          const { row: oldRow, column: oldColumn } = table\n          let tBody = table.children[1]\n          const tHead = table.children[0]\n          const headerRow = tHead.children[0]\n          const bodyRows = tBody ? tBody.children : []\n          let i\n          if (column > oldColumn) {\n            for (i = oldColumn + 1; i <= column; i++) {\n              const th = this.createBlock('th', {\n                column: i,\n                align: ''\n              })\n              const thContent = this.createBlock('span', {\n                functionType: 'cellContent'\n              })\n              this.appendChild(th, thContent)\n              this.appendChild(headerRow, th)\n              bodyRows.forEach(bodyRow => {\n                const td = this.createBlock('td', {\n                  column: i,\n                  align: ''\n                })\n\n                const tdContent = this.createBlock('span', {\n                  functionType: 'cellContent'\n                })\n                this.appendChild(td, tdContent)\n                this.appendChild(bodyRow, td)\n              })\n            }\n          } else if (column < oldColumn) {\n            const rows = [headerRow, ...bodyRows]\n            rows.forEach(row => {\n              while (row.children.length > column + 1) {\n                const lastChild = row.children[row.children.length - 1]\n                this.removeBlock(lastChild)\n              }\n            })\n          }\n\n          if (row < oldRow) {\n            while (tBody.children.length > row) {\n              const lastRow = tBody.children[tBody.children.length - 1]\n              this.removeBlock(lastRow)\n            }\n            if (tBody.children.length === 0) {\n              this.removeBlock(tBody)\n            }\n          } else if (row > oldRow) {\n            if (!tBody) {\n              tBody = this.createBlock('tbody')\n              this.appendChild(table, tBody)\n            }\n            const oneHeaderRow = tHead.children[0]\n            for (i = oldRow + 1; i <= row; i++) {\n              const bodyRow = this.createRow(oneHeaderRow, false)\n\n              this.appendChild(tBody, bodyRow)\n            }\n          }\n\n          Object.assign(table, { row, column })\n\n          const cursorBlock = this.firstInDescendant(headerRow)\n          const key = cursorBlock.key\n          const offset = cursorBlock.text.length\n          this.cursor = {\n            start: { key, offset },\n            end: { key, offset }\n          }\n          this.muya.eventCenter.dispatch('stateChange')\n          this.partialRender()\n        }\n\n        const reference = getParagraphReference(tableEle, tableEle.id)\n        eventCenter.dispatch('muya-table-picker', { row, column }, reference, handler.bind(this))\n      }\n    }\n  }\n\n  // insert/remove row/column\n  ContentState.prototype.editTable = function ({ location, action, target }, cellContentKey) {\n    let block\n    let start\n    let end\n    if (cellContentKey) {\n      block = this.getBlock(cellContentKey)\n    } else {\n      ({ start, end } = this.cursor)\n      if (start.key !== end.key) {\n        throw new Error('Cursor is not in one block, can not editTable')\n      }\n\n      block = this.getBlock(start.key)\n    }\n\n    if (block.functionType !== 'cellContent') {\n      throw new Error('Cursor is not in table block, so you can not insert/edit row/column')\n    }\n\n    const cellBlock = this.getParent(block)\n    const currentRow = this.getParent(cellBlock)\n    const table = this.closest(block, 'table')\n    const thead = table.children[0]\n    const tbody = table.children[1]\n    const columnIndex = currentRow.children.indexOf(cellBlock)\n    // const rowIndex = rowContainer.type === 'thead' ? 0 : tbody.children.indexOf(currentRow) + 1\n\n    let cursorBlock\n\n    if (target === 'row') {\n      if (action === 'insert') {\n        const newRow = (location === 'previous' && cellBlock.type === 'th')\n          ? this.createRow(currentRow, true)\n          : this.createRow(currentRow, false)\n        if (location === 'previous') {\n          this.insertBefore(newRow, currentRow)\n          if (cellBlock.type === 'th') {\n            this.removeBlock(currentRow)\n            currentRow.children.forEach(cell => (cell.type = 'td'))\n            const firstRow = tbody.children[0]\n            this.insertBefore(currentRow, firstRow)\n          }\n        } else {\n          if (cellBlock.type === 'th') {\n            const firstRow = tbody.children[0]\n            this.insertBefore(newRow, firstRow)\n          } else {\n            this.insertAfter(newRow, currentRow)\n          }\n        }\n        cursorBlock = newRow.children[columnIndex].children[0]\n        // handle remove row\n      } else {\n        if (location === 'previous') {\n          if (cellBlock.type === 'th') return\n          if (!currentRow.preSibling) {\n            const headRow = thead.children[0]\n            if (!currentRow.nextSibling) return\n            this.removeBlock(headRow)\n            this.removeBlock(currentRow)\n            currentRow.children.forEach(cell => (cell.type = 'th'))\n            this.appendChild(thead, currentRow)\n          } else {\n            const preRow = this.getPreSibling(currentRow)\n            this.removeBlock(preRow)\n          }\n        } else if (location === 'current') {\n          if (cellBlock.type === 'th' && tbody.children.length >= 2) {\n            const firstRow = tbody.children[0]\n            this.removeBlock(currentRow)\n            this.removeBlock(firstRow)\n            this.appendChild(thead, firstRow)\n            firstRow.children.forEach(cell => (cell.type = 'th'))\n            cursorBlock = firstRow.children[columnIndex].children[0]\n          }\n          if (cellBlock.type === 'td' && (currentRow.preSibling || currentRow.nextSibling)) {\n            cursorBlock = (this.getNextSibling(currentRow) || this.getPreSibling(currentRow)).children[columnIndex].children[0]\n            this.removeBlock(currentRow)\n          }\n        } else {\n          if (cellBlock.type === 'th') {\n            if (tbody.children.length >= 2) {\n              const firstRow = tbody.children[0]\n              this.removeBlock(firstRow)\n            } else {\n              return\n            }\n          } else {\n            const nextRow = this.getNextSibling(currentRow)\n            if (nextRow) {\n              this.removeBlock(nextRow)\n            }\n          }\n        }\n      }\n    } else if (target === 'column') {\n      if (action === 'insert') {\n        [...thead.children, ...tbody.children].forEach(tableRow => {\n          const targetCell = tableRow.children[columnIndex]\n          const cell = this.createBlock(targetCell.type, {\n            align: ''\n          })\n          const cellContent = this.createBlock('span', {\n            functionType: 'cellContent'\n          })\n          this.appendChild(cell, cellContent)\n          if (location === 'left') {\n            this.insertBefore(cell, targetCell)\n          } else {\n            this.insertAfter(cell, targetCell)\n          }\n          tableRow.children.forEach((cell, i) => {\n            cell.column = i\n          })\n        })\n        cursorBlock = location === 'left' ? this.getPreSibling(cellBlock).children[0] : this.getNextSibling(cellBlock).children[0]\n        // handle remove column\n      } else {\n        if (currentRow.children.length <= 2) return\n        [...thead.children, ...tbody.children].forEach(tableRow => {\n          const targetCell = tableRow.children[columnIndex]\n          const removeCell = location === 'left'\n            ? this.getPreSibling(targetCell)\n            : (location === 'current' ? targetCell : this.getNextSibling(targetCell))\n          if (removeCell === cellBlock) {\n            cursorBlock = this.findNextBlockInLocation(block)\n          }\n\n          if (removeCell) this.removeBlock(removeCell)\n          tableRow.children.forEach((cell, i) => {\n            cell.column = i\n          })\n        })\n      }\n    }\n\n    const newColum = thead.children[0].children.length - 1\n    const newRow = thead.children.length + tbody.children.length - 1\n    Object.assign(table, { row: newRow, column: newColum })\n\n    if (cursorBlock) {\n      const { key } = cursorBlock\n      const offset = 0\n      this.cursor = { start: { key, offset }, end: { key, offset } }\n    } else {\n      this.cursor = { start, end }\n    }\n\n    this.partialRender()\n    this.muya.eventCenter.dispatch('stateChange')\n  }\n\n  ContentState.prototype.getTableBlock = function () {\n    const { start, end } = this.cursor\n    const startBlock = this.getBlock(start.key)\n    const endBlock = this.getBlock(end.key)\n    const startParents = this.getParents(startBlock)\n    const endParents = this.getParents(endBlock)\n    const affiliation = startParents\n      .filter(p => endParents.includes(p))\n\n    if (affiliation.length) {\n      const figure = affiliation.find(p => p.type === 'figure')\n      return figure\n    }\n  }\n\n  ContentState.prototype.tableBlockUpdate = function (block) {\n    const { type } = block\n    if (type !== 'p') return false\n    const { text } = block.children[0]\n    const match = TABLE_BLOCK_REG.exec(text)\n    return (match && isLengthEven(match[1]) && isLengthEven(match[2])) ? this.initTable(block) : false\n  }\n}\n\nexport default tableBlockCtrl\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/codeBlockCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/deleteCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/backspaceCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/updateCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/contentState/enterCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/utils.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/utils.js",["1227"],"/**\n * Helpers\n */\n\nlet uniqueIdCounter = 0\n\nexport const getUniqueId = () => ++uniqueIdCounter\n\nexport const escape = function escape (html, encode) {\n  if (encode) {\n    if (escape.escapeTest.test(html)) {\n      return html.replace(escape.escapeReplace, function (ch) { return escape.replacements[ch] })\n    }\n  } else {\n    if (escape.escapeTestNoEncode.test(html)) {\n      return html.replace(escape.escapeReplaceNoEncode, function (ch) { return escape.replacements[ch] })\n    }\n  }\n\n  return html\n}\n\nescape.escapeTest = /[&<>\"']/\nescape.escapeReplace = /[&<>\"']/g\nescape.replacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n}\n\nescape.escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/\nescape.escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g\n\nexport const unescape = function unescape (html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function (_, n) {\n    n = n.toLowerCase()\n    if (n === 'colon') return ':'\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1))\n    }\n    return ''\n  })\n}\n\nexport const edit = function edit (regex, opt) {\n  regex = regex.source || regex\n  opt = opt || ''\n  return {\n    replace: function (name, val) {\n      val = val.source || val\n      val = val.replace(/(^|[^\\[])\\^/g, '$1') // eslint-disable-line no-useless-escape\n      regex = regex.replace(name, val)\n      return this\n    },\n    getRegex: function () {\n      return new RegExp(regex, opt)\n    }\n  }\n}\n\nexport const cleanUrl = function cleanUrl (sanitize, base, href) {\n  if (sanitize) {\n    let prot = ''\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase()\n    } catch (e) {\n      return null\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href)\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%')\n  } catch (e) {\n    return null\n  }\n  return href\n}\n\nconst resolveUrl = function resolveUrl (base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/'\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true)\n    }\n  }\n  base = baseUrls[' ' + base]\n  let relativeBase = base.indexOf(':') === -1\n\n  if (href.slice(0, 2) === '//') {\n    if (relativeBase) {\n      return href\n    }\n    return base.replace(/^([^:]+:)[\\s\\S]*$/, '$1') + href\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href\n    }\n    return base.replace(/^([^:]+:\\/*[^/]*)[\\s\\S]*$/, '$1') + href\n  } else {\n    return base + href\n  }\n}\nconst baseUrls = {}\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i\n\nexport const noop = function noop () {}\nnoop.exec = noop\n\nexport const splitCells = function splitCells (tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, function (match, offset, str) {\n    let escaped = false\n    let curr = offset\n    while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped\n    if (escaped) {\n      // odd number of slashes means | is escaped\n      // so we leave it alone\n      return '|'\n    } else {\n      // add space before unescaped |\n      return ' |'\n    }\n  })\n  const cells = row.split(/ \\|/)\n  let i = 0\n\n  if (cells.length > count) {\n    cells.splice(count)\n  } else {\n    while (cells.length < count) cells.push('')\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|')\n  }\n  return cells\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nexport const rtrim = function rtrim (str, c, invert) {\n  if (str.length === 0) {\n    return ''\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < str.length) {\n    const currChar = str.charAt(str.length - suffLen - 1)\n    if (currChar === c && !invert) {\n      suffLen++\n    } else if (currChar !== c && invert) {\n      suffLen++\n    } else {\n      break\n    }\n  }\n\n  return str.substr(0, str.length - suffLen)\n}\n\nexport const findClosingBracket = function findClosingBracket (str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1\n  }\n  let level = 0\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === '\\\\') {\n      i++\n    } else if (str[i] === b[0]) {\n      level++\n    } else if (str[i] === b[1]) {\n      level--\n      if (level < 0) {\n        return i\n      }\n    }\n  }\n  return -1\n}\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/rules.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/options.js",["1228"],"export default {\n  baseUrl: null,\n  breaks: false,\n  gfm: true,\n  headerIds: true,\n  headerPrefix: '',\n  highlight: null,\n  mathRenderer: null,\n  emojiRenderer: null,\n  tocRenderer: null,\n  langPrefix: 'language-',\n  mangle: true,\n  pedantic: false,\n  renderer: null, // new Renderer(),\n  silent: false,\n  smartLists: false,\n  smartypants: false,\n  xhtml: false,\n  disableInline: false,\n\n  // NOTE: sanitize and sanitizer are deprecated since version 0.7.0, should not be used and will be removed in the future.\n  sanitize: false,\n  sanitizer: null,\n\n  // Markdown extensions:\n  // TODO: We set whether to support `emoji`, `math`, `frontMatter` default value to `true`\n  // After we add user setting, we maybe set math and frontMatter default value to false.\n  // User need to enable them in the user setting.\n  emoji: true,\n  math: true,\n  frontMatter: true,\n  superSubScript: false,\n  footnote: false,\n  isGitlabCompatibilityEnabled: false,\n\n  isHtmlEnabled: true\n}\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/snabbdom.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/parser.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/lexer.js",["1229"],"import { normal, gfm, pedantic } from './blockRules';\nimport options from './options';\nimport { splitCells, rtrim, getUniqueId } from './utils';\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(opts) {\n  this.tokens = [];\n  this.tokens.links = Object.create(null);\n  this.tokens.footnotes = Object.create(null);\n  this.footnoteOrder = 0;\n  this.options = Object.assign({}, options, opts);\n  this.rules = normal;\n\n  if (this.options.pedantic) {\n    this.rules = pedantic;\n  } else if (this.options.gfm) {\n    this.rules = gfm;\n  }\n}\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function (src = '') {\n  src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n  this.checkFrontmatter = true;\n  this.footnoteOrder = 0;\n  this.token(src, true);\n\n  // Move footnote token to the end of tokens.\n  const { tokens } = this;\n  const hasNoFootnoteTokens = [];\n  const footnoteTokens = [];\n  let isInFootnote = false;\n  for (const token of tokens) {\n    const { type } = token;\n    if (type === 'footnote_start') {\n      isInFootnote = true;\n      footnoteTokens.push(token);\n    } else if (type === 'footnote_end') {\n      isInFootnote = false;\n      footnoteTokens.push(token);\n    } else if (isInFootnote) {\n      footnoteTokens.push(token);\n    } else {\n      hasNoFootnoteTokens.push(token);\n    }\n  }\n\n  const result = [...hasNoFootnoteTokens, ...footnoteTokens];\n  result.links = tokens.links;\n  result.footnotes = tokens.footnotes;\n  return result;\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function (src, top) {\n  const {\n    footnote,\n    frontMatter,\n    isGitlabCompatibilityEnabled,\n    math,\n  } = this.options;\n  src = src.replace(/^ +$/gm, '');\n\n  let loose;\n  let cap;\n  let bull;\n  let b;\n  let item;\n  let space;\n  let i;\n  let tag;\n  let l;\n\n  // Only check front matter at the begining of a markdown file.\n  // Please see note in \"blockquote\" why we need \"checkFrontmatter\" and \"top\".\n  if (frontMatter) {\n    cap = this.rules.frontmatter.exec(src);\n    if (this.checkFrontmatter && top && cap) {\n      src = src.substring(cap[0].length);\n      let lang;\n      let style;\n      let text;\n      if (cap[1]) {\n        lang = 'yaml';\n        style = '-';\n        text = cap[1];\n      } else if (cap[2]) {\n        lang = 'toml';\n        style = '+';\n        text = cap[2];\n      } else if (cap[3] || cap[4]) {\n        lang = 'json';\n        style = cap[3] ? ';' : '{';\n        text = cap[3] || cap[4];\n      }\n      this.tokens.push({\n        type: 'frontmatter',\n        text,\n        style,\n        lang,\n      });\n    }\n    this.checkFrontmatter = false;\n  }\n\n  while (src) {\n    // newline\n    cap = this.rules.newline.exec(src);\n    if (cap) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space',\n        });\n      }\n    }\n\n    // code\n    // An indented code block cannot interrupt a paragraph.\n    cap = this.rules.code.exec(src);\n    if (cap) {\n      const lastToken = this.tokens[this.tokens.length - 1];\n      src = src.substring(cap[0].length);\n      if (lastToken && lastToken.type === 'paragraph') {\n        lastToken.text += `\\n${cap[0].trimRight()}`;\n      } else {\n        cap = cap[0].replace(/^ {4}/gm, '');\n        this.tokens.push({\n          type: 'code',\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(cap, '\\n') : cap,\n        });\n      }\n      continue;\n    }\n\n    // multiple line math\n    if (math) {\n      cap = this.rules.multiplemath.exec(src);\n      if (cap) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'multiplemath',\n          text: cap[1],\n          mathStyle: '',\n        });\n        continue;\n      }\n\n      // match GitLab display math blocks (```math)\n      if (isGitlabCompatibilityEnabled) {\n        cap = this.rules.multiplemathGitlab.exec(src);\n        if (cap) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'multiplemath',\n            text: cap[2] || '',\n            mathStyle: 'gitlab',\n          });\n          continue;\n        }\n      }\n    }\n\n    // footnote\n    if (footnote) {\n      cap = this.rules.footnote.exec(src);\n      if (top && cap) {\n        src = src.substring(cap[0].length);\n        const identifier = cap[1];\n        this.tokens.push({\n          type: 'footnote_start',\n          identifier,\n        });\n\n        // NOTE: Order is wrong if footnote identifier 1 is behind footnote identifier 2 in text.\n        this.tokens.footnotes[identifier] = {\n          order: ++this.footnoteOrder,\n          identifier,\n          footnoteId: getUniqueId(),\n        };\n\n        /* eslint-disable no-useless-escape */\n        // Remove the footnote identifer prefix. eg: `[^identifier]: `.\n        cap = cap[0].replace(/^\\[\\^[^\\^\\[\\]\\s]+?(?<!\\\\)\\]:\\s+/gm, '');\n        // Remove the four whitespace before each block of footnote.\n        cap = cap.replace(/\\n {4}(?=[^\\s])/g, '\\n');\n        /* eslint-enable no-useless-escape */\n\n        this.token(cap, top);\n\n        this.tokens.push({\n          type: 'footnote_end',\n        });\n\n        continue;\n      }\n    }\n\n    // fences\n    cap = this.rules.fences.exec(src);\n    if (cap) {\n      src = src.substring(cap[0].length);\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n      this.tokens.push({\n        type: 'code',\n        codeBlockStyle: 'fenced',\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text,\n      });\n      continue;\n    }\n\n    // heading\n    cap = this.rules.heading.exec(src);\n    if (cap) {\n      src = src.substring(cap[0].length);\n      let text = cap[2] ? cap[2].trim() : '';\n\n      if (text.endsWith('#')) {\n        var trimmed = rtrim(text, '#');\n\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || trimmed.endsWith(' ')) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      this.tokens.push({\n        type: 'heading',\n        headingStyle: 'atx',\n        depth: cap[1].length,\n        text,\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    cap = this.rules.nptable.exec(src);\n    if (cap) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // hr\n    cap = this.rules.hr.exec(src);\n    if (cap) {\n      const marker = cap[0].replace(/\\n*$/, '');\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr',\n        marker,\n      });\n      continue;\n    }\n\n    // blockquote\n    cap = this.rules.blockquote.exec(src);\n    if (cap) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start',\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end',\n      });\n\n      continue;\n    }\n\n    // NOTE: Complete list lexer part is a custom implementation based on an older marked.js version.\n\n    // list\n    cap = this.rules.list.exec(src);\n    if (cap) {\n      let checked;\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      let isOrdered = bull.length > 1;\n      this.tokens.push({\n        type: 'list_start',\n        ordered: isOrdered,\n        listType:\n          bull.length > 1\n            ? 'order'\n            : /^( {0,3})([-*+]) \\[[xX ]\\]/.test(cap[0])\n            ? 'task'\n            : 'bullet',\n        start: isOrdered ? +bull.slice(0, -1) : '',\n      });\n\n      let next = false;\n      let prevNext = true;\n      let listItemIndices = [];\n      let isTaskList = false;\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        const itemWithBullet = cap[i];\n        item = itemWithBullet;\n        let newIsTaskListItem = false;\n\n        // Remove the list item's bullet so it is seen as the next token.\n        space = item.length;\n        let newBull;\n        item = item.replace(/^ *([*+-]|\\d+(?:\\.|\\))) {0,4}/, function (m, p1) {\n          // Get and remove list item bullet\n          newBull = p1 || bull;\n          return '';\n        });\n\n        const newIsOrdered = bull.length > 1 && /\\d{1,9}/.test(newBull);\n        if (!newIsOrdered && this.options.gfm) {\n          checked = this.rules.checkbox.exec(item);\n          if (checked) {\n            checked = checked[1] === 'x' || checked[1] === 'X';\n            newIsTaskListItem = true;\n\n            // Remove the list item's checkbox and adjust indentation by removing checkbox length.\n            item = item.replace(this.rules.checkbox, '');\n            space -= 4;\n          } else {\n            checked = undefined;\n          }\n        }\n\n        if (i === 0) {\n          isTaskList = newIsTaskListItem;\n        } else if (\n          // Changing the bullet or ordered list delimiter starts a new list (CommonMark 264 and 265)\n          //   - unordered, unordered --> bull !== newBull --> new list (e.g \"-\" --> \"*\")\n          //   - ordered, ordered --> lastChar !== lastChar --> new list (e.g \".\" --> \")\")\n          //   - else --> new list (e.g. ordered --> unordered)\n          i !== 0 &&\n          ((!isOrdered && !newIsOrdered && bull !== newBull) ||\n            (isOrdered &&\n              newIsOrdered &&\n              bull.slice(-1) !== newBull.slice(-1)) ||\n            isOrdered !== newIsOrdered ||\n            // Changing to/from task list item from/to bullet, starts a new list(work for marktext issue #870)\n            // Because we distinguish between task list and bullet list in Mark Text,\n            // the parsing here is somewhat different from the commonmark Spec,\n            // and the task list needs to be a separate list.\n            isTaskList !== newIsTaskListItem)\n        ) {\n          this.tokens.push({\n            type: 'list_end',\n          });\n\n          // Start a new list\n          bull = newBull;\n          isOrdered = newIsOrdered;\n          isTaskList = newIsTaskListItem;\n          this.tokens.push({\n            type: 'list_start',\n            ordered: isOrdered,\n            listType:\n              bull.length > 1\n                ? 'order'\n                : /^( {0,3})([-*+]) \\[[xX ]\\]/.test(itemWithBullet)\n                ? 'task'\n                : 'bullet',\n            start: isOrdered ? +bull.slice(0, -1) : '',\n          });\n        }\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (i !== l - 1) {\n          b = this.rules.bullet.exec(cap[i + 1])[0];\n          if (\n            bull.length > 1\n              ? b.length === 1\n              : b.length > 1 || (this.options.smartLists && b !== bull)\n          ) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        let prevItem = '';\n        if (i === 0) {\n          prevItem = item;\n        } else {\n          prevItem = cap[i - 1];\n        }\n\n        // Determine whether item is loose or not. If previous item is loose\n        // this item is also loose.\n        // A list is loose if any of its constituent list items are separated by blank lines,\n        // or if any of its constituent list items directly contain two block-level elements with a blank line between them.\n        // loose = next = next || /^ *([*+-]|\\d{1,9}(?:\\.|\\)))( +\\S+\\n\\n(?!\\s*$)|\\n\\n(?!\\s*$))/.test(itemWithBullet)\n        loose = next = next || /\\n\\n(?!\\s*$)/.test(item);\n        // Check if previous line ends with a new line.\n        if (\n          !loose &&\n          (i !== 0 || l > 1) &&\n          prevItem.length !== 0 &&\n          prevItem.charAt(prevItem.length - 1) === '\\n'\n        ) {\n          loose = next = true;\n        }\n\n        // A list is either loose or tight, so update previous list items but not nested list items.\n        if (next && prevNext !== next) {\n          for (const index of listItemIndices) {\n            this.tokens[index].type = 'loose_item_start';\n          }\n          listItemIndices = [];\n        }\n        prevNext = next;\n\n        if (!loose) {\n          listItemIndices.push(this.tokens.length);\n        }\n\n        const isOrderedListItem = /\\d/.test(bull);\n        this.tokens.push({\n          checked,\n          listItemType:\n            bull.length > 1 ? 'order' : isTaskList ? 'task' : 'bullet',\n          bulletMarkerOrDelimiter: isOrderedListItem\n            ? bull.slice(-1)\n            : bull.charAt(0),\n          type: loose ? 'loose_item_start' : 'list_item_start',\n        });\n\n        if (/^\\s*$/.test(item)) {\n          this.tokens.push({\n            type: 'text',\n            text: '',\n          });\n        } else {\n          // Recurse.\n          this.token(item, false);\n        }\n\n        this.tokens.push({\n          type: 'list_item_end',\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end',\n      });\n      continue;\n    }\n\n    // html\n    cap = this.rules.html.exec(src);\n    if (cap) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize ? 'paragraph' : 'html',\n        pre:\n          !this.options.sanitizer &&\n          (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: this.options.sanitize\n          ? this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0])\n          : cap[0],\n      });\n      continue;\n    }\n\n    // def\n    cap = this.rules.def.exec(src);\n    if (top && cap) {\n      let text = '';\n      do {\n        src = src.substring(cap[0].length);\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        if (!this.tokens.links[tag]) {\n          this.tokens.links[tag] = {\n            href: cap[2],\n            title: cap[3],\n          };\n        }\n\n        text += cap[0];\n        if (cap[0].endsWith('\\n\\n')) break;\n        cap = this.rules.def.exec(src);\n      } while (cap);\n\n      if (this.options.disableInline) {\n        this.tokens.push({\n          type: 'paragraph',\n          text: text.replace(/\\n*$/, ''),\n        });\n      }\n      continue;\n    }\n\n    // table (gfm)\n    cap = this.rules.table.exec(src);\n    if (cap) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length\n          );\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // lheading\n    cap = this.rules.lheading.exec(src);\n    if (cap) {\n      const precededToken = this.tokens[this.tokens.length - 1];\n      const chops = cap[0].trim().split(/\\n/);\n      const marker = chops[chops.length - 1];\n      src = src.substring(cap[0].length);\n\n      if (precededToken && precededToken.type === 'paragraph') {\n        this.tokens.pop();\n        this.tokens.push({\n          type: 'heading',\n          headingStyle: 'setext',\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: precededToken.text + '\\n' + cap[1],\n          marker,\n        });\n      } else {\n        this.tokens.push({\n          type: 'heading',\n          headingStyle: 'setext',\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1],\n          marker,\n        });\n      }\n      continue;\n    }\n\n    // top-level paragraph\n    cap = this.rules.paragraph.exec(src);\n    if (top && cap) {\n      src = src.substring(cap[0].length);\n\n      if (/^\\[toc\\]\\n?$/i.test(cap[1])) {\n        this.tokens.push({ type: 'toc', text: '[TOC]' });\n        continue;\n      }\n\n      this.tokens.push({\n        type: 'paragraph',\n        text:\n          cap[1].charAt(cap[1].length - 1) === '\\n'\n            ? cap[1].slice(0, -1)\n            : cap[1],\n      });\n      continue;\n    }\n\n    // text\n    cap = this.rules.text.exec(src);\n    if (cap) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0],\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n};\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map((node) => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\nexport default Lexer;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/renderer.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/cumputeCheckBoxStatus.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/utils/getParentCheckBox.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderBlock/index.js",["1230"],"import renderBlock from './renderBlock'\nimport renderLeafBlock from './renderLeafBlock'\nimport renderContainerBlock from './renderContainerBlock'\nimport renderIcon from './renderIcon'\n\nexport default {\n  renderBlock,\n  renderLeafBlock,\n  renderContainerBlock,\n  renderIcon\n}\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/index.js",["1231"],"import backlashInToken from './backlashInToken'\nimport backlash from './backlash'\nimport highlight from './highlight'\nimport header from './header'\nimport link from './link'\nimport htmlTag from './htmlTag'\nimport hr from './hr'\nimport tailHeader from './tailHeader'\nimport hardLineBreak from './hardLineBreak'\nimport softLineBreak from './softLineBreak'\nimport codeFense from './codeFense'\nimport inlineMath from './inlineMath'\nimport autoLink from './autoLink'\nimport autoLinkExtension from './autoLinkExtension'\nimport loadImageAsync from './loadImageAsync'\nimport image from './image'\nimport delEmStrongFac from './delEmStringFactory'\nimport emoji from './emoji'\nimport inlineCode from './inlineCode'\nimport text from './text'\nimport del from './del'\nimport em from './em'\nimport strong from './strong'\nimport htmlEscape from './htmlEscape'\nimport multipleMath from './multipleMath'\nimport referenceDefinition from './referenceDefinition'\nimport htmlRuby from './htmlRuby'\nimport referenceLink from './referenceLink'\nimport referenceImage from './referenceImage'\nimport superSubScript from './superSubScript'\nimport footnoteIdentifier from './footnoteIdentifier'\n\nexport default {\n  backlashInToken,\n  backlash,\n  highlight,\n  header,\n  link,\n  htmlTag,\n  hr,\n  tailHeader,\n  hardLineBreak,\n  softLineBreak,\n  codeFense,\n  inlineMath,\n  autoLink,\n  autoLinkExtension,\n  loadImageAsync,\n  image,\n  delEmStrongFac,\n  emoji,\n  inlineCode,\n  text,\n  del,\n  em,\n  strong,\n  htmlEscape,\n  multipleMath,\n  referenceDefinition,\n  htmlRuby,\n  referenceLink,\n  referenceImage,\n  superSubScript,\n  footnoteIdentifier\n}\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/renderers/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/textRenderer.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/slugger.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/blockRules.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/inlineLexer.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderBlock/renderIcon.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderBlock/renderBlock.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderBlock/renderContainerBlock.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/footnoteIdentifier.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderBlock/renderLeafBlock.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/superSubScript.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/referenceLink.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/htmlRuby.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/referenceDefinition.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/referenceImage.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/multipleMath.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/htmlEscape.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/em.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/strong.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/del.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/text.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/inlineCode.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/emoji.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/delEmStringFactory.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/image.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/loadImageAsync.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/autoLinkExtension.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/sequence.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/autoLink.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/inlineMath.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/codeFense.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/urlify.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/softLineBreak.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/marked/inlineRules.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/hardLineBreak.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/tailHeader.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/hr.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/htmlTag.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/link.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/header.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/highlight.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/backlashInToken.js",["1232"],"import { union, isEven } from '../../../utils'\nimport { CLASS_OR_ID } from '../../../config'\n// TODO HIGHLIGHT\nexport default function backlashInToken (h, backlashes, outerClass, start, token) {\n  const { highlights = [] } = token\n  const chunks = backlashes.split('')\n  const len = chunks.length\n  const result = []\n  let i\n\n  for (i = 0; i < len; i++) {\n    const chunk = chunks[i]\n    const light = highlights.filter(light => union({ start: start + i, end: start + i + 1 }, light))\n    let selector = 'span'\n    if (light.length) {\n      const className = this.getHighlightClassName(light[0].active)\n      selector += `.${className}`\n    }\n    if (isEven(i)) {\n      result.push(\n        h(`${selector}.${outerClass}`, chunk)\n      )\n    } else {\n      result.push(\n        h(`${selector}.${CLASS_OR_ID.AG_BACKLASH}`, chunk)\n      )\n    }\n  }\n\n  return result\n}\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderInlines/backlash.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderBlock/renderTableDargBar.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderBlock/renderCopyButton.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderBlock/renderFootnoteJump.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderBlock/renderContainerEditIcon.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Muya/lib/parser/render/renderBlock/renderToolBar.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/codePicker/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/tablePicker/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/quickInsert/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/imagePicker/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/imageSelector/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/emojiPicker/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/frontMenu/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/footnoteTool/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/imageToolbar/index.js",["1233","1234","1235"],"import BaseFloat from '../baseFloat'\nimport { patch, h } from '../../parser/render/snabbdom'\nimport icons from './config'\n\nimport './index.css'\n\nconst defaultOptions = {\n  placement: 'top',\n  modifiers: {\n    offset: {\n      offset: '0, 10'\n    }\n  },\n  showArrow: false\n}\n\nclass ImageToolbar extends BaseFloat {\n  static pluginName = 'imageToolbar'\n\n  constructor (muya, options = {}) {\n    const name = 'ag-image-toolbar'\n    const opts = Object.assign({}, defaultOptions, options)\n    super(muya, name, opts)\n    this.oldVnode = null\n    this.imageInfo = null\n    this.options = opts\n    this.icons = icons\n    this.reference = null\n    const toolbarContainer = this.toolbarContainer = document.createElement('div')\n    this.container.appendChild(toolbarContainer)\n    this.floatBox.classList.add('ag-image-toolbar-container')\n    this.listen()\n  }\n\n  listen () {\n    const { eventCenter } = this.muya\n    super.listen()\n    eventCenter.subscribe('muya-image-toolbar', ({ reference, imageInfo }) => {\n      this.reference = reference\n      if (reference) {\n        this.imageInfo = imageInfo\n        setTimeout(() => {\n          this.show(reference)\n          this.render()\n        }, 0)\n      } else {\n        this.hide()\n      }\n    })\n  }\n\n  render () {\n    const { icons, oldVnode, toolbarContainer, imageInfo } = this\n    const { attrs } = imageInfo.token\n    const dataAlign = attrs['data-align']\n    const children = icons.map(i => {\n      let icon\n      let iconWrapperSelector\n      if (i.icon) {\n        // SVG icon Asset\n        iconWrapperSelector = 'div.icon-wrapper'\n        icon = h('i.icon', h('i.icon-inner', {\n          style: {\n            background: `url(${i.icon}) no-repeat`,\n            'background-size': '100%'\n          }\n        }, ''))\n      }\n      const iconWrapper = h(iconWrapperSelector, icon)\n      let itemSelector = `li.item.${i.type}`\n\n      if (i.type === dataAlign || !dataAlign && i.type === 'inline') {\n        itemSelector += '.active'\n      }\n      return h(itemSelector, {\n        dataset: {\n          tip: i.tooltip\n        },\n        on: {\n          click: event => {\n            this.selectItem(event, i)\n          }\n        }\n      }, [h('div.tooltip', i.tooltip), iconWrapper])\n    })\n\n    const vnode = h('ul', children)\n\n    if (oldVnode) {\n      patch(oldVnode, vnode)\n    } else {\n      patch(toolbarContainer, vnode)\n    }\n    this.oldVnode = vnode\n  }\n\n  selectItem (event, item) {\n    event.preventDefault()\n    event.stopPropagation()\n\n    const { imageInfo } = this\n    switch (item.type) {\n      // Delete image.\n      case 'delete':\n        this.muya.contentState.deleteImage(imageInfo)\n        // Hide image transformer\n        this.muya.eventCenter.dispatch('muya-transformer', {\n          reference: null\n        })\n        return this.hide()\n      // Edit image, for example: editor alt and title, replace image.\n      case 'edit': {\n        const rect = this.reference.getBoundingClientRect()\n        const reference = {\n          getBoundingClientRect () {\n            rect.height = 0\n            return rect\n          }\n        }\n        // Hide image transformer\n        this.muya.eventCenter.dispatch('muya-transformer', {\n          reference: null\n        })\n        this.muya.eventCenter.dispatch('muya-image-selector', {\n          reference,\n          imageInfo,\n          cb: () => {}\n        })\n        return this.hide()\n      }\n      case 'inline':\n      case 'left':\n      case 'center':\n      case 'right': {\n        this.muya.contentState.updateImage(this.imageInfo, 'data-align', item.type)\n        return this.hide()\n      }\n    }\n  }\n}\n\nexport default ImageToolbar\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/linkTools/index.js",["1236"],"import BaseFloat from '../baseFloat'\nimport { patch, h } from '../../parser/render/snabbdom'\nimport icons from './config'\n\nimport './index.css'\n\nconst defaultOptions = {\n  placement: 'bottom',\n  modifiers: {\n    offset: {\n      offset: '0, 5'\n    }\n  },\n  showArrow: false\n}\n\nclass LinkTools extends BaseFloat {\n  static pluginName = 'linkTools'\n\n  constructor (muya, options = {}) {\n    const name = 'ag-link-tools'\n    const opts = Object.assign({}, defaultOptions, options)\n    super(muya, name, opts)\n    this.oldVnode = null\n    this.linkInfo = null\n    this.options = opts\n    this.icons = icons\n    this.hideTimer = null\n    const linkContainer = this.linkContainer = document.createElement('div')\n    this.container.appendChild(linkContainer)\n    this.listen()\n  }\n\n  listen () {\n    const { eventCenter } = this.muya\n    super.listen()\n    eventCenter.subscribe('muya-link-tools', ({ reference, linkInfo }) => {\n      if (reference) {\n        this.linkInfo = linkInfo\n        setTimeout(() => {\n          this.show(reference)\n          this.render()\n        }, 0)\n      } else {\n        if (this.hideTimer) {\n          clearTimeout(this.hideTimer)\n        }\n        this.hideTimer = setTimeout(() => {\n          this.hide()\n        }, 500)\n      }\n    })\n\n    const mouseOverHandler = () => {\n      if (this.hideTimer) {\n        clearTimeout(this.hideTimer)\n      }\n    }\n\n    const mouseOutHandler = () => {\n      this.hide()\n    }\n\n    eventCenter.attachDOMEvent(this.container, 'mouseover', mouseOverHandler)\n    eventCenter.attachDOMEvent(this.container, 'mouseleave', mouseOutHandler)\n  }\n\n  render () {\n    const { icons, oldVnode, linkContainer } = this\n    const children = icons.map(i => {\n      let icon\n      let iconWrapperSelector\n      if (i.icon) {\n        // SVG icon Asset\n        iconWrapperSelector = 'div.icon-wrapper'\n        icon = h('i.icon', h('i.icon-inner', {\n          style: {\n            background: `url(${i.icon}) no-repeat`,\n            'background-size': '100%'\n          }\n        }, ''))\n      }\n      const iconWrapper = h(iconWrapperSelector, icon)\n      let itemSelector = `li.item.${i.type}`\n\n      return h(itemSelector, {\n        on: {\n          click: event => {\n            this.selectItem(event, i)\n          }\n        }\n      }, iconWrapper)\n    })\n\n    const vnode = h('ul', children)\n\n    if (oldVnode) {\n      patch(oldVnode, vnode)\n    } else {\n      patch(linkContainer, vnode)\n    }\n    this.oldVnode = vnode\n  }\n\n  selectItem (event, item) {\n    event.preventDefault()\n    event.stopPropagation()\n    const { contentState } = this.muya\n    switch (item.type) {\n      case 'unlink':\n        contentState.unlink(this.linkInfo)\n        this.hide()\n        break\n      case 'jump':\n        this.options.jumpClick(this.linkInfo)\n        this.hide()\n        break\n    }\n  }\n}\n\nexport default LinkTools\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/tableTools/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/formatPicker/index.js",["1237","1238"],"import BaseFloat from '../baseFloat'\nimport { patch, h } from '../../parser/render/snabbdom'\nimport icons from './config'\n\nimport './index.css'\n\nconst defaultOptions = {\n  placement: 'top',\n  modifiers: {\n    offset: {\n      offset: '0, 5'\n    }\n  },\n  showArrow: false\n}\n\nclass FormatPicker extends BaseFloat {\n  static pluginName = 'formatPicker'\n\n  constructor (muya, options = {}) {\n    const name = 'ag-format-picker'\n    const opts = Object.assign({}, defaultOptions, options)\n    super(muya, name, opts)\n    this.oldVnode = null\n    this.formats = null\n    this.options = opts\n    this.icons = icons\n    const formatContainer = this.formatContainer = document.createElement('div')\n    this.container.appendChild(formatContainer)\n    this.floatBox.classList.add('ag-format-picker-container')\n    this.listen()\n  }\n\n  listen () {\n    const { eventCenter } = this.muya\n    super.listen()\n    eventCenter.subscribe('muya-format-picker', ({ reference, formats }) => {\n      if (reference) {\n        this.formats = formats\n        setTimeout(() => {\n          this.show(reference)\n          this.render()\n        }, 0)\n      } else {\n        this.hide()\n      }\n    })\n  }\n\n  render () {\n    const { icons, oldVnode, formatContainer, formats } = this\n    const children = icons.map(i => {\n      let icon\n      let iconWrapperSelector\n      if (i.icon) {\n        // SVG icon Asset\n        iconWrapperSelector = 'div.icon-wrapper'\n        icon = h('i.icon', h('i.icon-inner', {\n          style: {\n            background: `url(${i.icon}) no-repeat`,\n            'background-size': '100%'\n          }\n        }, ''))\n      }\n      const iconWrapper = h(iconWrapperSelector, icon)\n\n      let itemSelector = `li.item.${i.type}`\n      if (formats.some(f => f.type === i.type || f.type === 'html_tag' && f.tag === i.type)) {\n        itemSelector += '.active'\n      }\n      return h(itemSelector, {\n        attrs: {\n          title: `${i.tooltip} ${i.shortcut}`\n        },\n        on: {\n          click: event => {\n            this.selectItem(event, i)\n          }\n        }\n      }, [iconWrapper])\n    })\n\n    const vnode = h('ul', children)\n\n    if (oldVnode) {\n      patch(oldVnode, vnode)\n    } else {\n      patch(formatContainer, vnode)\n    }\n    this.oldVnode = vnode\n  }\n\n  selectItem (event, item) {\n    event.preventDefault()\n    event.stopPropagation()\n    const { contentState } = this.muya\n    contentState.render()\n    contentState.format(item.type)\n    if (/link|image/.test(item.type)) {\n      this.hide()\n    } else {\n      const { formats } = contentState.selectionFormats()\n      this.formats = formats\n      this.render()\n    }\n  }\n}\n\nexport default FormatPicker\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/tableTools/config.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/linkTools/config.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/imageToolbar/config.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/snabbdom.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/formatPicker/config.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/config/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/baseFloat/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/dompurify.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/exportMarkdown.js",["1239","1240"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/eventHandler/clickEvent.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/eventHandler/clipboard.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/eventHandler/resize.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/eventHandler/mouseEvent.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/eventHandler/dragDrop.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/exportHtml.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/eventHandler/event.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/getImageInfo.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/frontMenu/config.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/eventHandler/keyboard.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/quickInsert/config.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/prism/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/tooltip/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/emojis/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/domManipulate.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/getLinkInfo.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/baseScrollFloat/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/selection/dom.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/fileIcons/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/prism/loadLanguage.js",["1241","1242"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/selection/index.js",["1243","1244","1245"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/escapeCharacter.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/renderers/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/footnoteCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/selection/cursor.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/dragDropCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/linkCtrl.js",["1246"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/tocCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/imageCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/importMarkdown.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/htmlBlock.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/containerCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/searchCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/tabCtrl.js",["1247","1248","1249"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/pasteCtrl.js",["1250"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/arrowCtrl.js",["1251"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/copyCutCtrl.js",["1252","1253"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/core.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/history.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/tableSelectCellsCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/tableDragBarCtrl.js",["1254","1255"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/deleteCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/tableBlockCtrl.js",["1256","1257"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/emojiCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/clickCtrl.js",["1258"],"import selection from '../selection';\nimport { isMuyaEditorElement } from '../selection/dom';\nimport { HAS_TEXT_BLOCK_REG, CLASS_OR_ID } from '../config';\nimport { getParentCheckBox } from '../utils/getParentCheckBox';\nimport { cumputeCheckboxStatus } from '../utils/cumputeCheckBoxStatus';\n\nconst clickCtrl = (ContentState) => {\n  ContentState.prototype.clickHandler = function (event) {\n    const { eventCenter } = this.muya;\n    const { target } = event;\n    if (isMuyaEditorElement(target)) {\n      const lastBlock = this.getLastBlock();\n      const archor = this.findOutMostBlock(lastBlock);\n      const archorParagraph = document.querySelector(`#${archor.key}`) || {};\n      const rect =\n        archorParagraph.getBoundingClientRect &&\n        archorParagraph?.getBoundingClientRect();\n      // If click below the last paragraph\n      // and the last paragraph is not empty, create a new empty paragraph\n      if (event.clientY > rect.top + rect.height) {\n        let needToInsertNewParagraph = false;\n        if (lastBlock.type === 'span') {\n          if (\n            /atxLine|paragraphContent/.test(lastBlock.functionType) &&\n            /\\S/.test(lastBlock.text)\n          ) {\n            needToInsertNewParagraph = true;\n          }\n          if (!/atxLine|paragraphContent/.test(lastBlock.functionType)) {\n            needToInsertNewParagraph = true;\n          }\n        } else {\n          needToInsertNewParagraph = true;\n        }\n\n        if (needToInsertNewParagraph) {\n          event.preventDefault();\n          const paragraphBlock = this.createBlockP();\n          this.insertAfter(paragraphBlock, archor);\n          const key = paragraphBlock.children[0].key;\n          const offset = 0;\n          this.cursor = {\n            start: { key, offset },\n            end: { key, offset },\n          };\n\n          return this.render();\n        }\n      }\n    }\n    // handle front menu click\n    const { start: oldStart, end: oldEnd } = this.cursor;\n    if (oldStart && oldEnd) {\n      let hasSameParent = false;\n      const startBlock = this.getBlock(oldStart.key);\n      const endBlock = this.getBlock(oldEnd.key);\n      if (startBlock && endBlock) {\n        const startOutBlock = this.findOutMostBlock(startBlock);\n        const endOutBlock = this.findOutMostBlock(endBlock);\n        hasSameParent = startOutBlock === endOutBlock;\n      }\n      // show the muya-front-menu only when the cursor in the same paragraph\n      if (target.closest('.ag-front-icon') && hasSameParent) {\n        const currentBlock = this.findOutMostBlock(startBlock);\n        const frontIcon = target.closest('.ag-front-icon');\n        const rect = frontIcon.getBoundingClientRect();\n        const reference = {\n          getBoundingClientRect() {\n            return rect;\n          },\n          clientWidth: rect.width,\n          clientHeight: rect.height,\n          id: currentBlock.key,\n        };\n        this.selectedBlock = currentBlock;\n        eventCenter.dispatch('muya-front-menu', {\n          reference,\n          outmostBlock: currentBlock,\n          startBlock,\n          endBlock,\n        });\n        return this.partialRender();\n      }\n    }\n    const { start, end } = selection.getCursorRange();\n    // fix #625, the selection maybe not in edit area.\n    if (!start || !end) {\n      return;\n    }\n    // format-click\n    const node = selection.getSelectionStart();\n    const inlineNode = node ? node.closest('.ag-inline-rule') : null;\n\n    // link-format-click\n    let parentNode = inlineNode;\n    while (\n      parentNode !== null &&\n      parentNode.classList.contains(CLASS_OR_ID.AG_INLINE_RULE)\n    ) {\n      if (parentNode.tagName === 'A') {\n        const formatType = 'link'; // auto link or []() link\n        const data = {\n          text: inlineNode.textContent,\n          href: parentNode.getAttribute('href'),\n        };\n        eventCenter.dispatch('format-click', {\n          event,\n          formatType,\n          data,\n        });\n        break;\n      } else {\n        parentNode = parentNode.parentNode;\n      }\n    }\n\n    if (inlineNode) {\n      let formatType = null;\n      let data = null;\n      switch (inlineNode.tagName) {\n        case 'SPAN': {\n          if (inlineNode.hasAttribute('data-emoji')) {\n            formatType = 'emoji';\n            data = inlineNode.getAttribute('data-emoji');\n          } else if (inlineNode.classList.contains('ag-math-text')) {\n            formatType = 'inline_math';\n            data = inlineNode.textContent;\n          }\n          break;\n        }\n        case 'STRONG': {\n          formatType = 'strong';\n          data = inlineNode.textContent;\n          break;\n        }\n        case 'EM': {\n          formatType = 'em';\n          data = inlineNode.textContent;\n          break;\n        }\n        case 'DEL': {\n          formatType = 'del';\n          data = inlineNode.textContent;\n          break;\n        }\n        case 'CODE': {\n          formatType = 'inline_code';\n          data = inlineNode.textContent;\n          break;\n        }\n      }\n      if (formatType) {\n        eventCenter.dispatch('format-click', {\n          event,\n          formatType,\n          data,\n        });\n      }\n    }\n    const block = this.getBlock(start.key);\n    let needRender = false;\n    // is show format float box?\n    if (\n      start.key === end.key &&\n      start.offset !== end.offset &&\n      HAS_TEXT_BLOCK_REG.test(block.type) &&\n      block.functionType !== 'codeContent' &&\n      block.functionType !== 'languageInput'\n    ) {\n      const reference = this.getPositionReference();\n      const { formats } = this.selectionFormats();\n      eventCenter.dispatch('muya-format-picker', { reference, formats });\n    }\n\n    // update '```xxx' to code block when you click other place or use press arrow key.\n    if (block && start.key !== this.cursor.start.key) {\n      const oldBlock = this.getBlock(this.cursor.start.key);\n      if (oldBlock) {\n        needRender = needRender || this.codeBlockUpdate(oldBlock);\n      }\n    }\n\n    // change active status when paragraph changed\n    if (\n      start.key !== this.cursor.start.key ||\n      end.key !== this.cursor.end.key\n    ) {\n      needRender = true;\n    }\n\n    const needMarkedUpdate =\n      this.checkNeedRender(this.cursor) || this.checkNeedRender({ start, end });\n\n    if (needRender) {\n      this.cursor = { start, end };\n      return this.partialRender();\n    } else if (needMarkedUpdate) {\n      // Fix: whole select can not be canceled #613\n      requestAnimationFrame(() => {\n        const cursor = selection.getCursorRange();\n        if (!cursor.start || !cursor.end) {\n          return;\n        }\n        this.cursor = cursor;\n\n        return this.partialRender();\n      });\n    } else {\n      this.cursor = { start, end };\n    }\n  };\n\n  ContentState.prototype.setCheckBoxState = function (checkbox, checked) {\n    checkbox.checked = checked;\n    const block = this.getBlock(checkbox.id);\n    block.checked = checked;\n    checkbox.classList.toggle(CLASS_OR_ID.AG_CHECKBOX_CHECKED);\n  };\n\n  ContentState.prototype.updateParentsCheckBoxState = function (checkbox) {\n    let parent = getParentCheckBox(checkbox);\n    while (parent !== null) {\n      const checked = cumputeCheckboxStatus(parent);\n      if (parent.checked !== checked) {\n        this.setCheckBoxState(parent, checked);\n        parent = getParentCheckBox(parent);\n      } else {\n        break;\n      }\n    }\n  };\n\n  ContentState.prototype.updateChildrenCheckBoxState = function (\n    checkbox,\n    checked\n  ) {\n    const checkboxes = checkbox.parentElement.querySelectorAll(\n      `input ~ ul .${CLASS_OR_ID.AG_TASK_LIST_ITEM_CHECKBOX}`\n    );\n    const len = checkboxes.length;\n    for (let i = 0; i < len; i++) {\n      const checkbox = checkboxes[i];\n      if (checkbox.checked !== checked) {\n        this.setCheckBoxState(checkbox, checked);\n      }\n    }\n  };\n\n  // handle task list item checkbox click\n  ContentState.prototype.listItemCheckBoxClick = function (checkbox) {\n    const { checked } = checkbox;\n    this.setCheckBoxState(checkbox, checked);\n\n    // A task checked, then related task should be update\n    const { autoCheck } = this.muya.options;\n    if (autoCheck) {\n      this.updateChildrenCheckBoxState(checkbox, checked);\n      this.updateParentsCheckBoxState(checkbox);\n    }\n\n    const block = this.getBlock(checkbox.id);\n    const parentBlock = this.getParent(block);\n    const firstEditableBlock = this.firstInDescendant(parentBlock);\n    const { key } = firstEditableBlock;\n    const offset = 0;\n    this.cursor = { start: { key, offset }, end: { key, offset } };\n    return this.partialRender();\n  };\n};\n\nexport default clickCtrl;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/inputCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/formatCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/paragraphCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/codeBlockCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/backspaceCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/updateCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/contentState/enterCtrl.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/utils.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/rules.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/utils.js",["1259"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/sequence.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/options.js",["1260"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/parser.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/renderer.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/lexer.js",["1261"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/turndownService.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/cumputeCheckBoxStatus.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/getParentCheckBox.js",[],["1262","1263"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/slugger.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/textRenderer.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/inlineLexer.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/blockRules.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/urlify.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/marked/inlineRules.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderBlock/index.js",["1264"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/index.js",["1265"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderBlock/renderIcon.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/footnoteIdentifier.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/superSubScript.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/referenceImage.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/referenceLink.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/multipleMath.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/referenceDefinition.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/htmlRuby.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/htmlEscape.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/strong.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/text.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/inlineCode.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/em.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/del.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/emoji.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/delEmStringFactory.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/image.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/loadImageAsync.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/autoLinkExtension.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/inlineMath.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/autoLink.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/codeFense.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/tailHeader.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/hardLineBreak.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/hr.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/softLineBreak.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/link.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/htmlTag.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/header.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/highlight.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderBlock/renderContainerBlock.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/backlash.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderInlines/backlashInToken.js",["1266"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderBlock/renderBlock.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderBlock/renderLeafBlock.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderBlock/renderCopyButton.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderBlock/renderTableDargBar.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderBlock/renderContainerEditIcon.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderBlock/renderFootnoteJump.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/parser/render/renderBlock/renderToolBar.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/ui/transformer/index.js",["1267","1268"],"import './index.css'\n\nconst CIRCLES = [\n  'top-left',\n  'top-right',\n  'bottom-left',\n  'bottom-right'\n]\n\nconst CIRCLE_RADIO = 6\n\nclass Transformer {\n  static pluginName = 'transformer'\n  constructor (muya, options) {\n    this.muya = muya\n    this.options = options\n    this.reference = null\n    this.imageInfo = null\n    this.movingAnchor = null\n    this.status = false\n    this.width = null\n    this.eventId = []\n    this.lastScrollTop = null\n    this.resizing = false\n    const container = this.container = document.createElement('div')\n    container.classList.add('ag-transformer')\n    document.body.appendChild(container)\n    this.listen()\n  }\n\n  listen () {\n    const { eventCenter, container } = this.muya\n    const scrollHandler = event => {\n      if (typeof this.lastScrollTop !== 'number') {\n        this.lastScrollTop = event.target.scrollTop\n        return\n      }\n      // only when scoll distance great than 50px, then hide the float box.\n      if (!this.resizing && this.status && Math.abs(event.target.scrollTop - this.lastScrollTop) > 50) {\n        this.hide()\n      }\n    }\n    eventCenter.attachDOMEvent(document, 'click', this.hide.bind(this))\n    eventCenter.subscribe('muya-transformer', ({ reference, imageInfo }) => {\n      this.reference = reference\n      if (reference) {\n        this.imageInfo = imageInfo\n        setTimeout(() => {\n          this.render()\n        })\n      } else {\n        this.hide()\n      }\n    })\n\n    eventCenter.attachDOMEvent(container, 'scroll', scrollHandler)\n    eventCenter.attachDOMEvent(this.container, 'dragstart', event => event.preventDefault())\n    eventCenter.attachDOMEvent(document.body, 'mousedown', this.mouseDown)\n  }\n\n  render () {\n    const { eventCenter } = this.muya\n    if (this.status) {\n      this.hide()\n    }\n    this.status = true\n\n    this.createElements()\n    this.update()\n    eventCenter.dispatch('muya-float', this, true)\n  }\n\n  createElements () {\n    CIRCLES.forEach(c => {\n      const circle = document.createElement('div')\n      circle.classList.add('circle')\n      circle.classList.add(c)\n      circle.setAttribute('data-position', c)\n      this.container.appendChild(circle)\n    })\n  }\n\n  update () {\n    const rect = this.reference.getBoundingClientRect()\n    CIRCLES.forEach(c => {\n      const circle = this.container.querySelector(`.${c}`)\n\n      switch (c) {\n        case 'top-left':\n          circle.style.left = `${rect.left - CIRCLE_RADIO}px`\n          circle.style.top = `${rect.top - CIRCLE_RADIO}px`\n          break\n        case 'top-right':\n          circle.style.left = `${rect.left + rect.width - CIRCLE_RADIO}px`\n          circle.style.top = `${rect.top - CIRCLE_RADIO}px`\n          break\n        case 'bottom-left':\n          circle.style.left = `${rect.left - CIRCLE_RADIO}px`\n          circle.style.top = `${rect.top + rect.height - CIRCLE_RADIO}px`\n          break\n        case 'bottom-right':\n          circle.style.left = `${rect.left + rect.width - CIRCLE_RADIO}px`\n          circle.style.top = `${rect.top + rect.height - CIRCLE_RADIO}px`\n          break\n      }\n    })\n  }\n\n  mouseDown = (event) => {\n    const target = event.target\n    if (!target.closest('.circle')) return\n    const { eventCenter } = this.muya\n    this.movingAnchor = target.getAttribute('data-position')\n    const mouseMoveId = eventCenter.attachDOMEvent(document.body, 'mousemove', this.mouseMove)\n    const mouseUpId = eventCenter.attachDOMEvent(document.body, 'mouseup', this.mouseUp)\n    this.resizing = true\n    // Hide image toolbar\n    eventCenter.dispatch('muya-image-toolbar', { reference: null })\n    this.eventId.push(mouseMoveId, mouseUpId)\n  }\n\n  mouseMove = (event) => {\n    const clientX = event.clientX\n    let width\n    let relativeAnchor\n    const image = this.reference.querySelector('img')\n    if (!image) {\n      return\n    }\n    switch (this.movingAnchor) {\n      case 'top-left':\n      case 'bottom-left':\n        relativeAnchor = this.container.querySelector('.top-right')\n        width = Math.max(relativeAnchor.getBoundingClientRect().left + CIRCLE_RADIO - clientX, 50)\n        break\n      case 'top-right':\n      case 'bottom-right':\n        relativeAnchor = this.container.querySelector('.top-left')\n        width = Math.max(clientX - relativeAnchor.getBoundingClientRect().left - CIRCLE_RADIO, 50)\n        break\n    }\n    // Image width/height attribute must be an integer.\n    width = parseInt(width)\n    this.width = width\n    image.setAttribute('width', width)\n    this.update()\n  }\n\n  mouseUp = (event) => {\n    const { eventCenter } = this.muya\n    if (this.eventId.length) {\n      for (const id of this.eventId) {\n        eventCenter.detachDOMEvent(id)\n      }\n      this.eventId = []\n    }\n    // todo update data\n    if (typeof this.width === 'number') {\n      this.muya.contentState.updateImage(this.imageInfo, 'width', this.width)\n      this.width = null\n      this.hide()\n    }\n    this.resizing = false\n    this.movingAnchor = null\n  }\n\n  hide () {\n    const { eventCenter } = this.muya\n    const circles = this.container.querySelectorAll('.circle')\n    Array.from(circles).forEach(c => c.remove())\n    this.status = false\n    eventCenter.dispatch('muya-float', this, false)\n  }\n}\n\nexport default Transformer\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/fileSystem.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/fileSystemExtra.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/muya/lib/utils/axios.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/clipboard.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/note/index2.js",["1269"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/note/index3.js",["1270"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport Muya from '../components/muya/lib';\nimport TablePicker from '../components/muya/lib/ui/tablePicker';\nimport QuickInsert from '../components/muya/lib/ui/quickInsert';\nimport CodePicker from '../components/muya/lib/ui/codePicker';\nimport EmojiPicker from '../components/muya/lib/ui/emojiPicker';\nimport ImagePathPicker from '../components/muya/lib/ui/imagePicker';\nimport ImageSelector from '../components/muya/lib/ui/imageSelector';\nimport ImageToolbar from '../components/muya/lib/ui/imageToolbar';\nimport Transformer from '../components/muya/lib/ui/transformer';\nimport FormatPicker from '../components/muya/lib/ui/formatPicker';\nimport LinkTools from '../components/muya/lib/ui/linkTools';\nimport FootnoteTool from '../components/muya/lib/ui/footnoteTool';\nimport TableBarTools from '../components/muya/lib/ui/tableTools';\nimport FrontMenu from '../components/muya/lib/ui/frontMenu';\n\nimport { moveImageToFolder } from '../components/muya/lib/utils/fileSystem';\nimport { guessClipboardFilePath, animatedScrollTo } from '../utils/clipboard';\nimport styles from './index.less';\n\n// Node API\nconst { shell, remote } = window.require('electron');\nconst Store = window.require('electron-store');\n\nconst settingStore = new Store({ name: 'settings' });\nconst savedLocation =\n  settingStore.get('savedFileLocatiion') ||\n  `${remote.app.getPath('documents')}/cloud-note/`;\n\nconst unsplashAccessKey =\n  '123dd38b90fae4d7cb513b54d98612a4857eef30e7121aa46ebee6f0cad8404c';\n// const secret_key =\n//   'f3fca8e08dbd428eb9c675756346153f3e6b986669a8c6c78ad5a04cfeaf2ced';\nconst STANDAR_Y = 320;\n\nconst IMAGE_EXTENSIONS = Object.freeze([\n  'jpeg',\n  'jpg',\n  'png',\n  'gif',\n  'svg',\n  'webp',\n]);\n\n// use muya UI plugins\nMuya.use(TablePicker);\nMuya.use(QuickInsert);\nMuya.use(CodePicker);\nMuya.use(EmojiPicker);\nMuya.use(ImagePathPicker);\nMuya.use(ImageSelector, {\n  unsplashAccessKey,\n  photoCreatorClick: (url) => shell.openExternal(url),\n});\nMuya.use(Transformer);\nMuya.use(ImageToolbar);\nMuya.use(FormatPicker);\nMuya.use(FrontMenu);\nMuya.use(LinkTools, {\n  jumpClick: (link) => {\n    console.log('jumpClick', link);\n  },\n});\nMuya.use(FootnoteTool);\nMuya.use(TableBarTools);\n\nconst Note = ({ activeFile, onChange }) => {\n  const { id, body = '', isLoaded = false } = activeFile;\n  const editorWrapRef = useRef(null);\n  const editorRef = useRef(null);\n  // let editor = editorRef.current;\n\n  const setCompareOption = (value, oldValue, key) => {\n    if (value !== oldValue && editorRef.current) {\n      editorRef.current.setOptions({ [key]: value });\n    }\n  };\n\n  const typewriter = (value) => {\n    if (value) {\n      scrollToCursor();\n    }\n  };\n\n  const scrollToCursor = (duration = 300) => {\n    console.log('oooscroll', editorRef.current);\n    if (!editorRef.current) return;\n    const { container } = editorRef.current;\n    const { y } = editorRef.current.getSelection().cursorCoords;\n    console.log(\n      'ooo0000我执行了2',\n      container,\n      y,\n      container.scrollTop + y - STANDAR_Y\n    );\n    animatedScrollTo(container, container.scrollTop + y - STANDAR_Y, duration);\n  };\n  const setMarkdownToEditor = ({ markdown, cursor }) => {\n    if (editorRef.current) {\n      editorRef.current.clearHistory();\n      if (cursor) {\n        editorRef.current.setMarkdown(markdown, cursor, true);\n      } else {\n        editorRef.current.setMarkdown(markdown);\n      }\n    }\n  };\n\n  const options = useMemo(\n    () => ({\n      preferLooseListItem: (v, ov) =>\n        setCompareOption(v, ov, 'preferLooseListItem'),\n      autoPairBracket: (v, ov) => setCompareOption(v, ov, 'autoPairBracket'),\n      autoPairMarkdownSyntax: (v, ov) =>\n        setCompareOption(v, ov, 'autoPairMarkdownSyntax'),\n      autoPairQuote: (v, ov) => setCompareOption(v, ov, 'autoPairQuote'),\n      trimUnnecessaryCodeBlockEmptyLines: (v, ov) =>\n        setCompareOption(v, ov, 'trimUnnecessaryCodeBlockEmptyLines'),\n      bulletListMarker: (v, ov) => setCompareOption(v, ov, 'bulletListMarker'),\n      orderListDelimiter: (v, ov) =>\n        setCompareOption(v, ov, 'orderListDelimiter'),\n      tabSize: (v, ov) => setCompareOption(v, ov, 'tabSize'),\n      fontSize: (v, ov) => setCompareOption(v, ov, 'fontSize'),\n      lineHeight: (v, ov) => setCompareOption(v, ov, 'lineHeight'),\n      codeBlockLineNumbers: (v, ov) =>\n        setCompareOption(v, ov, 'codeBlockLineNumbers'),\n      listIndentation: (v, ov) => setCompareOption(v, ov, 'listIndentation'),\n      frontmatterType: (v, ov) => setCompareOption(v, ov, 'frontmatterType'),\n      superSubScript: (v, ov) => setCompareOption(v, ov, 'superSubScript'),\n      footnote: (v, ov) => setCompareOption(v, ov, 'footnote'),\n      isGitlabCompatibilityEnabled: (v, ov) =>\n        setCompareOption(v, ov, 'isGitlabCompatibilityEnabled'),\n      hideQuickInsertHint: (v, ov) =>\n        setCompareOption(v, ov, 'hideQuickInsertHint'),\n      hideLinkPopup: (v, ov) => setCompareOption(v, ov, 'hideLinkPopup'),\n      autoCheck: (v, ov) => setCompareOption(v, ov, 'autoCheck'),\n      sequenceTheme: (v, ov) => setCompareOption(v, ov, 'sequenceTheme'),\n      typewriter: typewriter,\n      clipboardFilePath: guessClipboardFilePath,\n      disableHtml: false,\n      imageAction: async (image, id, _alt = '') => {\n        console.log('imageAction222', image);\n        let result = image;\n        if (!image.length) {\n          result = await moveImageToFolder(\n            `img_${id}`,\n            image,\n            `${savedLocation}/image/`\n          );\n          console.log('imageAction_moveImageToFolder', result);\n        }\n        return Promise.resolve(result);\n      },\n      imagePathPicker: async () => {\n        const { filePaths } = await remote.dialog.showOpenDialog({\n          properties: ['openFile'],\n          filters: [\n            {\n              name: 'Images',\n              extensions: IMAGE_EXTENSIONS,\n            },\n          ],\n          message: '选择添加图片',\n        });\n        if (filePaths && filePaths[0]) {\n          return filePaths[0];\n        } else {\n          return '';\n        }\n      },\n    }),\n    []\n  );\n\n  const handleContentChange = (data) => {\n    const { markdown } = data;\n    if (markdown !== body && markdown !== '\\n') {\n      onChange(id, markdown);\n    }\n  };\n\n  const closeMuya = () => {\n    if (!editorRef.current) {\n      return;\n    }\n    editorRef.current.off('change', handleContentChange);\n    editorRef.current.destroy();\n  };\n\n  const initMuya = () => {\n    if (!editorWrapRef.current) return;\n    editorRef.current = new Muya(editorWrapRef.current, {\n      ...options,\n      markdown: body,\n    });\n    editorRef.current.on('change', handleContentChange);\n  };\n\n  useEffect(() => {\n    initMuya();\n    return () => {\n      closeMuya();\n    };\n  }, [id]);\n\n  useEffect(() => {\n    if (editorRef.current) {\n      setMarkdownToEditor({ markdown: body });\n    }\n  }, [isLoaded]);\n  return (\n    <div className={styles.Note}>\n      <div\n        ref={editorWrapRef}\n        id=\"container\"\n        style={{\n          padding: '6px 38px',\n          outline: 'none',\n          height: '100vh',\n          overflow: 'auto',\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Note;\n",{"ruleId":"1271","replacedBy":"1272"},{"ruleId":"1273","replacedBy":"1274"},{"ruleId":"1275","severity":1,"message":"1276","line":60,"column":9,"nodeType":"1277","messageId":"1278","endLine":60,"endColumn":21},{"ruleId":"1275","severity":1,"message":"1279","line":9,"column":8,"nodeType":"1277","messageId":"1278","endLine":9,"endColumn":19},{"ruleId":"1275","severity":1,"message":"1280","line":6,"column":10,"nodeType":"1277","messageId":"1278","endLine":6,"endColumn":15},{"ruleId":"1275","severity":1,"message":"1281","line":6,"column":26,"nodeType":"1277","messageId":"1278","endLine":6,"endColumn":31},{"ruleId":"1275","severity":1,"message":"1282","line":7,"column":10,"nodeType":"1277","messageId":"1278","endLine":7,"endColumn":17},{"ruleId":"1275","severity":1,"message":"1283","line":14,"column":27,"nodeType":"1277","messageId":"1278","endLine":14,"endColumn":33},{"ruleId":"1275","severity":1,"message":"1284","line":1,"column":28,"nodeType":"1277","messageId":"1278","endLine":1,"endColumn":34},{"ruleId":"1275","severity":1,"message":"1285","line":92,"column":13,"nodeType":"1277","messageId":"1278","endLine":92,"endColumn":23},{"ruleId":"1275","severity":1,"message":"1286","line":92,"column":25,"nodeType":"1277","messageId":"1278","endLine":92,"endColumn":33},{"ruleId":"1287","severity":1,"message":"1288","line":29,"column":6,"nodeType":"1289","endLine":29,"endColumn":8,"suggestions":"1290"},{"ruleId":"1287","severity":1,"message":"1291","line":22,"column":6,"nodeType":"1289","endLine":22,"endColumn":8,"suggestions":"1292"},{"ruleId":"1275","severity":1,"message":"1293","line":2,"column":8,"nodeType":"1277","messageId":"1278","endLine":2,"endColumn":14},{"ruleId":"1275","severity":1,"message":"1294","line":4,"column":10,"nodeType":"1277","messageId":"1278","endLine":4,"endColumn":17},{"ruleId":"1275","severity":1,"message":"1295","line":4,"column":19,"nodeType":"1277","messageId":"1278","endLine":4,"endColumn":24},{"ruleId":"1275","severity":1,"message":"1296","line":8,"column":23,"nodeType":"1277","messageId":"1278","endLine":8,"endColumn":31},{"ruleId":"1275","severity":1,"message":"1297","line":8,"column":41,"nodeType":"1277","messageId":"1278","endLine":8,"endColumn":45},{"ruleId":"1275","severity":1,"message":"1280","line":9,"column":10,"nodeType":"1277","messageId":"1278","endLine":9,"endColumn":15},{"ruleId":"1275","severity":1,"message":"1298","line":55,"column":22,"nodeType":"1277","messageId":"1278","endLine":55,"endColumn":35},{"ruleId":"1275","severity":1,"message":"1299","line":1,"column":38,"nodeType":"1277","messageId":"1278","endLine":1,"endColumn":49},{"ruleId":"1275","severity":1,"message":"1300","line":2,"column":25,"nodeType":"1277","messageId":"1278","endLine":2,"endColumn":31},{"ruleId":"1287","severity":1,"message":"1301","line":26,"column":6,"nodeType":"1289","endLine":26,"endColumn":15,"suggestions":"1302"},{"ruleId":"1275","severity":1,"message":"1303","line":1,"column":8,"nodeType":"1277","messageId":"1278","endLine":1,"endColumn":15},{"ruleId":"1275","severity":1,"message":"1293","line":2,"column":8,"nodeType":"1277","messageId":"1278","endLine":2,"endColumn":14},{"ruleId":"1271","replacedBy":"1304"},{"ruleId":"1273","replacedBy":"1305"},{"ruleId":"1306","severity":1,"message":"1307","line":69,"column":11,"nodeType":"1308","messageId":"1309","endLine":94,"endColumn":12},{"ruleId":"1306","severity":1,"message":"1307","line":203,"column":5,"nodeType":"1308","messageId":"1309","endLine":221,"endColumn":6},{"ruleId":"1306","severity":1,"message":"1307","line":284,"column":5,"nodeType":"1308","messageId":"1309","endLine":305,"endColumn":6},{"ruleId":"1310","severity":1,"message":"1311","line":485,"column":35,"nodeType":"1312","messageId":"1313","endLine":485,"endColumn":37},{"ruleId":"1310","severity":1,"message":"1311","line":485,"column":64,"nodeType":"1312","messageId":"1313","endLine":485,"endColumn":66},{"ruleId":"1310","severity":1,"message":"1311","line":45,"column":35,"nodeType":"1312","messageId":"1313","endLine":45,"endColumn":37},{"ruleId":"1310","severity":1,"message":"1311","line":45,"column":61,"nodeType":"1312","messageId":"1313","endLine":45,"endColumn":63},{"ruleId":"1306","severity":1,"message":"1307","line":10,"column":5,"nodeType":"1308","messageId":"1309","endLine":24,"endColumn":6},{"ruleId":"1306","severity":1,"message":"1307","line":118,"column":7,"nodeType":"1308","messageId":"1309","endLine":149,"endColumn":8},{"ruleId":"1310","severity":1,"message":"1311","line":345,"column":33,"nodeType":"1312","messageId":"1313","endLine":345,"endColumn":35},{"ruleId":"1310","severity":1,"message":"1311","line":345,"column":78,"nodeType":"1312","messageId":"1313","endLine":345,"endColumn":80},{"ruleId":"1306","severity":1,"message":"1307","line":359,"column":9,"nodeType":"1308","messageId":"1309","endLine":377,"endColumn":10},{"ruleId":"1306","severity":1,"message":"1307","line":379,"column":7,"nodeType":"1308","messageId":"1309","endLine":406,"endColumn":8},{"ruleId":"1306","severity":1,"message":"1307","line":196,"column":7,"nodeType":"1308","messageId":"1309","endLine":211,"endColumn":8},{"ruleId":"1306","severity":1,"message":"1307","line":277,"column":5,"nodeType":"1308","messageId":"1309","endLine":317,"endColumn":6},{"ruleId":"1306","severity":1,"message":"1307","line":68,"column":7,"nodeType":"1308","messageId":"1309","endLine":85,"endColumn":8},{"ruleId":"1314","severity":1,"message":"1315","line":316,"column":38,"nodeType":"1316","messageId":"1317","endLine":318,"endColumn":14},{"ruleId":"1314","severity":1,"message":"1315","line":328,"column":38,"nodeType":"1316","messageId":"1317","endLine":330,"endColumn":14},{"ruleId":"1306","severity":1,"message":"1307","line":121,"column":5,"nodeType":"1308","messageId":"1309","endLine":235,"endColumn":6},{"ruleId":"1314","severity":1,"message":"1315","line":175,"column":32,"nodeType":"1316","messageId":"1317","endLine":186,"endColumn":16},{"ruleId":"1318","severity":1,"message":"1319","line":76,"column":22,"nodeType":"1320","messageId":"1321","endLine":76,"endColumn":35},{"ruleId":"1322","severity":1,"message":"1323","line":1,"column":1,"nodeType":"1324","endLine":37,"endColumn":2},{"ruleId":"1314","severity":1,"message":"1325","line":359,"column":62,"nodeType":"1326","messageId":"1317","endLine":363,"endColumn":10},{"ruleId":"1322","severity":1,"message":"1323","line":6,"column":1,"nodeType":"1324","endLine":11,"endColumn":2},{"ruleId":"1322","severity":1,"message":"1323","line":33,"column":1,"nodeType":"1324","endLine":65,"endColumn":2},{"ruleId":"1314","severity":1,"message":"1327","line":13,"column":37,"nodeType":"1316","messageId":"1317","endLine":13,"endColumn":100},{"ruleId":"1310","severity":1,"message":"1311","line":72,"column":32,"nodeType":"1312","messageId":"1313","endLine":72,"endColumn":34},{"ruleId":"1310","severity":1,"message":"1311","line":72,"column":46,"nodeType":"1312","messageId":"1313","endLine":72,"endColumn":48},{"ruleId":"1306","severity":1,"message":"1307","line":102,"column":5,"nodeType":"1308","messageId":"1309","endLine":138,"endColumn":6},{"ruleId":"1306","severity":1,"message":"1307","line":109,"column":5,"nodeType":"1308","messageId":"1309","endLine":118,"endColumn":6},{"ruleId":"1310","severity":1,"message":"1311","line":68,"column":47,"nodeType":"1312","messageId":"1313","endLine":68,"endColumn":49},{"ruleId":"1310","severity":1,"message":"1311","line":68,"column":72,"nodeType":"1312","messageId":"1313","endLine":68,"endColumn":74},{"ruleId":"1306","severity":1,"message":"1307","line":69,"column":11,"nodeType":"1308","messageId":"1309","endLine":94,"endColumn":12},{"ruleId":"1306","severity":1,"message":"1307","line":203,"column":5,"nodeType":"1308","messageId":"1309","endLine":221,"endColumn":6},{"ruleId":"1310","severity":1,"message":"1311","line":45,"column":35,"nodeType":"1312","messageId":"1313","endLine":45,"endColumn":37},{"ruleId":"1310","severity":1,"message":"1311","line":45,"column":61,"nodeType":"1312","messageId":"1313","endLine":45,"endColumn":63},{"ruleId":"1306","severity":1,"message":"1307","line":284,"column":5,"nodeType":"1308","messageId":"1309","endLine":305,"endColumn":6},{"ruleId":"1310","severity":1,"message":"1311","line":485,"column":35,"nodeType":"1312","messageId":"1313","endLine":485,"endColumn":37},{"ruleId":"1310","severity":1,"message":"1311","line":485,"column":64,"nodeType":"1312","messageId":"1313","endLine":485,"endColumn":66},{"ruleId":"1306","severity":1,"message":"1307","line":10,"column":5,"nodeType":"1308","messageId":"1309","endLine":24,"endColumn":6},{"ruleId":"1310","severity":1,"message":"1311","line":345,"column":33,"nodeType":"1312","messageId":"1313","endLine":345,"endColumn":35},{"ruleId":"1310","severity":1,"message":"1311","line":345,"column":78,"nodeType":"1312","messageId":"1313","endLine":345,"endColumn":80},{"ruleId":"1306","severity":1,"message":"1307","line":359,"column":9,"nodeType":"1308","messageId":"1309","endLine":377,"endColumn":10},{"ruleId":"1306","severity":1,"message":"1307","line":379,"column":7,"nodeType":"1308","messageId":"1309","endLine":406,"endColumn":8},{"ruleId":"1306","severity":1,"message":"1307","line":68,"column":7,"nodeType":"1308","messageId":"1309","endLine":85,"endColumn":8},{"ruleId":"1306","severity":1,"message":"1307","line":196,"column":7,"nodeType":"1308","messageId":"1309","endLine":211,"endColumn":8},{"ruleId":"1306","severity":1,"message":"1307","line":277,"column":5,"nodeType":"1308","messageId":"1309","endLine":317,"endColumn":6},{"ruleId":"1314","severity":1,"message":"1315","line":316,"column":38,"nodeType":"1316","messageId":"1317","endLine":318,"endColumn":14},{"ruleId":"1314","severity":1,"message":"1315","line":328,"column":38,"nodeType":"1316","messageId":"1317","endLine":330,"endColumn":14},{"ruleId":"1306","severity":1,"message":"1307","line":121,"column":5,"nodeType":"1308","messageId":"1309","endLine":235,"endColumn":6},{"ruleId":"1314","severity":1,"message":"1315","line":175,"column":32,"nodeType":"1316","messageId":"1317","endLine":186,"endColumn":16},{"ruleId":"1306","severity":1,"message":"1307","line":120,"column":7,"nodeType":"1308","messageId":"1309","endLine":151,"endColumn":8},{"ruleId":"1318","severity":1,"message":"1319","line":76,"column":22,"nodeType":"1320","messageId":"1321","endLine":76,"endColumn":35},{"ruleId":"1322","severity":1,"message":"1323","line":1,"column":1,"nodeType":"1324","endLine":37,"endColumn":2},{"ruleId":"1314","severity":1,"message":"1325","line":359,"column":62,"nodeType":"1326","messageId":"1317","endLine":363,"endColumn":10},{"ruleId":"1271","replacedBy":"1328"},{"ruleId":"1273","replacedBy":"1329"},{"ruleId":"1322","severity":1,"message":"1323","line":6,"column":1,"nodeType":"1324","endLine":11,"endColumn":2},{"ruleId":"1322","severity":1,"message":"1323","line":33,"column":1,"nodeType":"1324","endLine":65,"endColumn":2},{"ruleId":"1314","severity":1,"message":"1327","line":13,"column":37,"nodeType":"1316","messageId":"1317","endLine":13,"endColumn":100},{"ruleId":"1306","severity":1,"message":"1307","line":88,"column":7,"nodeType":"1308","messageId":"1309","endLine":105,"endColumn":8},{"ruleId":"1306","severity":1,"message":"1307","line":130,"column":5,"nodeType":"1308","messageId":"1309","endLine":141,"endColumn":6},{"ruleId":"1287","severity":1,"message":"1330","line":123,"column":6,"nodeType":"1289","endLine":123,"endColumn":8,"suggestions":"1331"},{"ruleId":"1275","severity":1,"message":"1332","line":2,"column":45,"nodeType":"1277","messageId":"1278","endLine":2,"endColumn":53},"no-native-reassign",["1333"],"no-negated-in-lhs",["1334"],"no-unused-vars","'unsavedFiles' is assigned a value but never used.","Identifier","unusedVar","'EmptyStatus' is defined but never used.","'ITodo' is defined but never used.","'ESort' is defined but never used.","'message' is defined but never used.","'editId' is assigned a value but never used.","'useRef' is defined but never used.","'activeFile' is assigned a value but never used.","'onChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'menus' and 'targetClass'. Either include them or remove the dependency array.","ArrayExpression",["1335"],"React Hook useEffect has a missing dependency: 'targetKeyCode'. Either include it or remove the dependency array.",["1336"],"'moment' is defined but never used.","'IColumn' is defined but never used.","'ITask' is defined but never used.","'Dropdown' is defined but never used.","'Menu' is defined but never used.","'setTaskRepeat' is assigned a value but never used.","'ChangeEvent' is defined but never used.","'Select' is defined but never used.","React Hook useEffect has missing dependencies: 'data.branchs', 'data.desc', 'data.startDate', 'data.times', and 'data.title'. Either include them or remove the dependency array.",["1337"],"'shortid' is defined but never used.",["1333"],["1334"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","ArrowFunctionExpression","unsafeRefs","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Function declared in a loop contains unsafe references to variable(s) 'bull'.","FunctionExpression","Function declared in a loop contains unsafe references to variable(s) 'i', 'i'.",["1333"],["1334"],"React Hook useEffect has missing dependencies: 'scrollToCursor', 'setCompareOption', and 'typewriter'. Either include them or remove the dependency array.",["1338"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1339","fix":"1340"},{"desc":"1341","fix":"1342"},{"desc":"1343","fix":"1344"},{"desc":"1345","fix":"1346"},"Update the dependencies array to be: [menus, targetClass]",{"range":"1347","text":"1348"},"Update the dependencies array to be: [targetKeyCode]",{"range":"1349","text":"1350"},"Update the dependencies array to be: [data.branchs, data.desc, data.id, data.startDate, data.times, data.title]",{"range":"1351","text":"1352"},"Update the dependencies array to be: [scrollToCursor, setCompareOption, typewriter]",{"range":"1353","text":"1354"},[1031,1033],"[menus, targetClass]",[686,688],"[targetKeyCode]",[949,958],"[data.branchs, data.desc, data.id, data.startDate, data.times, data.title]",[4764,4766],"[scrollToCursor, setCompareOption, typewriter]"]