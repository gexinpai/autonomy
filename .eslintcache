[{"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/index.js":"1","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/reportWebVitals.js":"2","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/App.js":"3","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/crash/index.js":"4","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/setting/index.js":"5","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/fileHelper.js":"6","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/FileSearch.js":"7","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/FileList.js":"8","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/treeHelper.js":"9","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/hooks/useIpcRenderer.js":"10","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/index.js":"11","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/hooks/useContextMenu.js":"12","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/hooks/useKeyPressed.js":"13","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/helper.js":"14","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/antdIcons.js":"15","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/initial.js":"16","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/AimList.js":"17","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/todo/TodoList.js":"18","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/EditAim.js":"19","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/todo/initial.js":"20","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Column.js":"21","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Task.js":"22","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/clipboard.js":"23","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/todo/index2.js":"24","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/todo/index.js":"25","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/SmallRate.jsx":"26","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/music/index.js":"27","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/music/Iframe.js":"28","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/note/index.jsx":"29","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/CKEditor/index.jsx":"30","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/CKEditor/config.js":"31"},{"size":1173,"mtime":1674752816283,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1607156125945,"results":"34","hashOfConfig":"33"},{"size":13950,"mtime":1674755019466,"results":"35","hashOfConfig":"33"},{"size":195,"mtime":1641127466648,"results":"36","hashOfConfig":"33"},{"size":6188,"mtime":1674755027756,"results":"37","hashOfConfig":"33"},{"size":959,"mtime":1674750896662,"results":"38","hashOfConfig":"33"},{"size":2210,"mtime":1674753830361,"results":"39","hashOfConfig":"33"},{"size":5979,"mtime":1674753824319,"results":"40","hashOfConfig":"33"},{"size":6804,"mtime":1674755044025,"results":"41","hashOfConfig":"33"},{"size":453,"mtime":1618638838820,"results":"42","hashOfConfig":"33"},{"size":2849,"mtime":1674750896663,"results":"43","hashOfConfig":"33"},{"size":1112,"mtime":1641126823400,"results":"44","hashOfConfig":"33"},{"size":746,"mtime":1618856410510,"results":"45","hashOfConfig":"33"},{"size":1268,"mtime":1674755156088,"results":"46","hashOfConfig":"33"},{"size":941,"mtime":1641114248602,"results":"47","hashOfConfig":"33"},{"size":773,"mtime":1610185767507,"results":"48","hashOfConfig":"33"},{"size":3082,"mtime":1674750896662,"results":"49","hashOfConfig":"33"},{"size":4093,"mtime":1641055238903,"results":"50","hashOfConfig":"51"},{"size":7485,"mtime":1674751013479,"results":"52","hashOfConfig":"33"},{"size":1009,"mtime":1674750896664,"results":"53","hashOfConfig":"33"},{"size":986,"mtime":1674753814922,"results":"54","hashOfConfig":"33"},{"size":998,"mtime":1674753841006,"results":"55","hashOfConfig":"33"},{"size":2051,"mtime":1639751075707,"results":"56","hashOfConfig":"57"},{"size":1554,"mtime":1641055264760,"results":"58","hashOfConfig":"51"},{"size":5176,"mtime":1674750896662,"results":"59","hashOfConfig":"33"},{"size":410,"mtime":1674753832995,"results":"60","hashOfConfig":"33"},{"size":1586,"mtime":1674750896664,"results":"61","hashOfConfig":"33"},{"size":266,"mtime":1641665214498,"results":"62","hashOfConfig":"33"},{"size":696,"mtime":1674741346427,"results":"63","hashOfConfig":"33"},{"size":1213,"mtime":1674754638607,"results":"64","hashOfConfig":"33"},{"size":4948,"mtime":1674754604327,"results":"65","hashOfConfig":"33"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"16m1u6l",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},"1teqt1h",{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},"12gxqts",{"filePath":"124","messages":"125","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/index.js",[],["142","143"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/reportWebVitals.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/App.js",["144"],"import { useState } from 'react';\nimport styles from './App.less';\nimport moment from 'moment';\nimport FileSearch from './components/FileSearch';\nimport FileList from './components/FileList';\nimport Note from './note';\nimport Todo from './todo';\nimport Aim from './aim';\nimport {\n  defaultFiles,\n  initAllFiles,\n  importChildren,\n  findItemById,\n  editItemById,\n  createItemByFatherId,\n  deleteItemById,\n  findItemsByIds,\n  getChildrenFilePath,\n  getIconByFileType,\n  deleteExtraAttr,\n  deepClone,\n} from './utils/treeHelper';\nimport emptyImg from '../public/empty.png';\nimport shortid from 'shortid';\nimport fileHelper from './utils/fileHelper';\nimport useIpcRenderer from './hooks/useIpcRenderer';\nimport Draggable from 'react-draggable';\nimport { getSaveLocation, getAutoSync, isDevelop } from './utils/helper';\nimport Music from './music';\n// Node API\nconst { remote, ipcRenderer } = window.require('electron');\nconst { join, basename, extname, dirname } = window.require('path');\nconst Store = window.require('electron-store');\n\nconst fileStore = new Store({ name: isDevelop() ? 'Dev Data' : 'Files Data' });\n// fileStore.set('files', defaultFiles); //重置操作\n\nconst savedLocation = getSaveLocation();\n\nconst defaultSiderWidth = 260;\nconst miniSiderWidth = 190;\nconst maxSiderWidth = 360;\n\n/**\n * state分析\n * - 文件列表 【】\n * - 搜索后的文件列表 key\n * - 未保存的文件列表 [id]\n * - 已经打开的文件列表 [id]\n * - 当前选中的文件\n */\nfunction App() {\n  const [files, setFiles] = useState(\n    initAllFiles(fileStore.get('files'), defaultFiles)\n  );\n  const [activeFileId, setActiveFileId] = useState('');\n  const [openedFileIds, setOpenedFileIds] = useState([]);\n  const [unsavedFileIds, setUnsavedFileIds] = useState([]);\n  const [newFile, setNewFile] = useState(null);\n  const [siderWidth, setSiderWidth] = useState(defaultSiderWidth);\n\n  const activeFile = findItemById(files, activeFileId);\n  // const openedFiles = findItemsByIds(files, openedFileIds);\n  // const unsavedFiles = findItemsByIds(files, unsavedFileIds);\n\n  const saveFile2Store = (data) => {\n    const newData = deleteExtraAttr(deepClone(data));\n    fileStore.set('files', newData);\n  };\n\n  const clearUnsavedFile = (id) => {\n    const newUnsavedFileIds = unsavedFileIds.filter((fileId) => fileId !== id);\n    setUnsavedFileIds(newUnsavedFileIds);\n  };\n\n  const closeOpenedFile = (id) => {\n    const newOpenedFileIds = openedFileIds.filter((openId) => openId !== id);\n    setOpenedFileIds(newOpenedFileIds);\n    if (newOpenedFileIds.length > 0) {\n      setActiveFileId(newOpenedFileIds[newOpenedFileIds.length - 1]);\n    } else {\n      setActiveFileId('');\n    }\n  };\n\n  const saveBeforSwitchFile = (id, isLoaded, path) => {\n    if (activeFile) {\n      saveEditFile().then(() => {\n        openClickedFile(id, isLoaded, path);\n      });\n    } else {\n      openClickedFile(id, isLoaded, path);\n    }\n  };\n\n  const openClickedFile = (id, isLoaded, path) => {\n    const isExists = fileHelper.exists(path);\n    const curFile = findItemById(files, id);\n    if (!isLoaded && path) {\n      // TODO\n      if (getAutoSync()) {\n        ipcRenderer.send('download-file', {\n          key: `${curFile.title}.md`,\n          path: curFile.path,\n          id: curFile.id,\n          updatedAt: curFile.updatedAt,\n        });\n      } else {\n        if (!isExists) {\n          fileHelper.writeFile(path, '').then(() => {\n            const newFiles = editItemById(files, id, {\n              body: '',\n              isLoaded: true,\n            });\n            setFiles(newFiles);\n            if (!openedFileIds.includes(id)) {\n              setOpenedFileIds([...openedFileIds, id]);\n            }\n          });\n        } else {\n          fileHelper.readFile(path).then((val) => {\n            // console.log('readFile-222', path, val);\n            const newFiles = editItemById(files, id, {\n              body: val,\n              isLoaded: true,\n            });\n            setFiles(newFiles);\n            if (!openedFileIds.includes(id)) {\n              setOpenedFileIds([...openedFileIds, id]);\n            }\n          });\n        }\n      }\n      setActiveFileId(id);\n    } else {\n      setActiveFileId(id);\n      if (!openedFileIds.includes(id)) {\n        setOpenedFileIds([...openedFileIds, id]);\n      }\n    }\n  };\n  const deleteFile = (id, path, isLeaf = false) => {\n    if (isLeaf && isLeaf !== 'false') {\n      fileHelper.deleteFile(path).then(() => {\n        const newFiles = deleteItemById(files, id);\n        saveFile2Store(newFiles);\n        setFiles(newFiles);\n        closeOpenedFile(id);\n        clearUnsavedFile(id);\n      });\n    } else {\n      const curFolder = findItemById(files, id);\n      const allDeletePath = getChildrenFilePath(curFolder.children);\n      Promise.all(\n        allDeletePath.map((path) => fileHelper.deleteFile(path))\n      ).then(() => {\n        const newFiles = deleteItemById(files, id);\n        saveFile2Store(newFiles);\n        setFiles(newFiles);\n        closeOpenedFile(id);\n        clearUnsavedFile(id);\n      });\n    }\n  };\n  const createNewFile = (fatherId, type, isLeaf) => {\n    const newId = shortid.generate();\n    const newPath = join(\n      `${savedLocation}${type}/`,\n      `${newId}${type === 'note' ? '.md' : '.json'}`\n    );\n    const defalutBody = type === 'note' ? '##### 请输入markdown' : '';\n    const folder = isLeaf\n      ? {\n          path: newPath,\n          body: defalutBody,\n        }\n      : { children: [] };\n    const newFile = {\n      id: newId,\n      title: '',\n      key: newId,\n      type,\n      icon: getIconByFileType(type, isLeaf),\n      createAt: moment().valueOf(),\n      isLeaf,\n      isSync: false,\n      isLoaded: true,\n      updatedAt: 0,\n      ...folder,\n    };\n    const newFiles = createItemByFatherId(files, fatherId, newFile);\n    if (isLeaf) {\n      fileHelper.writeFile(newPath, defalutBody).then((res) => {\n        setNewFile(newFile);\n        setFiles(newFiles);\n        // 默认打开 openClickedFile(newId, true, newPath);\n        setActiveFileId(newId);\n        if (!openedFileIds.includes(newId)) {\n          setOpenedFileIds([...openedFileIds, newId]);\n        }\n      });\n    } else {\n      setNewFile(newFile);\n      setFiles(newFiles);\n    }\n  };\n  const renameFile = (id, path, title, type, isLeaf = false) => {\n    if (isLeaf) {\n      const newPath = `${dirname(path)}/${title}${\n        type === 'note' ? '.md' : '.json'\n      }`;\n      fileHelper.renameFile(path, newPath).then(() => {\n        const newFiles = editItemById(files, id, { title, path: newPath });\n        // 默认打开 openClickedFile(newId, true, newPath);\n        setActiveFileId(id);\n        if (!openedFileIds.includes(id)) {\n          setOpenedFileIds([...openedFileIds, id]);\n        }\n        saveFile2Store(newFiles);\n        setFiles(newFiles);\n        setNewFile(null);\n      });\n    } else {\n      const newFiles = editItemById(files, id, { title });\n      saveFile2Store(newFiles);\n      setFiles(newFiles);\n      setNewFile(null);\n    }\n  };\n\n  const fileChange = (id, value) => {\n    // console.log('fileChange', id, value);\n    if (typeof value !== 'string') {\n      value = JSON.stringify(value);\n    }\n    if (value !== activeFile.body) {\n      const newFiles = editItemById(files, id, { body: value });\n      setFiles(newFiles);\n      if (!unsavedFileIds.includes(id)) {\n        setUnsavedFileIds([...unsavedFileIds, id]);\n      }\n    }\n  };\n\n  const saveEditFile = () => {\n    if (!activeFile) return;\n    // console.log('我要开始执行save了');\n    const { path, body, title } = activeFile;\n    // if (activeFile.type === 'note') {\n    // console.log('保存文件，我执行了', path, body);\n    return fileHelper.writeFile(path, body).then(() => {\n      setUnsavedFileIds(unsavedFileIds.filter((id) => id !== activeFileId));\n      if (getAutoSync()) {\n        ipcRenderer.send('upload-file', {\n          key: `${title}.md`,\n          path: path,\n        });\n      }\n    });\n    // }\n  };\n\n  const onImportFiles = (id, type) => {\n    remote.dialog\n      .showOpenDialog({\n        title: '选择导入MD文档',\n        filters: [{ name: 'Markdown Files', extension: ['md'] }],\n        properties: ['openFile', 'multiSelections'],\n      })\n      .then(({ filePaths }) => {\n        if (Array.isArray(filePaths)) {\n          // TODO 过滤已经添加过的文件\n          const children = filePaths.map((path) => {\n            const newId = shortid.generate();\n            return {\n              id: newId,\n              title: basename(path, extname(path)),\n              path,\n              key: newId,\n              type,\n              icon: getIconByFileType(type, true),\n              createAt: moment().valueOf(),\n              isLeaf: true,\n              isSync: false,\n              updatedAt: 0,\n            };\n          });\n          const newFiles = importChildren(files, id, children);\n          saveFile2Store(newFiles);\n          setFiles(newFiles);\n          if (children.length > 0) {\n            remote.dialog.showMessageBox({\n              type: 'info',\n              title: `导入成功`,\n              message: `成功导入了${children.length}个文件`,\n            });\n          }\n        }\n      });\n  };\n\n  const activeFileUploaded = () => {\n    const newFiles = editItemById(files, activeFileId, {\n      isSynced: true,\n      uploadedAt: moment().valueOf(),\n    });\n    setFiles(newFiles);\n    saveFile2Store(newFiles);\n  };\n\n  const activeFileDownloaded = (_, data) => {\n    // // console.log('activeFileDownloaded++++', data);\n    const curFile = findItemById(files, data.id);\n    // // console.log('activeFileDownloaded++++', curFile.path);\n    fileHelper.readFile(curFile.path).then((value) => {\n      // // console.log('readFile++++++', value);\n      let newData;\n      if (data.status === 'downloaded-success') {\n        newData = {\n          body: value,\n          isLoaded: true,\n          isSynced: true,\n          updatedAt: moment().valueOf(),\n        };\n      } else {\n        newData = {\n          body: value,\n          isLoaded: true,\n        };\n      }\n      // // console.log('activeFileDownloaded', newData);\n      const newFiles = editItemById(files, data.id, newData);\n      setFiles(newFiles);\n      saveFile2Store(newFiles);\n    });\n  };\n\n  const handleDrag = (_, ui) => {\n    const dragWidth = ui.x + defaultSiderWidth;\n    setSiderWidth(dragWidth);\n  };\n\n  useIpcRenderer({\n    'active-file-uploaded': activeFileUploaded,\n    'file-downloaded': activeFileDownloaded,\n    'save-edit-file': saveEditFile,\n  });\n  // // console.log('activeFileId', activeFile, files);\n  return (\n    <div className={styles.App}>\n      <div style={{ height: '100%', display: 'flex' }}>\n        <div\n          style={{\n            width: siderWidth,\n            background: '#6E6E6E',\n            color: 'white',\n            minWidth: siderWidth,\n            position: 'relative',\n          }}\n        >\n          <div className={styles.dragArea} />\n          <FileSearch\n            title=\"\"\n            onFileSearch={(val) => {\n              // console.log(val);\n            }}\n          />\n          <FileList\n            activeId={activeFileId}\n            files={deepClone(files)}\n            newFile={newFile}\n            // openedFiles={openedFiles}\n            onImportFiles={onImportFiles}\n            closeOpenedFile={closeOpenedFile}\n            unsavedFileIds={unsavedFileIds}\n            onFileClick={saveBeforSwitchFile}\n            createNewFile={createNewFile}\n            onFileDelete={deleteFile}\n            onFileRename={renameFile}\n          />\n          <Draggable\n            axis=\"x\"\n            bounds={{\n              left: miniSiderWidth - defaultSiderWidth,\n              right: maxSiderWidth - defaultSiderWidth,\n            }}\n            defaultPosition={{ x: 0, y: 0 }}\n            onDrag={handleDrag}\n          >\n            <div className={styles.handle} />\n          </Draggable>\n        </div>\n        <div\n          style={{ flex: 1, backgroundColor: '#fafbfc', overflow: 'hidden' }}\n        >\n          {!activeFile ? (\n            <div className={styles.empty}>\n              <div\n                style={{ width: '100%', position: 'absolute', top: 0 }}\n                className={styles.dragArea}\n              />\n              <img src={emptyImg} alt=\"没有数据\" />\n              <span className={styles.emptyWord}>空空如也</span>\n            </div>\n          ) : (\n            <>\n              <h1\n                className={styles.dragArea}\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  height: 58,\n                  padding: '0 58px',\n                  fontSize: 26,\n                  fontWeight: 600,\n                  margin: 0,\n                  backgroundColor: '#fafbfc',\n                  position: 'relative',\n                }}\n              >\n                {unsavedFileIds.includes(activeFileId) && (\n                  <span className={styles.unsaveIcon} />\n                )}\n                {activeFile.title}\n              </h1>\n              {activeFile.type === 'todo' ? (\n                <Todo activeFile={activeFile} onChange={fileChange} />\n              ) : activeFile.type === 'note' ? (\n                <Note activeFile={activeFile} onChange={fileChange} />\n              ) : activeFile.type === 'aim' ? (\n                <Aim activeFile={activeFile} onChange={fileChange} />\n              ) : activeFile.type === 'music' ? (\n                <Music activeFile={activeFile} onChange={fileChange} />\n              ) : (\n                <div className={styles.empty}>\n                  <h3 style={{ color: 'red' }}>\n                    {activeFile.title}, 正在开发中...\n                  </h3>\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/crash/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/setting/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/fileHelper.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/FileSearch.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/FileList.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/treeHelper.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/hooks/useIpcRenderer.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/index.js",["145","146","147","148","149","150","151"],"import React, { useState } from 'react';\n// import { useIdb } from 'react-use-idb';\nimport moment from 'moment';\nimport styles from './index.less';\nimport AimList from './AimList';\nimport { EAimType, EAimSort, initAim } from './initial';\nimport { message } from 'antd';\nimport EditAim from './EditAim';\nimport EmptyStatus from '../../public/empty.png';\n\nconst Aim = ({ activeFile, onChange }) => {\n  // const initAims = initAim(moment());\n  // const [allAims, setAllAims] = useState(initAims);\n  // const { currentId = allAims.data[0].id, editId, data = [] } = allAims;\n  // const [currentAim] = data.filter((item) => item.id === currentId);\n  // console.log('currentAim', initAims, currentAim);\n  // const changeCurrentAim = (aim) => {\n  //   const newDatas = data.filter((item) => item.id !== currentId);\n  //   newDatas.push({ ...aim, modifyTime: moment().valueOf() });\n  //   setAllAims({ ...allAims, editId: '', data: newDatas });\n  // };\n\n  // const addBranchTimes = (index) => {\n  //   const { data } = allAims;\n  //   const newData = data.map((item) => {\n  //     if (item.id === currentId) {\n  //       item.currentTimes += 1;\n  //       if (index >= 0) {\n  //         item.branchs[index].currentTimes += 1;\n  //       }\n  //     }\n  //     return item;\n  //   });\n\n  //   setAllAims({\n  //     ...allAims,\n  //     data: newData,\n  //   });\n  // };\n  // const onEditChange = (type, id, title) => {\n  //   if (type === EAimType.start) {\n  //     setAllAims({ ...allAims, editId: id });\n  //     return;\n  //   }\n  //   const { data } = allAims;\n  //   if (type === EAimType.delete) {\n  //     const newData = data.filter((item) => item.id !== id);\n  //     setAllAims({ ...allAims, data: newData });\n  //     return;\n  //   }\n  //   if (type === EAimType.top) {\n  //     const newData = data.map((item) => {\n  //       if (item.id === id) {\n  //         item.sort =\n  //           item.sort === EAimSort.top ? EAimSort.normal : EAimSort.top;\n  //         item.modifyTime = moment().valueOf();\n  //       }\n  //       return item;\n  //     });\n  //     setAllAims({ ...allAims, editId: '', data: newData });\n  //     return;\n  //   }\n  //   if (type === EAimType.rename) {\n  //     if (!title) {\n  //       message.error('标题不能为空');\n  //       return;\n  //     }\n  //     const newData = data.map((item) => {\n  //       if (item.id === id) {\n  //         item.title = title;\n  //         item.modifyTime = moment().valueOf();\n  //       }\n  //       return item;\n  //     });\n  //     setAllAims({ ...allAims, editId: '', data: newData });\n  //   }\n  // };\n\n  return (\n    <div className={styles.Aim}>\n      <div className={styles.content}>\n        <EditAim activeFile={activeFile} onSubmit={onChange} />\n        <AimList activeFile={activeFile} addBranchTimes={onChange} />\n      </div>\n    </div>\n  );\n};\nexport default Aim;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/hooks/useContextMenu.js",["152"],"import { useEffect, useRef } from 'react';\nimport { getParentNode } from '../utils/helper';\n// import nodejs modules\nconst { remote } = window.require('electron');\nconst { Menu, MenuItem } = remote;\n\nconst useContextMenu = (menus, targetClass) => {\n  const clickElement = useRef(null);\n  useEffect(() => {\n    const menu = new Menu();\n    menus.forEach((item) => {\n      menu.append(new MenuItem(item));\n    });\n    const handleContextMenu = ({ target }) => {\n      // 只有 e.target被 target 包裹时才出现\n      // const targetEle = document.querySelector(target);\n      // if (targetEle && targetEle.contains(e.target)) {\n      //if (target.classList.contains(targetClass)) {\n      const parentNode = getParentNode(target, targetClass);\n      if (parentNode) {\n        clickElement.current = parentNode;\n        menu.popup({ window: remote.getCurrentWindow() });\n      }\n    };\n    window.addEventListener('contextmenu', handleContextMenu);\n    return () => {\n      window.removeEventListener('contextmenu', handleContextMenu);\n    };\n  }, []);\n  return clickElement;\n};\n\nexport default useContextMenu;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/hooks/useKeyPressed.js",["153"],"import { useState, useEffect } from 'react';\n\nconst useKeyPressed = (targetKeyCode) => {\n  const [keyPressed, setKeyPressed] = useState(false);\n  useEffect(() => {\n    const keyDownHandler = ({ keyCode }) => {\n      if (keyCode === targetKeyCode) {\n        setKeyPressed(true);\n      }\n    };\n    const keyUpHandler = ({ keyCode }) => {\n      if (keyCode === targetKeyCode) {\n        setKeyPressed(false);\n      }\n    };\n    document.addEventListener('keyup', keyUpHandler);\n    document.addEventListener('keydown', keyDownHandler);\n    return () => {\n      document.removeEventListener('keyup', keyUpHandler);\n      document.removeEventListener('keydown', keyDownHandler);\n    };\n  }, []);\n  return keyPressed;\n};\n\nexport default useKeyPressed;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/helper.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/antdIcons.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/initial.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/AimList.js",["154"],"import React from 'react';\nimport { Card, Progress } from 'antd';\nimport { LikeOutlined } from '@ant-design/icons';\n\nimport styles from './index.less';\n\nconst AimList = (props) => {\n  const { activeFile, addBranchTimes } = props || {};\n  const data =\n    typeof activeFile?.body === 'string' && activeFile?.body.length > 0\n      ? JSON.parse(activeFile.body)\n      : { branchs: [] };\n\n  const { title, desc, branchs = [], times = 0, currentTimes = 0 } = data;\n  console.log('aimlist', data, branchs);\n\n  const handleTimesChagne = (index) => {\n    const newBranchs = [...branchs];\n    let dataCurrentTimes = data?.currentTimes;\n    if (index >= 0) {\n      if ((newBranchs[index]?.currentTimes || 0) < newBranchs[index]?.times) {\n        newBranchs[index].currentTimes += 1;\n        dataCurrentTimes = (data.currentTimes || 0) + 1;\n      }\n    } else {\n      if ((data?.currentTimes || 0) < data?.times) {\n        dataCurrentTimes = (data.currentTimes || 0) + 1;\n      }\n    }\n    addBranchTimes(activeFile.id, {\n      ...data,\n      currentTimes: dataCurrentTimes,\n      branchs: newBranchs,\n    });\n  };\n\n  return (\n    <div className={styles.AimList}>\n      <Card\n        style={{ background: '#e6f7ff' }}\n        actions={\n          branchs.length < 1\n            ? [\n                <span onClick={() => handleTimesChagne(-1)}>\n                  <LikeOutlined key=\"times\" style={{ marginRight: 4 }} />\n                  {currentTimes}\n                </span>,\n              ]\n            : [\n                <Progress\n                  style={{ width: '90%', margin: '0 18px' }}\n                  percent={Math.floor((currentTimes / times) * 100)}\n                />,\n              ]\n        }\n      >\n        <div className={styles.item}>\n          <Progress\n            percent={Math.floor((currentTimes / times) * 100)}\n            width={60}\n            type=\"circle\"\n            format={() => '总'}\n          />\n          <div className={styles.titleDes}>\n            <div className={styles.title}>{activeFile.title}</div>\n            <div className={styles.desc}>{desc}</div>\n          </div>\n        </div>\n      </Card>\n      {branchs.map((branch, index) => {\n        if (!branch) return null;\n        return (\n          <Card\n            style={{ marginTop: 12 }}\n            key={branch.id}\n            actions={[\n              <span onClick={() => handleTimesChagne(index)}>\n                <LikeOutlined key=\"times\" style={{ marginRight: 4 }} />\n                {branch.currentTimes}\n              </span>,\n            ]}\n          >\n            <div className={styles.item}>\n              <Progress\n                percent={Math.floor((branch.currentTimes / branch.times) * 100)}\n                width={60}\n                type=\"circle\"\n              />\n              <div className={styles.titleDes}>\n                <div className={styles.branchTitle}>{branch.name}</div>\n                <div className={styles.desc}>{branch.desc}</div>\n              </div>\n            </div>\n          </Card>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default AimList;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/todo/TodoList.js",["155","156","157","158","159","160","161"],"import React, { useState } from 'react';\nimport moment from 'moment';\nimport styles from './index.less';\nimport { IColumn, ITask, EStatus, ERate, ERepeat } from './initial';\nimport shortid from 'shortid';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport Column from '../components/Column';\nimport { Input, Rate, Dropdown, Button, Menu } from 'antd';\nimport { ITodo } from './initial';\n\nconst switchColumnTask = (todoData, source, destination) => {\n  const { columns } = todoData;\n  let task;\n  let targetColumnIndex;\n  const newColumns = columns.map((column, index) => {\n    if (column.id === source.droppableId) {\n      task = column.tasks[source.index];\n      column.tasks.splice(source.index, 1);\n    }\n    if (column.id === destination.droppableId) {\n      targetColumnIndex = index;\n    }\n    return column;\n  });\n  if ((targetColumnIndex || targetColumnIndex === 0) && task) {\n    newColumns[targetColumnIndex].tasks.splice(destination.index, 0, task);\n  }\n  return { ...todoData, columns: newColumns };\n};\n\nconst deleteColumnTask = (todoData, source) => ({\n  ...todoData,\n  columns: todoData.columns.map((column) => {\n    if (column.id === source.droppableId) {\n      column.tasks.splice(source.index, 1);\n    }\n    return {\n      ...column,\n    };\n  }),\n});\n\nconst sortTaskByRate = (columns) =>\n  columns.map((column) => {\n    column.tasks.sort((a, b) => b.rate - a.rate);\n    return column;\n  });\n\nconst defalutColumns = [\n  {\n    id: 'column-todo',\n    name: '代办',\n    tasks: [],\n  },\n  {\n    id: 'column-inprogress',\n    name: '进行中',\n    tasks: [],\n  },\n  {\n    id: 'column-done',\n    name: '已完成',\n    tasks: [],\n  },\n];\n\nconst TodoList = (props) => {\n  const { todoData, onChange } = props;\n  const { columns = defalutColumns } = todoData;\n  const [taskRate, setTaskRate] = useState(ERate.zero);\n  const [inputTask, setInputTask] = useState('');\n  const [taskRepeat, setTaskRepeat] = useState(ERepeat.once);\n\n  const handleDragEnd = (result) => {\n    const { source, destination } = result;\n    if (!destination) {\n      const newTodoData = deleteColumnTask({ ...todoData }, source);\n      onChange(newTodoData);\n      return;\n    }\n    if (\n      source.droppableId === destination.droppableId &&\n      source.index === destination.index\n    ) {\n      return;\n    }\n    const newTodoData = switchColumnTask(todoData, source, destination);\n    onChange(newTodoData);\n  };\n  const rate = (\n    <Rate\n      allowClear={false}\n      value={taskRate}\n      defaultValue={ERate.zero}\n      count={4}\n      tooltips={[\n        '不紧急不重要',\n        '不紧急很重要',\n        '很紧急不重要',\n        '很紧急很重要',\n      ]}\n      style={{ fontSize: 14 }}\n      onChange={setTaskRate}\n    />\n  );\n  const handleAddTask = (value) => {\n    if (!inputTask) {\n      return;\n    }\n    columns[0].tasks.unshift({\n      id: shortid.generate(),\n      status: EStatus.todo,\n      content: inputTask,\n      rate: taskRate,\n      repeat: taskRepeat,\n    });\n    onChange({ ...todoData, columns });\n    setInputTask('');\n    setTaskRate(ERate.zero);\n  };\n\n  const sortedColumns = sortTaskByRate(columns);\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      {/* <div className={styles.title}>象限法则日程</div> */}\n      <Input.Search\n        value={inputTask}\n        className={styles.inputSearch}\n        placeholder=\"添加代办事项，记得打上紧急重要分哦～\"\n        enterButton={\n          <Button type=\"primary\" style={{ width: 80, background: '#6E6E6E' }}>\n            添加\n          </Button>\n        }\n        onChange={(e) => setInputTask(e.target.value)}\n        style={{\n          display: 'block',\n          width: '46%',\n          margin: '0 auto 12px',\n          marginTop: 30,\n        }}\n        size=\"middle\"\n        suffix={rate}\n        onSearch={handleAddTask}\n      />\n      <div className={styles.columns}>\n        {sortedColumns.map((column) => {\n          return <Column key={column.id} column={column} />;\n        })}\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default TodoList;\n",["162","163"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/EditAim.js",["164","165","166","167"],"import React, { useState, useEffect, ChangeEvent } from 'react';\nimport { Input, Button, Select, DatePicker, InputNumber } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport styles from './index.less';\nimport shortid from 'shortid';\nimport { EAimType } from './initial';\n\nconst EditAim = (props) => {\n  const { activeFile, onSubmit } = props || {};\n  const data =\n    typeof activeFile?.body === 'string' && activeFile?.body.length > 0\n      ? JSON.parse(activeFile.body)\n      : { branchs: [] };\n  const [isEditing, setIsEditing] = useState(false);\n  // const [title, setTitle] = useState(activeFile.title || '');\n  const [desc, setDesc] = useState(data.desc || '');\n  const [times, setTimes] = useState(data.times || 0);\n  const [startDate, setStartDate] = useState(\n    data.startDate || moment().format('YYYYMMDD')\n  );\n  const [branchs, setBranchs] = useState(\n    data.branchs || [{ id: shortid.generate(), name: '' }]\n  );\n  useEffect(() => {\n    setDesc(data.desc || '');\n    setTimes(data.times || 0);\n    setStartDate(data.startDate || moment().format('YYYYMMDD'));\n    setBranchs(data.branchs || []);\n  }, [activeFile.id, activeFile.isLoaded]);\n\n  const handleAddBranch = () => {\n    branchs?.push({\n      id: shortid.generate(),\n      name: '',\n      desc: '',\n      times: 0,\n      currentTimes: 0,\n    });\n    setBranchs([...branchs]);\n    if (branchs.length === 1) {\n      setTimes(0);\n    }\n  };\n\n  const handleSubmit = () => {\n    onSubmit(activeFile.id, {\n      ...data,\n      desc,\n      times,\n      startDate,\n      branchs,\n    });\n    setIsEditing(false);\n  };\n  const handleBranchChange = (key, e, index) => {\n    let newBranchs = [...branchs];\n    newBranchs[index][key] = e.target.value;\n    setBranchs(newBranchs);\n  };\n  const setBranchTimes = (num, index) => {\n    let newBranchs = [...branchs];\n    // console.log(\n    //   'xxxtimes',\n    //   times,\n    //   newBranchs[index],\n    //   newBranchs[index].times,\n    //   num,\n    //   times - newBranchs[index].times + num\n    // );\n    setTimes(times - (newBranchs[index].times || 0) + num);\n    newBranchs[index].times = num;\n    setBranchs(newBranchs);\n  };\n  // console.log(\n  //   'editAim',\n  //   activeFile,\n  //   data,\n  //   startDate,\n  //   data.startDate || moment().format('YYYYMMDD')\n  // );\n  // const isEditing = data.id === editId;\n  return (\n    <div className={styles.EditAim}>\n      <div className={styles.formItem}>\n        <span className={styles.label}>目标名称：</span>\n        {/* {isEditing ? (\n          <Input\n            onChange={(e) => setTitle(e.target.value)}\n            value={title}\n            style={{ width: '60%' }}\n            placeholder=\"请输入目标名称\"\n          />\n        ) : ( */}\n        <div className={styles.aimTitle}>\n          <span>{activeFile.title}</span>\n          <Button\n            disabled={isEditing}\n            type=\"text\"\n            onClick={() => setIsEditing(true)}\n          >\n            编辑\n          </Button>\n        </div>\n        {/* )} */}\n      </div>\n      {(isEditing || desc?.length > 0) && (\n        <div className={styles.formItem}>\n          <span className={styles.label}>描述：</span>\n          {isEditing ? (\n            <Input.TextArea\n              rows={2}\n              onChange={(e) => setDesc(e.target.value)}\n              value={desc}\n              style={{ width: '60%' }}\n              placeholder=\"请输入目标描述\"\n            />\n          ) : (\n            <div style={{ width: '60%', wordWrap: 'break-word' }}>{desc}</div>\n          )}\n        </div>\n      )}\n\n      {branchs?.map((branch, index) => {\n        if (!branch) return null;\n        if (!isEditing && !branch.name) return null;\n        return (\n          <div key={branch.id}>\n            <div className={styles.formItem}>\n              <span className={styles.label}>分支{index + 1}：</span>\n              {isEditing ? (\n                <div className={styles.branchTitle}>\n                  <Input\n                    value={branch.name}\n                    onChange={(e) => handleBranchChange('name', e, index)}\n                    placeholder=\"请输入分支名\"\n                  />\n                  <div className={styles.branchTimes}>\n                    <InputNumber\n                      placeholder=\"打卡次数\"\n                      style={{ flex: 1, margin: '0 6px' }}\n                      min={0}\n                      value={branch.times}\n                      onChange={(val) => setBranchTimes(Number(val), index)}\n                    />\n                    次打卡\n                  </div>\n                </div>\n              ) : (\n                <div className={styles.branchTitle}>\n                  {branch.name}\n                  <span>{branch.times}次打卡</span>\n                </div>\n              )}\n            </div>\n            {(isEditing || branch?.desc?.length > 0) && (\n              <div className={styles.formItem}>\n                <span className={styles.label}></span>\n                {isEditing ? (\n                  <Input.TextArea\n                    value={branch.desc}\n                    onChange={(e) => handleBranchChange('desc', e, index)}\n                    rows={2}\n                    style={{ width: '60%' }}\n                    placeholder=\"请输入分支描述\"\n                  />\n                ) : (\n                  <div style={{ width: '60%' }}>{branch.desc}</div>\n                )}\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {isEditing && (\n        <div className={styles.formItem}>\n          <span className={styles.label}></span>\n          <Button\n            type=\"dashed\"\n            style={{ width: '60%' }}\n            onClick={handleAddBranch}\n          >\n            <PlusOutlined /> 添加分支\n          </Button>\n        </div>\n      )}\n\n      <div className={styles.formItem}>\n        <span className={styles.label}>开始时间：</span>\n        <div className={styles.dateTimes} style={{ width: '60%' }}>\n          <div style={{ flex: 1 }}>\n            {isEditing ? (\n              <DatePicker\n                value={moment(startDate)}\n                onChange={(date) =>\n                  setStartDate(moment(date).format('YYYYMMDD'))\n                }\n                placeholder=\"开始时间\"\n                style={{ width: 280 }}\n              />\n            ) : (\n              <div>{startDate}</div>\n            )}\n          </div>\n          <div className={styles.times}>\n            <span className={styles.label}>总投入：</span>\n            {isEditing ? (\n              <InputNumber\n                disabled={branchs?.length > 0}\n                style={{ flex: 1, marginRight: 4 }}\n                min={0}\n                value={times}\n                onChange={(val) => setTimes(Number(val))}\n              />\n            ) : (\n              <span style={{ color: 'red', marginRight: 4 }}>{times}</span>\n            )}\n            次打卡\n          </div>\n        </div>\n      </div>\n      {isEditing && (\n        <div className={styles.formItem}>\n          <span className={styles.label}></span>\n          <div style={{ width: '60%', textAlign: 'left' }}>\n            <Button\n              type=\"primary\"\n              style={{ width: 180 }}\n              onClick={handleSubmit}\n            >\n              保存\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EditAim;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/todo/initial.js",["168","169"],"import shortid from 'shortid';\nimport moment from 'moment';\n\nexport const ERepeat = {\n  once: 0,\n  everyday: 1,\n  weekly: 2,\n};\n\nexport const ERate = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  three: 3,\n  four: 4,\n};\n\nexport const EStatus = {\n  todo: 0,\n  doing: 1,\n  done: 2,\n};\n\nexport const ESort = {\n  top: 1,\n  normal: 2,\n};\n\nexport const newTodo = (momentFn, id) => {\n  console.log('momentFn', momentFn, id);\n  const curTime = momentFn.valueOf();\n  return {\n    id,\n    title: momentFn.format('YYYYMMDD'),\n    createTime: curTime,\n    modifyTime: curTime,\n    sort: ESort.normal,\n    columns: [\n      {\n        id: 'column-todo',\n        name: '代办',\n        tasks: [],\n      },\n      {\n        id: 'column-inprogress',\n        name: '进行中',\n        tasks: [],\n      },\n      {\n        id: 'column-done',\n        name: '已完成',\n        tasks: [],\n      },\n    ],\n  };\n};\n\nexport const initTodo = (newTodo, newId) => {\n  return {\n    currentId: newId,\n    editId: '',\n    data: [newTodo],\n  };\n};\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Column.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Task.js",["170"],"import React from 'react';\nimport styles from './Task.less';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Rate } from 'antd';\nimport SmallRate from './SmallRate';\n\nconst Task = ({ task, index }) => {\n  return (\n    <Draggable\n      draggableId={task.id}\n      index={index}\n      // isDragDisabled={isDragDisabled}\n    >\n      {(provided) => {\n        //snapshot.isDragging\n        return (\n          <div\n            className={styles.Task}\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            // 注意不要覆盖 draggableProps.style\n          >\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n              <SmallRate count={4} value={task.rate || 0} />\n              <div className={styles.content}>{task.content}</div>\n            </div>\n            <div className={styles.tips}>{task.desc}</div>\n          </div>\n        );\n      }}\n    </Draggable>\n  );\n};\nexport default Task;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/clipboard.js",[],["171","172"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/todo/index2.js",["173","174","175","176","177","178","179","180"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/todo/index.js",["181","182","183","184","185","186","187"],"import React, { useState } from 'react';\nimport moment from 'moment';\nimport styles from './index.less';\nimport { IColumn, ITask, EStatus, ERate, ERepeat } from './initial';\nimport shortid from 'shortid';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport Column from '../components/Column';\nimport { Input, Rate, Dropdown, Button, Menu } from 'antd';\nimport { ITodo } from './initial';\n\nconst switchColumnTask = (todoData, source, destination) => {\n  console.log('******', source.index);\n  const { columns } = todoData;\n  let task;\n  let targetColumnIndex;\n  const newColumns = columns.map((column, index) => {\n    if (column.id === source.droppableId) {\n      task = column.tasks[source.index];\n      column.tasks.splice(source.index, 1);\n    }\n    if (column.id === destination.droppableId) {\n      targetColumnIndex = index;\n    }\n    return column;\n  });\n  if ((targetColumnIndex || targetColumnIndex === 0) && task) {\n    newColumns[targetColumnIndex].tasks.splice(destination.index, 0, task);\n  }\n  console.log('xxxnewColumns', newColumns);\n  return { ...todoData, columns: newColumns };\n};\n\nconst deleteColumnTask = (todoData, source) => ({\n  ...todoData,\n  columns: todoData?.columns?.map((column) => {\n    if (column.id === source.droppableId) {\n      column.tasks.splice(source.index, 1);\n    }\n    return {\n      ...column,\n    };\n  }),\n});\n\nconst sortTaskByRate = (columns) =>\n  columns.map((column) => {\n    column.tasks.sort((a, b) => b.rate - a.rate);\n    return column;\n  });\n\nconst defalutColumns = [\n  {\n    id: 'column-todo',\n    name: '代办',\n    tasks: [],\n  },\n  {\n    id: 'column-inprogress',\n    name: '进行中',\n    tasks: [],\n  },\n  {\n    id: 'column-done',\n    name: '已完成',\n    tasks: [],\n  },\n];\n\nconst TodoList = (props) => {\n  const { activeFile, onChange } = props;\n  const columns = (typeof activeFile?.body === 'string' &&\n    activeFile?.body?.length > 0 &&\n    JSON.parse(activeFile.body)) ||\n    activeFile?.body || [...defalutColumns];\n  const todoData = { ...activeFile, columns };\n  const [taskRate, setTaskRate] = useState(ERate.zero);\n  const [inputTask, setInputTask] = useState('');\n  const [inputTaskDesc, setInputTaskDesc] = useState('');\n  const [taskRepeat, setTaskRepeat] = useState(ERepeat.once);\n\n  const handleDragEnd = (result) => {\n    const { source, destination } = result;\n    if (!destination) {\n      const { id, columns } = deleteColumnTask({ ...todoData }, source);\n      onChange(id, columns);\n      return;\n    }\n    if (\n      source.droppableId === destination.droppableId &&\n      source.index === destination.index\n    ) {\n      return;\n    }\n    const { id, columns } = switchColumnTask(todoData, source, destination);\n    onChange(id, columns);\n  };\n  const rate = (\n    <Rate\n      allowClear={false}\n      value={taskRate}\n      defaultValue={ERate.zero}\n      count={4}\n      tooltips={[\n        '不紧急不重要',\n        '不紧急很重要',\n        '很紧急不重要',\n        '很紧急很重要',\n      ]}\n      style={{ fontSize: 14, color: 'orangered' }}\n      onChange={setTaskRate}\n    />\n  );\n  const handleAddTask = () => {\n    if (!inputTask) {\n      return;\n    }\n    const newTodo = {\n      id: shortid.generate(),\n      status: EStatus.todo,\n      content: inputTask,\n      desc: inputTaskDesc,\n      rate: taskRate,\n      repeat: taskRepeat,\n    };\n    const [todo, ...rest] = columns;\n    // onChange({\n    //   ...todoData,\n    //   columns: [{ ...todo, tasks: [newTodo, ...todo.tasks] }, ...rest],\n    // });\n    onChange(todoData.id, [\n      { ...todo, tasks: [newTodo, ...todo.tasks] },\n      ...rest,\n    ]);\n    setInputTask('');\n    setInputTaskDesc('');\n    setTaskRate(ERate.zero);\n  };\n  console.log('todo==', todoData, columns);\n  const sortedColumns = sortTaskByRate(columns);\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      {/* <div className={styles.title}>象限法则日程</div> */}\n      <div className={styles.Todo}>\n        <Input.Group compact style={{ width: '80%', margin: '10px auto 16px' }}>\n          <Input\n            size=\"middle\"\n            placeholder=\"添加代办事项标题\"\n            style={{\n              width: '50%',\n            }}\n            value={inputTask}\n            onPressEnter={handleAddTask}\n            onChange={(e) => setInputTask(e.target.value)}\n          />\n          <Input.Search\n            className={styles.inputSearch}\n            enterButton={\n              <Button\n                type=\"primary\"\n                style={{ width: 80, background: '#6E6E6E' }}\n              >\n                添加\n              </Button>\n            }\n            style={{\n              width: '50%',\n            }}\n            size=\"middle\"\n            suffix={rate}\n            value={inputTaskDesc}\n            onChange={(e) => setInputTaskDesc(e.target.value)}\n            onSearch={handleAddTask}\n          />\n        </Input.Group>\n        <div className={styles.columns}>\n          {sortedColumns.map((column) => {\n            return <Column key={column.id} column={column} />;\n          })}\n        </div>\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default TodoList;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/SmallRate.jsx",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/music/index.js",["188"],"import React from 'react';\nimport { Tabs, Input } from 'antd';\nimport styles from './index.less';\n\nconst { TabPane } = Tabs;\nvar location = ''; // new Object();\n// window.parent.location.href=\"http://www.baidu.com\"\n\nconst Music = () => {\n  const onSearch = (value) => {\n    console.log('value:', value);\n  };\n  return (\n    <div className={styles.Music}>\n      <Input.Search\n        placeholder=\"搜索歌名\"\n        onSearch={onSearch}\n        style={{ display: 'block', width: 360, margin: '0 auto 16px' }}\n      />\n      <Tabs type=\"card\">\n        <TabPane tab=\"QQ音乐\" key=\"1\">\n          <iframe\n            scrolling=\"false\"\n            frameBorder={0}\n            width=\"100%\"\n            height=\"100%\"\n            className={styles.iframe}\n            title=\"QQ音乐\"\n            src={'https://y.qq.com/?ADTAG=myqq#type=index'}\n          />\n        </TabPane>\n        <TabPane tab=\"网易云音乐\" key=\"2\">\n          <iframe\n            scrolling=\"false\"\n            frameBorder={0}\n            width=\"100%\"\n            // sandbox=\"\"\n            sandbox=\"allow-same-origin\"\n            className={styles.iframe}\n            title=\"网易云音乐\"\n            src={'https://music.163.com/'}\n          />\n        </TabPane>\n        <TabPane tab=\"酷狗音乐\" key=\"3\">\n          <iframe\n            scrolling=\"false\"\n            frameBorder={0}\n            width=\"100%\"\n            className={styles.iframe}\n            title=\"酷狗音乐\"\n            src={'https://www.kugou.com/'}\n          />\n        </TabPane>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default Music;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/music/Iframe.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/note/index.jsx",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/CKEditor/index.jsx",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/CKEditor/config.js",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":17,"column":3,"nodeType":"195","messageId":"196","endLine":17,"endColumn":17},{"ruleId":"193","severity":1,"message":"197","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":25},{"ruleId":"193","severity":1,"message":"198","line":3,"column":8,"nodeType":"195","messageId":"196","endLine":3,"endColumn":14},{"ruleId":"193","severity":1,"message":"199","line":6,"column":10,"nodeType":"195","messageId":"196","endLine":6,"endColumn":18},{"ruleId":"193","severity":1,"message":"200","line":6,"column":20,"nodeType":"195","messageId":"196","endLine":6,"endColumn":28},{"ruleId":"193","severity":1,"message":"201","line":6,"column":30,"nodeType":"195","messageId":"196","endLine":6,"endColumn":37},{"ruleId":"193","severity":1,"message":"202","line":7,"column":10,"nodeType":"195","messageId":"196","endLine":7,"endColumn":17},{"ruleId":"193","severity":1,"message":"203","line":9,"column":8,"nodeType":"195","messageId":"196","endLine":9,"endColumn":19},{"ruleId":"204","severity":1,"message":"205","line":29,"column":6,"nodeType":"206","endLine":29,"endColumn":8,"suggestions":"207"},{"ruleId":"204","severity":1,"message":"208","line":22,"column":6,"nodeType":"206","endLine":22,"endColumn":8,"suggestions":"209"},{"ruleId":"193","severity":1,"message":"210","line":14,"column":11,"nodeType":"195","messageId":"196","endLine":14,"endColumn":16},{"ruleId":"193","severity":1,"message":"198","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":14},{"ruleId":"193","severity":1,"message":"211","line":4,"column":10,"nodeType":"195","messageId":"196","endLine":4,"endColumn":17},{"ruleId":"193","severity":1,"message":"212","line":4,"column":19,"nodeType":"195","messageId":"196","endLine":4,"endColumn":24},{"ruleId":"193","severity":1,"message":"213","line":8,"column":23,"nodeType":"195","messageId":"196","endLine":8,"endColumn":31},{"ruleId":"193","severity":1,"message":"214","line":8,"column":41,"nodeType":"195","messageId":"196","endLine":8,"endColumn":45},{"ruleId":"193","severity":1,"message":"215","line":9,"column":10,"nodeType":"195","messageId":"196","endLine":9,"endColumn":15},{"ruleId":"193","severity":1,"message":"216","line":72,"column":22,"nodeType":"195","messageId":"196","endLine":72,"endColumn":35},{"ruleId":"189","replacedBy":"217"},{"ruleId":"191","replacedBy":"218"},{"ruleId":"193","severity":1,"message":"219","line":1,"column":38,"nodeType":"195","messageId":"196","endLine":1,"endColumn":49},{"ruleId":"193","severity":1,"message":"220","line":2,"column":25,"nodeType":"195","messageId":"196","endLine":2,"endColumn":31},{"ruleId":"193","severity":1,"message":"199","line":7,"column":10,"nodeType":"195","messageId":"196","endLine":7,"endColumn":18},{"ruleId":"204","severity":1,"message":"221","line":30,"column":6,"nodeType":"206","endLine":30,"endColumn":42,"suggestions":"222"},{"ruleId":"193","severity":1,"message":"223","line":1,"column":8,"nodeType":"195","messageId":"196","endLine":1,"endColumn":15},{"ruleId":"193","severity":1,"message":"198","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":14},{"ruleId":"193","severity":1,"message":"224","line":4,"column":10,"nodeType":"195","messageId":"196","endLine":4,"endColumn":14},{"ruleId":"189","replacedBy":"225"},{"ruleId":"191","replacedBy":"226"},{"ruleId":"193","severity":1,"message":"197","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":25},{"ruleId":"193","severity":1,"message":"198","line":3,"column":8,"nodeType":"195","messageId":"196","endLine":3,"endColumn":14},{"ruleId":"193","severity":1,"message":"223","line":5,"column":8,"nodeType":"195","messageId":"196","endLine":5,"endColumn":15},{"ruleId":"193","severity":1,"message":"215","line":6,"column":10,"nodeType":"195","messageId":"196","endLine":6,"endColumn":15},{"ruleId":"193","severity":1,"message":"227","line":6,"column":17,"nodeType":"195","messageId":"196","endLine":6,"endColumn":24},{"ruleId":"193","severity":1,"message":"228","line":6,"column":26,"nodeType":"195","messageId":"196","endLine":6,"endColumn":31},{"ruleId":"193","severity":1,"message":"229","line":6,"column":33,"nodeType":"195","messageId":"196","endLine":6,"endColumn":41},{"ruleId":"193","severity":1,"message":"202","line":7,"column":10,"nodeType":"195","messageId":"196","endLine":7,"endColumn":17},{"ruleId":"193","severity":1,"message":"198","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":14},{"ruleId":"193","severity":1,"message":"211","line":4,"column":10,"nodeType":"195","messageId":"196","endLine":4,"endColumn":17},{"ruleId":"193","severity":1,"message":"212","line":4,"column":19,"nodeType":"195","messageId":"196","endLine":4,"endColumn":24},{"ruleId":"193","severity":1,"message":"213","line":8,"column":23,"nodeType":"195","messageId":"196","endLine":8,"endColumn":31},{"ruleId":"193","severity":1,"message":"214","line":8,"column":41,"nodeType":"195","messageId":"196","endLine":8,"endColumn":45},{"ruleId":"193","severity":1,"message":"215","line":9,"column":10,"nodeType":"195","messageId":"196","endLine":9,"endColumn":15},{"ruleId":"193","severity":1,"message":"216","line":79,"column":22,"nodeType":"195","messageId":"196","endLine":79,"endColumn":35},{"ruleId":"193","severity":1,"message":"230","line":6,"column":5,"nodeType":"195","messageId":"196","endLine":6,"endColumn":13},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"no-unused-vars","'findItemsByIds' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'moment' is defined but never used.","'EAimType' is defined but never used.","'EAimSort' is defined but never used.","'initAim' is defined but never used.","'message' is defined but never used.","'EmptyStatus' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'menus' and 'targetClass'. Either include them or remove the dependency array.","ArrayExpression",["233"],"React Hook useEffect has a missing dependency: 'targetKeyCode'. Either include it or remove the dependency array.",["234"],"'title' is assigned a value but never used.","'IColumn' is defined but never used.","'ITask' is defined but never used.","'Dropdown' is defined but never used.","'Menu' is defined but never used.","'ITodo' is defined but never used.","'setTaskRepeat' is assigned a value but never used.",["231"],["232"],"'ChangeEvent' is defined but never used.","'Select' is defined but never used.","React Hook useEffect has missing dependencies: 'data.branchs', 'data.desc', 'data.startDate', and 'data.times'. Either include them or remove the dependency array.",["235"],"'shortid' is defined but never used.","'Rate' is defined but never used.",["231"],["232"],"'newTodo' is defined but never used.","'ESort' is defined but never used.","'initTodo' is defined but never used.","'location' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},"Update the dependencies array to be: [menus, targetClass]",{"range":"242","text":"243"},"Update the dependencies array to be: [targetKeyCode]",{"range":"244","text":"245"},"Update the dependencies array to be: [activeFile.id, activeFile.isLoaded, data.branchs, data.desc, data.startDate, data.times]",{"range":"246","text":"247"},[1031,1033],"[menus, targetClass]",[686,688],"[targetKeyCode]",[1165,1201],"[activeFile.id, activeFile.isLoaded, data.branchs, data.desc, data.startDate, data.times]"]