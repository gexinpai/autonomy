[{"/Users/jacklee/Project/OpenSource/autonomy/src/index.js":"1","/Users/jacklee/Project/OpenSource/autonomy/src/reportWebVitals.js":"2","/Users/jacklee/Project/OpenSource/autonomy/src/App.js":"3","/Users/jacklee/Project/OpenSource/autonomy/src/utils/fileHelper.js":"4","/Users/jacklee/Project/OpenSource/autonomy/src/music/Iframe.js":"5","/Users/jacklee/Project/OpenSource/autonomy/src/utils/helper.js":"6","/Users/jacklee/Project/OpenSource/autonomy/src/book/index.jsx":"7","/Users/jacklee/Project/OpenSource/autonomy/src/utils/pdf.js":"8","/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/constant.js":"9","/Users/jacklee/Project/OpenSource/autonomy/src/setting/index.js":"10","/Users/jacklee/Project/OpenSource/autonomy/src/crash/index.js":"11","/Users/jacklee/Project/OpenSource/autonomy/src/utils/treeHelper.js":"12","/Users/jacklee/Project/OpenSource/autonomy/src/components/FileSearch.js":"13","/Users/jacklee/Project/OpenSource/autonomy/src/components/FileList.js":"14","/Users/jacklee/Project/OpenSource/autonomy/src/hooks/useIpcRenderer.js":"15","/Users/jacklee/Project/OpenSource/autonomy/src/book/utils.js":"16","/Users/jacklee/Project/OpenSource/autonomy/src/music/index.js":"17","/Users/jacklee/Project/OpenSource/autonomy/src/aim/index.js":"18","/Users/jacklee/Project/OpenSource/autonomy/src/todo/index.js":"19","/Users/jacklee/Project/OpenSource/autonomy/src/utils/antdIcons.js":"20","/Users/jacklee/Project/OpenSource/autonomy/src/hooks/useKeyPressed.js":"21","/Users/jacklee/Project/OpenSource/autonomy/src/todo/components/Report/index.js":"22","/Users/jacklee/Project/OpenSource/autonomy/src/hooks/useContextMenu.js":"23","/Users/jacklee/Project/OpenSource/autonomy/src/note/index.jsx":"24","/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/index.js":"25","/Users/jacklee/Project/OpenSource/autonomy/src/aim/initial.js":"26","/Users/jacklee/Project/OpenSource/autonomy/src/todo/initial.js":"27","/Users/jacklee/Project/OpenSource/autonomy/src/aim/EditAim.js":"28","/Users/jacklee/Project/OpenSource/autonomy/src/components/Column.js":"29","/Users/jacklee/Project/OpenSource/autonomy/src/aim/AimList.js":"30","/Users/jacklee/Project/OpenSource/autonomy/src/todo/components/AddDrawer/index.js":"31","/Users/jacklee/Project/OpenSource/autonomy/src/components/Task.js":"32","/Users/jacklee/Project/OpenSource/autonomy/src/components/SmallRate.jsx":"33","/Users/jacklee/Project/OpenSource/autonomy/src/components/DynamicTags/index.js":"34","/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/components/InsertImage.js":"35","/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/components/Button.js":"36","/Users/jacklee/Project/OpenSource/autonomy/src/components/Icon.js":"37","/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/components/Toolbar.js":"38","/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/formatter/utils.js":"39","/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/formatter/images.js":"40","/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/formatter/shortcuts.js":"41","/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/components/ColorPicker/index.js":"42","/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/components/Menu.js":"43","/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/formatter/index.jsx":"44"},{"size":1333,"mtime":1720963540281,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":1607156125945,"results":"47","hashOfConfig":"46"},{"size":19795,"mtime":1721548275893,"results":"48","hashOfConfig":"46"},{"size":2365,"mtime":1706628081269,"results":"49","hashOfConfig":"46"},{"size":266,"mtime":1641665214498,"results":"50","hashOfConfig":"46"},{"size":1268,"mtime":1704474901083,"results":"51","hashOfConfig":"46"},{"size":2480,"mtime":1706953405965,"results":"52","hashOfConfig":"46"},{"size":9876,"mtime":1707279480497,"results":"53","hashOfConfig":"46"},{"size":635,"mtime":1704473618817,"results":"54","hashOfConfig":"46"},{"size":6211,"mtime":1704476452464,"results":"55","hashOfConfig":"46"},{"size":195,"mtime":1641127466648,"results":"56","hashOfConfig":"46"},{"size":7651,"mtime":1721547994282,"results":"57","hashOfConfig":"46"},{"size":2195,"mtime":1701872494307,"results":"58","hashOfConfig":"46"},{"size":7729,"mtime":1721399139127,"results":"59","hashOfConfig":"46"},{"size":453,"mtime":1618638838820,"results":"60","hashOfConfig":"46"},{"size":5332,"mtime":1707310518732,"results":"61","hashOfConfig":"46"},{"size":816,"mtime":1717035513036,"results":"62","hashOfConfig":"46"},{"size":2849,"mtime":1674750896663,"results":"63","hashOfConfig":"46"},{"size":10147,"mtime":1720956248312,"results":"64","hashOfConfig":"46"},{"size":1098,"mtime":1676129943407,"results":"65","hashOfConfig":"46"},{"size":746,"mtime":1677166973324,"results":"66","hashOfConfig":"46"},{"size":4550,"mtime":1720963882197,"results":"67","hashOfConfig":"46"},{"size":1133,"mtime":1704085175646,"results":"68","hashOfConfig":"46"},{"size":917,"mtime":1721548301989,"results":"69","hashOfConfig":"46"},{"size":7038,"mtime":1706193673448,"results":"70","hashOfConfig":"46"},{"size":773,"mtime":1610185767507,"results":"71","hashOfConfig":"46"},{"size":1009,"mtime":1674750896664,"results":"72","hashOfConfig":"46"},{"size":7485,"mtime":1674751013479,"results":"73","hashOfConfig":"46"},{"size":1581,"mtime":1701496223879,"results":"74","hashOfConfig":"46"},{"size":3082,"mtime":1674750896662,"results":"75","hashOfConfig":"46"},{"size":7317,"mtime":1720956577116,"results":"76","hashOfConfig":"46"},{"size":3796,"mtime":1721391531954,"results":"77","hashOfConfig":"46"},{"size":425,"mtime":1701534240015,"results":"78","hashOfConfig":"46"},{"size":3428,"mtime":1701502050584,"results":"79","hashOfConfig":"46"},{"size":1123,"mtime":1704289110592,"results":"80","hashOfConfig":"46"},{"size":1374,"mtime":1704286596357,"results":"81","hashOfConfig":"46"},{"size":232,"mtime":1704471836358,"results":"82","hashOfConfig":"46"},{"size":497,"mtime":1704201680657,"results":"83","hashOfConfig":"46"},{"size":1709,"mtime":1704285958266,"results":"84","hashOfConfig":"46"},{"size":2751,"mtime":1707309094704,"results":"85","hashOfConfig":"46"},{"size":2736,"mtime":1704120139473,"results":"86","hashOfConfig":"46"},{"size":1282,"mtime":1704290400125,"results":"87","hashOfConfig":"46"},{"size":456,"mtime":1704107212686,"results":"88","hashOfConfig":"46"},{"size":1868,"mtime":1706361907073,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"uxxpl5",{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"186","usedDeprecatedRules":"92"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"/Users/jacklee/Project/OpenSource/autonomy/src/index.js",[],["191","192"],"/Users/jacklee/Project/OpenSource/autonomy/src/reportWebVitals.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/App.js",["193","194","195","196","197","198","199"],"/Users/jacklee/Project/OpenSource/autonomy/src/utils/fileHelper.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/music/Iframe.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/utils/helper.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/book/index.jsx",["200"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport { Pagination } from 'antd';\nimport styles from './index.less';\n// import { getSaveLocation } from '../utils/helper';\n// import Editor from '../components/CKEditor'; \nimport Editor from '../components/SlateEditor'; \nimport fileHelper from '../utils/fileHelper';\nimport { combinePdfTextToRichText } from './utils';\n\n\nconst Book = ({ activeFile, onChange }) => {\n  let { id, body, path, pdf, info, isLoaded = false } = activeFile;\n  console.log('bodybody', info, isLoaded)\n  const bookBody = JSON.parse(body||'{}');\n  const [current, setCurrent] = useState(info?.current||1);\n  // const [images, setImages] = useState([]);\n  // const [activeId, setActiveId]=useState(id);\n  // const [data, setData] = useState('');\n  useEffect(()=>{\n    setCurrent(info?.current||1)\n  },[isLoaded])\n  const handleContentChange = (data) => {\n    if (data !== body) {\n      onChange(id, {...bookBody, [current]: data});\n    }\n  };\n  const onPageChange = (current) => {\n    console.log('idid:Page: ', current);\n    setCurrent(current)\n    if(isLoaded){\n      onChange(id, bookBody, {info:{...info, current}})\n    }\n  };\n  useEffect(() => {\n      async function initPdf(){\n        console.log('readPdfinit', current, bookBody)\n        if(!bookBody?.[current]){\n          const {data, info, images} = await fileHelper.readPdfPage(pdf, current);\n          // setImages(images)\n          console.log('page-data==>', data, info, images)\n          const {result} = combinePdfTextToRichText(data, info, images);\n          const newBody = {\n              ...bookBody,\n              [current]: result\n          };\n          onChange(id, newBody, {info:{...info, current}})\n        }\n      }\n      isLoaded&&pdf&&initPdf();\n  }, [id, current, isLoaded]);\n\n  console.log('idid', id, activeFile, current, bookBody?.[current])\n  return (\n    <div className={styles.Book}>\n      {\n        bookBody?.[current]&& //Object.keys(bookBody||{})?.length>0&&\n        <Editor id={id} page={current} value={bookBody?.[current]} onChange={handleContentChange} isLoaded={isLoaded}/>\n      }\n      {\n        info?.size&&\n        <Pagination\n         locale={'zhCN'} \n         size='small' \n         showQuickJumper \n         showSizeChanger={false} \n         current={current} \n         total={info?.size} \n         pageSize={1}\n         onChange={onPageChange}\n        />\n      }\n    </div>\n  );\n};\n\nexport default Book;\n","/Users/jacklee/Project/OpenSource/autonomy/src/utils/pdf.js",["201"],"import fileHelper from './fileHelper';\nimport { getSaveLocation } from './helper';\n\nconst pdfjsLib = require('pdfjs-dist');\n\nconst savedLocation = getSaveLocation();\n\nexport const getPdfPageText = async (pdf, pageNo) => {\n  const page = await pdf.getPage(pageNo);\n  const tokenizedText = await page.getTextContent();\n  const pageText = tokenizedText.items.map((token) => token.str).join('');\n  return pageText;\n};\n\nexport const getPdfPageTextWithStatus = async (page, operatorList) => {\n  // const page = await pdf.getPage(pageNo);\n  const tokenizedText = await page.getTextContent();\n  // const operatorList = await page.getOperatorList();\n\n  console.log('pdfjs-page-content', tokenizedText);\n  return tokenizedText.items.map((token) => ({\n    item: token,\n    fontFace: page?.commonObjs?.get(token.fontName),\n    // status: getTextStatus(token, operatorList, pdfjsLib.OPS),\n  }));\n};\n\nexport const getPdfPageImages = async (page, operatorList) => {\n  // page.getAnnotations().then(function (items) {\n  //   console.log('getAnnotations', items);\n  // });\n  // const resources = page.commonObjs.get('Resources');\n  console.log('bmp: ', page, page.commonObjs);\n  // 提取图片\n  return operatorList.fnArray\n    .reduce((acc, curr, i) => {\n      if (\n        [\n          pdfjsLib.OPS.paintImageXObject,\n          pdfjsLib.OPS.paintJpegXObject,\n        ].includes(curr)\n      ) {\n        acc.push(operatorList.argsArray[i][0]);\n        console.log(\n          'xxxx=>>>',\n          i,\n          acc,\n          curr,\n          operatorList,\n          operatorList.argsArray,\n          operatorList.argsArray[i]\n        );\n      }\n      return acc;\n    }, [])\n    .map((item) => {\n      // const [x, y] = resources.get(item).get('BBox');\n      const image = page.objs.get(item);\n      console.log('getImageStatus===>', item, image);\n      if (image.currentSrc) {\n        return {\n          src: image.currentSrc,\n          naturalWidth: image.naturalWidth,\n          naturalHeight: image.naturalHeight,\n          // x,\n          // y,\n        };\n      }\n      if (image.data instanceof Uint8ClampedArray) {\n        const canvas = document.createElement('canvas'); // ;new OffscreenCanvas(image.width, image.height);\n        canvas.width = image.width;\n        canvas.height = image.height;\n        const ctx = canvas.getContext('2d');\n\n        // now you need a new clamped array because the original one, may not contain rgba data, and when you insert you want to do so in rgba form, I think that a simple check of the size of the clamped array should work, if it's 3 times the size aka width*height*3 then it's rgb and shall be converted, if it's 4 times, then it's rgba and can be used as it is; in my case it had to be converted, and I think it will be the most common case\n        const data = new Uint8ClampedArray(image.width * image.height * 4);\n        let k = 0;\n        let i = 0;\n        while (i < image.data.length) {\n          data[k] = image.data[i]; // r\n          data[k + 1] = image.data[i + 1]; // g\n          data[k + 2] = image.data[i + 2]; // b\n          data[k + 3] = 255; // a\n\n          i += 3;\n          k += 4;\n        }\n\n        // now here I create the image data context\n        const imgData = ctx.createImageData(image.width, image.height);\n        imgData.data.set(data);\n        ctx.putImageData(imgData, 0, 0);\n        // get myself a buffer\n        // const buff = canvas.toBuffer('image/png');\n        const filePath = savedLocation + '/image/33' + item + '.png';\n        // and I wrote the file, worked like charm, but this buffer encodes for a png image, which can be rather large, with an image conversion utility like sharp.js you may get better results by compressing the thing.\n\n        const src = canvas.toDataURL('image/png');\n        const base64 = src\n          .replace(/^data:image\\/\\w+;base64,/, '')\n          .replace(/s/g, '+');\n        const buff = Buffer.from(base64, 'base64');\n\n        fileHelper.writeFile(filePath, buff);\n        console.log('ddddd', base64 === buff.toString('base64'), {\n          src, //(await canvas.convertToBlob()) || filePath,\n          base64,\n          naturalWidth: image.width,\n          naturalHeight: image.height,\n        });\n        return {\n          src,\n          naturalWidth: image.width,\n          naturalHeight: image.height,\n        };\n      }\n      // const bmp = image.bitmap;\n      // console.log('bmp: ', bmp, image.src);\n      // // OffscreenCanvas\n      // const resizeScale = 1 / 4; // 这个可以控制转换后的图片大小\n      // const width = bmp.width * resizeScale;\n      // const height = bmp.height * resizeScale;\n      // const canvas = new OffscreenCanvas(width, height);\n      // // 获取 canvas bitmaprenderer 上下文\n      // const ctx = canvas.getContext('bitmaprenderer');\n      // // 把 ImageBitmap 渲染到 OffscreenCanvas\n      // ctx.transferFromImageBitmap(bmp);\n      // // 把 canvas 画布转化为 Blob 对象\n      // // https://developer.mozilla.org/en-US/docs/Web/API/OffscreenCanvas/convertToBlob\n      // // const blob = await canvas.convertToBlob();\n      // // console.log('blob: ', blob); // blob\n      // // 最后使用 Blob 作为 URL.createObjectURL 的参数，渲染出 img 图片\n      // // 如果不需要渲染，则可以讲 Blob 数据上传到云存储\n      // const buffer = canvas.toBuffer('image/png');\n      // // fs.writeFileSync('./test.png', buffer);\n      // fileHelper.writeFile(savedLocation + 'image/test.png', buffer);\n      // page.objs.get(item, (image) => {\n      //   console.log('bmp:image: ', item, image);\n      //   // lastImage = image;\n      //   (async function () {\n\n      //   })();\n      // });\n    });\n};\n\nexport function getTextStatus(item, operatorList, OPS) {\n  // 记录状态的堆栈\n  const stack = [];\n  // 当前状态记录\n  let currentStatus = {};\n\n  // 按顺序分析页面指令\n  for (let i = 0; i < operatorList.fnArray.length; i++) {\n    const fn = operatorList.fnArray[i];\n    const args = operatorList.argsArray[i];\n    switch (fn) {\n      //保存\n      case OPS.save:\n        stack.push(currentStatus);\n        currentStatus = { ...currentStatus };\n        break;\n      //还原\n      case OPS.restore:\n        currentStatus = stack.pop() ?? {};\n        break;\n      //设置文本填充颜色\n      case OPS.setFillRGBColor:\n        currentStatus.currentColor = [args[0], args[1], args[2]];\n        break;\n      //设置文本区域\n      case OPS.setTextMatrix:\n        currentStatus.currentMatrix = [args[4], args[5]];\n        currentStatus.currentXY = [args[4], args[5]];\n        break;\n      //设置行距\n      case OPS.setLeading:\n        currentStatus.leading = args[0];\n        break;\n      //设置字体类型和大小\n      case OPS.setFont:\n        currentStatus.font = [args[0], args[1]];\n        break;\n      //计算换行, 换行时当前坐标需要跳到下一行的开头\n      case OPS.nextLine:\n      case OPS.nextLineShowText:\n      case OPS.nextLineSetSpacingShowText:\n        if (currentStatus.leading && currentStatus.currentXY) {\n          currentStatus.currentXY = [\n            currentStatus.currentXY[0],\n            currentStatus.currentXY[1] - currentStatus.leading,\n          ];\n        }\n        break;\n      //移动文本坐标\n      case OPS.moveText:\n        if (currentStatus.currentXY) {\n          currentStatus.currentXY = [\n            currentStatus.currentXY[0] + args[0],\n            currentStatus.currentXY[1] + args[1],\n          ];\n        }\n        break;\n      //显示文本\n      case OPS.showText:\n        if (currentStatus.currentXY) {\n          let x = currentStatus.currentXY[0];\n          let y = currentStatus.currentXY[1];\n          // 判断文本是否匹配定位\n          const isMatch = () =>\n            Math.abs(x - item.transform[4]) < item.height / 5 &&\n            Math.abs(y - item.transform[5]) < item.height / 5;\n          if (isMatch()) {\n            return currentStatus.currentColor;\n          }\n          if (args[0]) {\n            // 计算打印的每个字的实际坐标, 然后和item的坐标进行配对\n            for (let charInfo of args[0]) {\n              if (typeof charInfo?.width == 'number' && currentStatus.font) {\n                if (isMatch()) {\n                  return currentStatus.currentColor;\n                }\n                x += (charInfo?.width / 1000) * currentStatus.font[1];\n              } else if (typeof charInfo == 'number' && currentStatus.font) {\n                if (isMatch()) {\n                  return currentStatus.currentColor;\n                }\n                x -= (charInfo / 1000) * currentStatus.font[1];\n              }\n            }\n          }\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  return currentStatus;\n}\n\nexport function getImageStatus(item, operatorList, OPS) {\n  // 记录状态的堆栈\n  const stack = [];\n  // 当前状态记录\n  let currentStatus = {};\n\n  // 按顺序分析页面指令\n  for (let i = 0; i < operatorList.fnArray.length; i++) {\n    const fn = operatorList.fnArray[i];\n    const args = operatorList.argsArray[i];\n    switch (fn) {\n      //保存\n      case OPS.save:\n        stack.push(currentStatus);\n        currentStatus = { ...currentStatus };\n        break;\n      //还原\n      case OPS.restore:\n        currentStatus = stack.pop() ?? {};\n        break;\n      //设置文本区域\n      case OPS.setTextMatrix:\n        currentStatus.currentMatrix = [args[4], args[5]];\n        currentStatus.currentXY = [args[4], args[5]];\n        currentStatus.args = args;\n        currentStatus.index = i;\n        break;\n      case OPS.paintImageXObject:\n      case OPS.paintJpegXObject:\n        if (args[0] === item) {\n          console.log('getImageStatus===>', currentStatus, i);\n          return currentStatus;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  return {};\n}\n","/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/constant.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/setting/index.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/crash/index.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/utils/treeHelper.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/components/FileSearch.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/components/FileList.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/hooks/useIpcRenderer.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/book/utils.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/music/index.js",["202","203"],"import React, { useState } from 'react';\nimport { Tabs, Input } from 'antd';\nimport styles from './index.less';\n\nconst { TabPane } = Tabs;\nvar location = ''; // new Object();\n// window.parent.location.href=\"http://www.baidu.com\"\n\nconst Music = () => {\n  const {musicList} = useState({\n    musicList:[1,2,3]\n  })\n  const onSearch = (value) => {\n    // console.log('value:', value);\n  };\n\n  const handleItemClick=()=>{\n    \n  }\n  return (\n    <div className={styles.Music}>\n      <Input.Search\n        placeholder=\"搜索歌名\"\n        onSearch={onSearch}\n        style={{ display: 'block', width: 360, margin: '0 auto 16px' }}\n      />\n      {\n        musicList.map(item=>{\n          return <p onClick={handleItemClick}>\n            {item}\n          </p>\n        })\n      }\n    </div>\n  );\n};\n\nexport default Music;\n","/Users/jacklee/Project/OpenSource/autonomy/src/aim/index.js",["204","205","206","207","208","209","210"],"import React, { useState } from 'react';\n// import { useIdb } from 'react-use-idb';\nimport moment from 'moment';\nimport styles from './index.less';\nimport AimList from './AimList';\nimport { EAimType, EAimSort, initAim } from './initial';\nimport { message } from 'antd';\nimport EditAim from './EditAim';\nimport EmptyStatus from '../../public/empty.png';\n\nconst Aim = ({ activeFile, onChange }) => {\n  // const initAims = initAim(moment());\n  // const [allAims, setAllAims] = useState(initAims);\n  // const { currentId = allAims.data[0].id, editId, data = [] } = allAims;\n  // const [currentAim] = data.filter((item) => item.id === currentId);\n  // // console.log('currentAim', initAims, currentAim);\n  // const changeCurrentAim = (aim) => {\n  //   const newDatas = data.filter((item) => item.id !== currentId);\n  //   newDatas.push({ ...aim, modifyTime: moment().valueOf() });\n  //   setAllAims({ ...allAims, editId: '', data: newDatas });\n  // };\n\n  // const addBranchTimes = (index) => {\n  //   const { data } = allAims;\n  //   const newData = data.map((item) => {\n  //     if (item.id === currentId) {\n  //       item.currentTimes += 1;\n  //       if (index >= 0) {\n  //         item.branchs[index].currentTimes += 1;\n  //       }\n  //     }\n  //     return item;\n  //   });\n\n  //   setAllAims({\n  //     ...allAims,\n  //     data: newData,\n  //   });\n  // };\n  // const onEditChange = (type, id, title) => {\n  //   if (type === EAimType.start) {\n  //     setAllAims({ ...allAims, editId: id });\n  //     return;\n  //   }\n  //   const { data } = allAims;\n  //   if (type === EAimType.delete) {\n  //     const newData = data.filter((item) => item.id !== id);\n  //     setAllAims({ ...allAims, data: newData });\n  //     return;\n  //   }\n  //   if (type === EAimType.top) {\n  //     const newData = data.map((item) => {\n  //       if (item.id === id) {\n  //         item.sort =\n  //           item.sort === EAimSort.top ? EAimSort.normal : EAimSort.top;\n  //         item.modifyTime = moment().valueOf();\n  //       }\n  //       return item;\n  //     });\n  //     setAllAims({ ...allAims, editId: '', data: newData });\n  //     return;\n  //   }\n  //   if (type === EAimType.rename) {\n  //     if (!title) {\n  //       message.error('标题不能为空');\n  //       return;\n  //     }\n  //     const newData = data.map((item) => {\n  //       if (item.id === id) {\n  //         item.title = title;\n  //         item.modifyTime = moment().valueOf();\n  //       }\n  //       return item;\n  //     });\n  //     setAllAims({ ...allAims, editId: '', data: newData });\n  //   }\n  // };\n\n  return (\n    <div className={styles.Aim}>\n      <div className={styles.content}>\n        <EditAim activeFile={activeFile} onSubmit={onChange} />\n        <AimList activeFile={activeFile} addBranchTimes={onChange} />\n      </div>\n    </div>\n  );\n};\nexport default Aim;\n","/Users/jacklee/Project/OpenSource/autonomy/src/todo/index.js",["211","212","213","214","215","216","217","218","219","220","221","222"],"import React, { useState, useCallback } from 'react';\nimport moment from 'moment';\nimport styles from './index.less';\nimport { IColumn, ITask, EStatus, ERate, ERepeat } from './initial';\nimport shortid from 'shortid';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport Column from '../components/Column';\nimport { Input, Rate, Form, Button, Menu } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { ITodo } from './initial';\nimport AddModal from './components/AddDrawer';\nimport useContextMenu from '../hooks/useContextMenu';\nimport { PlusCircleOutlined } from '@ant-design/icons';\n\nconst emptyString = ['undefined', 'null', ''];\n\nconst switchColumnTask = (todoData, source, destination) => {\n  console.log('******', source, destination);\n  const { columns } = todoData;\n  let task;\n  let targetColumnIndex;\n  const newColumns = columns.map((column, index) => {\n    if (column.id === source.droppableId) {\n      task = column.tasks[source.index];\n      column.tasks.splice(source.index, 1);\n    }\n    if (column.id === destination.droppableId) {\n      targetColumnIndex = index;\n    }\n    return column;\n  });\n  if ((targetColumnIndex || targetColumnIndex === 0) && task) {\n    if(destination.droppableId === 'column-inprogress'){\n      task.inprogressTime = Date.now();\n    }\n    if(destination.droppableId === 'column-done'){\n      task.finishTime = Date.now();\n    }\n    newColumns[targetColumnIndex].tasks.splice(destination.index, 0, task);\n  }\n  // console.log('xxxnewColumns', newColumns);\n  return { ...todoData, columns: newColumns };\n};\n\nconst deleteColumnTask = (todoData, source) => ({\n  ...todoData,\n  columns: todoData?.columns?.map((column) => {\n    if (column.id === source.droppableId) {\n      column.tasks.splice(source.index, 1);\n    }\n    return {\n      ...column,\n    };\n  }),\n});\nconst getTaskText = (task = {}) => {\n  return [\n    task.content,\n    task.desc,\n    task.items.map((item) => item.title).join('-'),\n    task.tags.join('-'),\n  ].join('-');\n};\n\nconst sortTaskByRate = (columns, searchFilter) =>\n  columns.map((column) => {\n    return {\n      ...column,\n      tasks: column.tasks\n        .filter((task) =>\n          getTaskText(task).includes(searchFilter[column.id] || '')\n        )\n        .sort((a, b) => b.rate - a.rate),\n    };\n  });\n\nconst defalutColumns = [\n  {\n    id: 'column-todo',\n    name: '代办',\n    tasks: [],\n  },\n  {\n    id: 'column-inprogress',\n    name: '进行中',\n    tasks: [],\n  },\n  {\n    id: 'column-done',\n    name: '已完成',\n    tasks: [],\n  },\n];\n\nconst TodoList = React.memo((props) => {\n  const { activeFile, onChange } = props;\n  const columns =\n    activeFile?.body?.length > 0 && !emptyString.includes(activeFile.body)\n      ? typeof activeFile?.body === 'string'\n        ? JSON.parse(activeFile.body)\n        : activeFile?.body\n      : [...defalutColumns];\n  const todoData = { ...activeFile, columns };\n  // const [taskRate, setTaskRate] = useState(ERate.zero);\n  // const [inputTask, setInputTask] = useState('');\n  // const [inputTaskDesc, setInputTaskDesc] = useState('');\n  const [taskRepeat, setTaskRepeat] = useState(ERepeat.once);\n  const [open, setOpen] = useState(false);\n  const [form] = Form.useForm();\n  const [modalColumnId, setModalColumnId] = useState();\n  const [searchFilter, setSearchFilter] = useState({});\n  const [sortType, setSortType] = useState('normal');\n\n  console.log('sortedColumns111', columns);\n  const clickItem = useContextMenu(\n    [\n      {\n        label: '编辑',\n        click: () => {\n          const { current } = clickItem;\n          if (current !== null) {\n            const task = JSON.parse(current.dataset.task);\n            console.log('task==', task);\n            setOpen(true);\n            setModalColumnId(current.dataset.columnid);\n            form.setFieldsValue({\n              id: task.id,\n              title: task.content,\n              desc: task.desc,\n              rate: task.rate,\n              items: task.items,\n              tags: task.tags,\n            });\n          }\n        },\n      },\n      {\n        label: '移至回收站',\n        click: () => {\n          const { current } = clickItem;\n          if (current !== null) {\n            const task = JSON.parse(current.dataset.task);\n            // console.log(\n            //   'xxx===>',\n            //   columns.map((column) => {\n            //     if (column.id === current.dataset.columnid) {\n            //       return {\n            //         ...column,\n            //         tasks: column.tasks.filter((item) => item.id !== task.id),\n            //       };\n            //     }\n            //     return column;\n            //   })\n            // );\n            handleDeleteTask(current.dataset.columnid, task.id);\n          }\n        },\n      },\n    ],\n    'context_menu_task',\n    [columns]\n  );\n\n  const handleDeleteTask = (columnId, taskId) => {\n    onChange(\n      todoData.id,\n      columns.map((column) => {\n        debugger;\n        if (column.id === columnId) {\n          return {\n            ...column,\n            tasks: column.tasks.filter((item) => item.id !== taskId),\n          };\n        }\n        return column;\n      }),\n      {},\n      true\n    );\n  };\n\n  const handleDragEnd = (result) => {\n    const { source, destination } = result;\n    if (!destination) {\n      // const { id, columns } = deleteColumnTask({ ...todoData }, source);\n      // onChange(id, columns);\n      return;\n    }\n    if (\n      source.droppableId === destination.droppableId &&\n      source.index === destination.index\n    ) {\n      return;\n    }\n    const { id, columns } = switchColumnTask(todoData, source, destination);\n    onChange(id, columns, {}, true);\n  };\n  const handleTaskEdit = (column, task) => {\n    setOpen(true);\n    setModalColumnId(column.id);\n    form.setFieldsValue({ ...task, title: task.content });\n  };\n  // const rate = (\n  //   <Rate\n  //     allowClear={false}\n  //     value={taskRate}\n  //     defaultValue={ERate.zero}\n  //     count={4}\n  //     tooltips={[\n  //       '不紧急不重要',\n  //       '不紧急很重要',\n  //       '很紧急不重要',\n  //       '很紧急很重要',\n  //     ]}\n  //     style={{ fontSize: 14, color: 'orangered' }}\n  //     onChange={setTaskRate}\n  //   />\n  // );\n  const handleAddTodo = (values) => {\n    const { id, title, desc, rate, items = [], tags = [] } = values;\n    if (!title) {\n      return;\n    }\n    const newTodo = {\n      id: id || shortid.generate(),\n      status: EStatus.todo,\n      content: title,\n      desc: desc,\n      rate: rate,\n      repeat: taskRepeat,\n      items,\n      tags,\n      createTime: Date.now()\n    };\n    onChange(\n      todoData.id,\n      columns.map((column) => {\n        if (column.id === modalColumnId) {\n          return {\n            ...column,\n            tasks: id\n              ? column.tasks.map((task) => {\n                  if (task.id === id) {\n                    return {\n                      ...task,\n                      ...newTodo,\n                      createTime: task.createTime || Date.now()\n                    };\n                  }\n                  return task;\n                })\n              : [newTodo, ...column.tasks],\n          };\n        }\n        return column;\n      }),\n      {},\n      true\n    );\n    // setInputTask('');\n    // setInputTaskDesc('');\n    // setTaskRate(ERate.zero);\n  };\n\n  const handleCheckLittleTask = (\n    columnItem,\n    taskItem,\n    little,\n    checked,\n    index\n  ) => {\n    onChange(\n      todoData.id,\n      columns.map((column) => {\n        if (column.id === columnItem.id) {\n          return {\n            ...column,\n            tasks: column.tasks.map((task) => {\n              if (task.id === taskItem.id) {\n                return {\n                  ...task,\n                  items: task.items.map((item) => {\n                    if (item.title === little.title) {\n                      return {\n                        ...item,\n                        checked,\n                        finishTime: checked? Date.now(): 0\n                      };\n                    }\n                    return item;\n                  }),\n                };\n              }\n              return task;\n            }),\n          };\n        }\n        return column;\n      }),\n      {},\n      true\n    );\n  };\n  // console.log('todo==', todoData, columns);\n  const sortedColumns = sortType === 'rate'?sortTaskByRate(columns, searchFilter): columns;\n  console.log('sortedColumns', sortedColumns, columns, searchFilter);\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      {/* <div className={styles.title}>象限法则日程</div> */}\n      <div className={styles.Todo}>\n        <div className={styles.columns}>\n          {sortedColumns.map((column, index) => {\n            return (\n              <Column\n                key={column.id}\n                column={column}\n                onEditTask={handleTaskEdit}\n                onCheckLittleTask={handleCheckLittleTask}\n                actions={\n                  <>\n                    <Input\n                      placeholder={''}\n                      bordered={false}\n                      suffix={<SearchOutlined />}\n                      className={styles.search}\n                      onChange={(e) =>\n                        setSearchFilter({\n                          ...searchFilter,\n                          [column.id]: e.target.value,\n                        })\n                      }\n                    />\n                    <PlusCircleOutlined\n                      className={styles.add}\n                      onClick={() => {\n                        setOpen(true);\n                        setModalColumnId(column.id);\n                      }}\n                    />\n                  </>\n                }\n              />\n            );\n          })}\n        </div>\n        {open && (\n          <AddModal\n            form={form}\n            open={open}\n            closeModal={() => {\n              setOpen(false);\n            }}\n            handleAddTodo={handleAddTodo}\n          />\n        )}\n      </div>\n    </DragDropContext>\n  );\n});\n\nexport default TodoList;\n","/Users/jacklee/Project/OpenSource/autonomy/src/utils/antdIcons.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/hooks/useKeyPressed.js",["223"],"import { useState, useEffect } from 'react';\n\nconst useKeyPressed = (targetKeyCode) => {\n  const [keyPressed, setKeyPressed] = useState(false);\n  useEffect(() => {\n    const keyDownHandler = ({ keyCode }) => {\n      if (keyCode === targetKeyCode) {\n        setKeyPressed(true);\n      }\n    };\n    const keyUpHandler = ({ keyCode }) => {\n      if (keyCode === targetKeyCode) {\n        setKeyPressed(false);\n      }\n    };\n    document.addEventListener('keyup', keyUpHandler);\n    document.addEventListener('keydown', keyDownHandler);\n    return () => {\n      document.removeEventListener('keyup', keyUpHandler);\n      document.removeEventListener('keydown', keyDownHandler);\n    };\n  }, []);\n  return keyPressed;\n};\n\nexport default useKeyPressed;\n","/Users/jacklee/Project/OpenSource/autonomy/src/todo/components/Report/index.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/hooks/useContextMenu.js",["224","225"],"import { useEffect, useRef } from 'react';\nimport { getParentNode } from '../utils/helper.js';\n// import nodejs modules\nconst { remote } = window.require('electron');\nconst { Menu, MenuItem } = remote;\n\nconst useContextMenu = (menus, targetClass, deps = []) => {\n  const clickElement = useRef(null);\n  useEffect(() => {\n    const menu = new Menu();\n    menus.forEach((item) => {\n      menu.append(new MenuItem(item));\n    });\n    const handleContextMenu = ({ target }) => {\n      // 只有 e.target被 target 包裹时才出现\n      // const targetEle = document.querySelector(target);\n      // if (targetEle && targetEle.contains(e.target)) {\n      //if (target.classList.contains(targetClass)) {\n      const parentNode = getParentNode(target, targetClass);\n      if (parentNode) {\n        clickElement.current = parentNode;\n        menu.popup({ window: remote.getCurrentWindow() });\n      }\n    };\n    window.addEventListener('contextmenu', handleContextMenu);\n    return () => {\n      window.removeEventListener('contextmenu', handleContextMenu);\n    };\n  }, [...deps]);\n  return clickElement;\n};\n\nexport default useContextMenu;\n","/Users/jacklee/Project/OpenSource/autonomy/src/note/index.jsx",["226","227"],"/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/index.js",["228","229","230"],"import React, { useCallback, useEffect, useMemo } from 'react';\nimport {\n  Transforms,\n  createEditor,\n  Editor,\n  Element as SlateElement,\n  Node as SlateNode,\n} from 'slate';\nimport { withHistory } from 'slate-history';\nimport { Editable, ReactEditor, Slate, withReact } from 'slate-react';\nimport withShortcuts from './formatter/shortcuts';\nimport withImages from './formatter/images';\nimport Toolbar from './components/Toolbar';\nimport isHotkey from 'is-hotkey';\nimport styles from './index.less';\nimport formatter, { formatChildren } from './formatter';\nimport { BlockButton, MarkButton } from './components/Button';\nimport { toggleMark } from './formatter/utils';\nimport { DEFAULT_NOTE, HOTKEYS, SHORTCUTS } from './constant';\nimport ToolIcon from '../Icon';\nimport ColorPicker from './components/ColorPicker';\nimport InsertImage from './components/InsertImage';\n\nconst parseValue = (value) => {\n  if (Array.isArray(value)) {\n    return value;\n  }\n  if (typeof value === 'string') {\n    if (value.startsWith('[{') && value.endsWith('}]')) {\n      return JSON.parse(value);\n    }\n    return [\n      {\n        type: 'paragraph',\n        children: [\n          {\n            text: value,\n          },\n        ],\n      },\n    ];\n  }\n  return DEFAULT_NOTE;\n};\n\nconst initialValue = [\n  {\n    type: 'paragraph',\n    children: [\n      {\n        text: '请输入markdown...',\n      },\n    ],\n  },\n];\n//   // {\n//   //   type: 'block-quote',\n//   //   children: [{ text: 'A wise quote.', color: 'red' }],\n//   // },\n//   // {\n//   //   type: 'image',\n//   //   url: 'https://source.unsplash.com/kFrdX5IeQzI',\n//   //   children: [{ text: '' }],\n//   // },\n//   // {\n//   //   type: 'paragraph',\n//   //   children: [\n//   //     {\n//   //       text: 'Order when you start a line with \"## \" you get a level-two heading, like this:',\n//   //     },\n//   //   ],\n//   // },\n//   // {\n//   //   type: 'heading-two',\n//   //   children: [{ text: 'Try it out!' }],\n//   // },\n//   // {\n//   //   type: 'image',\n//   //   url: 'https://source.unsplash.com/zOwZKwZOZq8',\n//   //   children: [{ text: '' }],\n//   // },\n//   // {\n//   //   type: 'paragraph',\n//   //   textAlign: 'right',\n//   //   children: [\n//   //     {\n//   //       text: 'Try it out for yourself! Try starting a new line with \">\", \"-\", or \"#\"s.',\n//   //     },\n//   //   ],\n//   // },\n// ];\n\nconst SlateEditor = ({ id, page = 1, value, onChange, isLoaded }) => {\n  const renderElement = useCallback(formatter, []);\n  const renderLeaf = useCallback(formatChildren, []);\n  const editor = useMemo(\n    () => withShortcuts(withImages(withReact(withHistory(createEditor())))),\n    []\n  );\n\n  // useEffect(() => {\n  //   // editor.children = value;\n  // }, [editor, value]);\n\n  const handleSaveSelection = () => {\n    editor.savedSelection = editor.selection;\n  };\n\n  const handleDOMBeforeInput = useCallback(\n    (e) => {\n      queueMicrotask(() => {\n        const pendingDiffs = ReactEditor.androidPendingDiffs(editor);\n\n        const scheduleFlush = pendingDiffs?.some(({ diff, path }) => {\n          if (!diff.text.endsWith(' ')) {\n            return false;\n          }\n\n          const { text } = SlateNode.leaf(editor, path);\n          const beforeText = text.slice(0, diff.start) + diff.text.slice(0, -1);\n          console.log('handleDOMBeforeInput22', beforeText);\n          if (!(beforeText in SHORTCUTS)) {\n            return;\n          }\n\n          const blockEntry = Editor.above(editor, {\n            at: path,\n            match: (n) =>\n              SlateElement.isElement(n) && Editor.isBlock(editor, n),\n          });\n          if (!blockEntry) {\n            return false;\n          }\n\n          const [, blockPath] = blockEntry;\n          return Editor.isStart(editor, Editor.start(editor, path), blockPath);\n        });\n\n        if (scheduleFlush) {\n          ReactEditor.androidScheduleFlush(editor);\n        }\n      });\n    },\n    [editor]\n  );\n  console.log('SlateEditor', id, value);\n  return (\n    <Slate\n      key={id + '-' + page}\n      editor={editor}\n      initialValue={parseValue(value)}\n      // value={parseValue(value)}\n      onChange={(value) => {\n        console.log('values==', value);\n        const isAstChange = editor.operations.some(\n          (op) => 'set_selection' !== op.type\n        );\n        if (isAstChange) {\n          // Save the value to Local Storage.\n          // const content = JSON.stringify(value);\n          // localStorage.setItem('content', content);\n          onChange(value);\n        }\n      }}\n    >\n      <Toolbar className={styles.toolbar}>\n        <InsertImage />\n        <ColorPicker />\n        <MarkButton\n          format=\"bold\"\n          icon={<ToolIcon type=\"icon-editor-fuhao-jiacu\" />}\n        />\n        <MarkButton\n          format=\"italic\"\n          icon={<ToolIcon type=\"icon-editor-italic\" />}\n        />\n        <MarkButton\n          format=\"underline\"\n          icon={<ToolIcon type=\"icon-editor-underline\" />}\n        />\n        <MarkButton format=\"code\" icon={<ToolIcon type=\"icon-editor-code\" />} />\n        <BlockButton\n          format=\"heading-one\"\n          icon={<ToolIcon type=\"icon-editor-heading-h1\" />}\n        />\n        <BlockButton\n          format=\"heading-two\"\n          icon={<ToolIcon type=\"icon-editor-heading-h2\" />}\n        />\n        <BlockButton\n          format=\"block-quote\"\n          icon={<ToolIcon type=\"icon-editor-text_quote\" />}\n        />\n        <BlockButton\n          format=\"numbered-list\"\n          icon={<ToolIcon type=\"icon-editor-format_list_numbered\" />}\n        />\n        <BlockButton\n          format=\"bulleted-list\"\n          icon={<ToolIcon type=\"icon-editor-format-list-bulleted\" />}\n        />\n        <BlockButton\n          format=\"left\"\n          icon={<ToolIcon type=\"icon-editor-align-left\" />}\n        />\n        <BlockButton\n          format=\"center\"\n          icon={<ToolIcon type=\"icon-editor-align-center\" />}\n        />\n        <BlockButton\n          format=\"right\"\n          icon={<ToolIcon type=\"icon-editor-align-right\" />}\n        />\n        <BlockButton\n          format=\"justify\"\n          icon={<ToolIcon type=\"icon-editor-align-justify\" />}\n        />\n      </Toolbar>\n      <Editable\n        className={styles.slate_editor}\n        onDOMBeforeInput={handleDOMBeforeInput}\n        renderElement={renderElement}\n        renderLeaf={renderLeaf}\n        onKeyDown={(event) => {\n          if (isHotkey('mod+a', event)) {\n            event.preventDefault();\n            Transforms.select(editor, []);\n          }\n          for (const hotkey in HOTKEYS) {\n            if (isHotkey(hotkey, event)) {\n              event.preventDefault();\n              const mark = HOTKEYS[hotkey];\n              toggleMark(editor, mark);\n            }\n          }\n        }}\n        placeholder={\n          <span style={{ display: 'inline-block', marginTop: 12 }}>\n            请输入markdown...\n          </span>\n        }\n        spellCheck\n        autoFocus\n        onBlur={handleSaveSelection}\n      />\n    </Slate>\n  );\n};\n\nexport default SlateEditor;\n","/Users/jacklee/Project/OpenSource/autonomy/src/aim/initial.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/todo/initial.js",["231","232"],"import shortid from 'shortid';\nimport moment from 'moment';\n\nexport const ERepeat = {\n  once: 0,\n  everyday: 1,\n  weekly: 2,\n};\n\nexport const ERate = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  three: 3,\n  four: 4,\n};\n\nexport const EStatus = {\n  todo: 0,\n  doing: 1,\n  done: 2,\n};\n\nexport const ESort = {\n  top: 1,\n  normal: 2,\n};\n\nexport const newTodo = (momentFn, id) => {\n  // console.log('momentFn', momentFn, id);\n  const curTime = momentFn.valueOf();\n  return {\n    id,\n    title: momentFn.format('YYYYMMDD'),\n    createTime: curTime,\n    modifyTime: curTime,\n    sort: ESort.normal,\n    columns: [\n      {\n        id: 'column-todo',\n        name: '代办',\n        tasks: [],\n      },\n      {\n        id: 'column-inprogress',\n        name: '进行中',\n        tasks: [],\n      },\n      {\n        id: 'column-done',\n        name: '已完成',\n        tasks: [],\n      },\n    ],\n  };\n};\n\nexport const initTodo = (newTodo, newId) => {\n  return {\n    currentId: newId,\n    editId: '',\n    data: [newTodo],\n  };\n};\n","/Users/jacklee/Project/OpenSource/autonomy/src/aim/EditAim.js",["233","234","235","236"],"import React, { useState, useEffect, ChangeEvent } from 'react';\nimport { Input, Button, Select, DatePicker, InputNumber } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport styles from './index.less';\nimport shortid from 'shortid';\nimport { EAimType } from './initial';\n\nconst EditAim = (props) => {\n  const { activeFile, onSubmit } = props || {};\n  const data =\n    typeof activeFile?.body === 'string' && activeFile?.body.length > 0\n      ? JSON.parse(activeFile.body)\n      : { branchs: [] };\n  const [isEditing, setIsEditing] = useState(false);\n  // const [title, setTitle] = useState(activeFile.title || '');\n  const [desc, setDesc] = useState(data.desc || '');\n  const [times, setTimes] = useState(data.times || 0);\n  const [startDate, setStartDate] = useState(\n    data.startDate || moment().format('YYYYMMDD')\n  );\n  const [branchs, setBranchs] = useState(\n    data.branchs || [{ id: shortid.generate(), name: '' }]\n  );\n  useEffect(() => {\n    setDesc(data.desc || '');\n    setTimes(data.times || 0);\n    setStartDate(data.startDate || moment().format('YYYYMMDD'));\n    setBranchs(data.branchs || []);\n  }, [activeFile.id, activeFile.isLoaded]);\n\n  const handleAddBranch = () => {\n    branchs?.push({\n      id: shortid.generate(),\n      name: '',\n      desc: '',\n      times: 0,\n      currentTimes: 0,\n    });\n    setBranchs([...branchs]);\n    if (branchs.length === 1) {\n      setTimes(0);\n    }\n  };\n\n  const handleSubmit = () => {\n    onSubmit(activeFile.id, {\n      ...data,\n      desc,\n      times,\n      startDate,\n      branchs,\n    });\n    setIsEditing(false);\n  };\n  const handleBranchChange = (key, e, index) => {\n    let newBranchs = [...branchs];\n    newBranchs[index][key] = e.target.value;\n    setBranchs(newBranchs);\n  };\n  const setBranchTimes = (num, index) => {\n    let newBranchs = [...branchs];\n    // console.log(\n    //   'xxxtimes',\n    //   times,\n    //   newBranchs[index],\n    //   newBranchs[index].times,\n    //   num,\n    //   times - newBranchs[index].times + num\n    // );\n    setTimes(times - (newBranchs[index].times || 0) + num);\n    newBranchs[index].times = num;\n    setBranchs(newBranchs);\n  };\n  // console.log(\n  //   'editAim',\n  //   activeFile,\n  //   data,\n  //   startDate,\n  //   data.startDate || moment().format('YYYYMMDD')\n  // );\n  // const isEditing = data.id === editId;\n  return (\n    <div className={styles.EditAim}>\n      <div className={styles.formItem}>\n        <span className={styles.label}>目标名称：</span>\n        {/* {isEditing ? (\n          <Input\n            onChange={(e) => setTitle(e.target.value)}\n            value={title}\n            style={{ width: '60%' }}\n            placeholder=\"请输入目标名称\"\n          />\n        ) : ( */}\n        <div className={styles.aimTitle}>\n          <span>{activeFile.title}</span>\n          <Button\n            disabled={isEditing}\n            type=\"text\"\n            onClick={() => setIsEditing(true)}\n          >\n            编辑\n          </Button>\n        </div>\n        {/* )} */}\n      </div>\n      {(isEditing || desc?.length > 0) && (\n        <div className={styles.formItem}>\n          <span className={styles.label}>描述：</span>\n          {isEditing ? (\n            <Input.TextArea\n              rows={2}\n              onChange={(e) => setDesc(e.target.value)}\n              value={desc}\n              style={{ width: '60%' }}\n              placeholder=\"请输入目标描述\"\n            />\n          ) : (\n            <div style={{ width: '60%', wordWrap: 'break-word' }}>{desc}</div>\n          )}\n        </div>\n      )}\n\n      {branchs?.map((branch, index) => {\n        if (!branch) return null;\n        if (!isEditing && !branch.name) return null;\n        return (\n          <div key={branch.id}>\n            <div className={styles.formItem}>\n              <span className={styles.label}>分支{index + 1}：</span>\n              {isEditing ? (\n                <div className={styles.branchTitle}>\n                  <Input\n                    value={branch.name}\n                    onChange={(e) => handleBranchChange('name', e, index)}\n                    placeholder=\"请输入分支名\"\n                  />\n                  <div className={styles.branchTimes}>\n                    <InputNumber\n                      placeholder=\"打卡次数\"\n                      style={{ flex: 1, margin: '0 6px' }}\n                      min={0}\n                      value={branch.times}\n                      onChange={(val) => setBranchTimes(Number(val), index)}\n                    />\n                    次打卡\n                  </div>\n                </div>\n              ) : (\n                <div className={styles.branchTitle}>\n                  {branch.name}\n                  <span>{branch.times}次打卡</span>\n                </div>\n              )}\n            </div>\n            {(isEditing || branch?.desc?.length > 0) && (\n              <div className={styles.formItem}>\n                <span className={styles.label}></span>\n                {isEditing ? (\n                  <Input.TextArea\n                    value={branch.desc}\n                    onChange={(e) => handleBranchChange('desc', e, index)}\n                    rows={2}\n                    style={{ width: '60%' }}\n                    placeholder=\"请输入分支描述\"\n                  />\n                ) : (\n                  <div style={{ width: '60%' }}>{branch.desc}</div>\n                )}\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {isEditing && (\n        <div className={styles.formItem}>\n          <span className={styles.label}></span>\n          <Button\n            type=\"dashed\"\n            style={{ width: '60%' }}\n            onClick={handleAddBranch}\n          >\n            <PlusOutlined /> 添加分支\n          </Button>\n        </div>\n      )}\n\n      <div className={styles.formItem}>\n        <span className={styles.label}>开始时间：</span>\n        <div className={styles.dateTimes} style={{ width: '60%' }}>\n          <div style={{ flex: 1 }}>\n            {isEditing ? (\n              <DatePicker\n                value={moment(startDate)}\n                onChange={(date) =>\n                  setStartDate(moment(date).format('YYYYMMDD'))\n                }\n                placeholder=\"开始时间\"\n                style={{ width: 280 }}\n              />\n            ) : (\n              <div>{startDate}</div>\n            )}\n          </div>\n          <div className={styles.times}>\n            <span className={styles.label}>总投入：</span>\n            {isEditing ? (\n              <InputNumber\n                disabled={branchs?.length > 0}\n                style={{ flex: 1, marginRight: 4 }}\n                min={0}\n                value={times}\n                onChange={(val) => setTimes(Number(val))}\n              />\n            ) : (\n              <span style={{ color: 'red', marginRight: 4 }}>{times}</span>\n            )}\n            次打卡\n          </div>\n        </div>\n      </div>\n      {isEditing && (\n        <div className={styles.formItem}>\n          <span className={styles.label}></span>\n          <div style={{ width: '60%', textAlign: 'left' }}>\n            <Button\n              type=\"primary\"\n              style={{ width: 180 }}\n              onClick={handleSubmit}\n            >\n              保存\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EditAim;\n","/Users/jacklee/Project/OpenSource/autonomy/src/components/Column.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/aim/AimList.js",["237"],"import React from 'react';\nimport { Card, Progress } from 'antd';\nimport { LikeOutlined } from '@ant-design/icons';\n\nimport styles from './index.less';\n\nconst AimList = (props) => {\n  const { activeFile, addBranchTimes } = props || {};\n  const data =\n    typeof activeFile?.body === 'string' && activeFile?.body.length > 0\n      ? JSON.parse(activeFile.body)\n      : { branchs: [] };\n\n  const { title, desc, branchs = [], times = 0, currentTimes = 0 } = data;\n  // console.log('aimlist', data, branchs);\n\n  const handleTimesChagne = (index) => {\n    const newBranchs = [...branchs];\n    let dataCurrentTimes = data?.currentTimes;\n    if (index >= 0) {\n      if ((newBranchs[index]?.currentTimes || 0) < newBranchs[index]?.times) {\n        newBranchs[index].currentTimes += 1;\n        dataCurrentTimes = (data.currentTimes || 0) + 1;\n      }\n    } else {\n      if ((data?.currentTimes || 0) < data?.times) {\n        dataCurrentTimes = (data.currentTimes || 0) + 1;\n      }\n    }\n    addBranchTimes(activeFile.id, {\n      ...data,\n      currentTimes: dataCurrentTimes,\n      branchs: newBranchs,\n    });\n  };\n\n  return (\n    <div className={styles.AimList}>\n      <Card\n        style={{ background: '#e6f7ff' }}\n        actions={\n          branchs.length < 1\n            ? [\n                <span onClick={() => handleTimesChagne(-1)}>\n                  <LikeOutlined key=\"times\" style={{ marginRight: 4 }} />\n                  {currentTimes}\n                </span>,\n              ]\n            : [\n                <Progress\n                  style={{ width: '90%', margin: '0 18px' }}\n                  percent={Math.floor((currentTimes / times) * 100)}\n                />,\n              ]\n        }\n      >\n        <div className={styles.item}>\n          <Progress\n            percent={Math.floor((currentTimes / times) * 100)}\n            width={60}\n            type=\"circle\"\n            format={() => '总'}\n          />\n          <div className={styles.titleDes}>\n            <div className={styles.title}>{activeFile.title}</div>\n            <div className={styles.desc}>{desc}</div>\n          </div>\n        </div>\n      </Card>\n      {branchs.map((branch, index) => {\n        if (!branch) return null;\n        return (\n          <Card\n            style={{ marginTop: 12 }}\n            key={branch.id}\n            actions={[\n              <span onClick={() => handleTimesChagne(index)}>\n                <LikeOutlined key=\"times\" style={{ marginRight: 4 }} />\n                {branch.currentTimes}\n              </span>,\n            ]}\n          >\n            <div className={styles.item}>\n              <Progress\n                percent={Math.floor((branch.currentTimes / branch.times) * 100)}\n                width={60}\n                type=\"circle\"\n              />\n              <div className={styles.titleDes}>\n                <div className={styles.branchTitle}>{branch.name}</div>\n                <div className={styles.desc}>{branch.desc}</div>\n              </div>\n            </div>\n          </Card>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default AimList;\n","/Users/jacklee/Project/OpenSource/autonomy/src/todo/components/AddDrawer/index.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/components/Task.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/components/SmallRate.jsx",[],"/Users/jacklee/Project/OpenSource/autonomy/src/components/DynamicTags/index.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/components/InsertImage.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/components/Button.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/components/Icon.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/components/Toolbar.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/formatter/utils.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/formatter/images.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/formatter/shortcuts.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/components/ColorPicker/index.js",["238"],"'use strict';\n\nimport React, { useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport EditorIcon from '../../../Icon';\nimport { Editor } from 'slate';\nimport styles from './index.less';\nimport { useSlate } from 'slate-react';\n\nconst popover = {\n  position: 'absolute',\n  zIndex: '2',\n};\nconst cover = {\n  position: 'fixed',\n  top: '0px',\n  right: '0px',\n  bottom: '0px',\n  left: '0px',\n};\n\nfunction ColorPicker() {\n  const editor = useSlate();\n  const [visible, setVisible] = useState(false);\n  const [color, setColor] = useState({ hex: '#520520' });\n\n  const handleChange = (color, event) => {\n    setColor(color);\n    Editor.addMark(editor, 'color', color.hex);\n  };\n\n  const handleOpenColorPicker = () => {\n    setVisible(true);\n  };\n\n  const handleClose = () => {\n    setVisible(false);\n  };\n\n  return (\n    <span>\n      <EditorIcon\n        type=\"icon-editor-text-color\"\n        onClick={handleOpenColorPicker}\n        style={{ userSelect: 'none', color: '#aaaaaa' }}\n      />\n      {visible ? (\n        <div className={styles.chrome_picker} style={popover}>\n          <div style={cover} onClick={handleClose} />\n          <ChromePicker color={color} onChange={handleChange} />\n        </div>\n      ) : null}\n    </span>\n  );\n}\n\nexport default ColorPicker;\n","/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/components/Menu.js",[],"/Users/jacklee/Project/OpenSource/autonomy/src/components/SlateEditor/formatter/index.jsx",[],{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":9,"column":10,"nodeType":"245","messageId":"246","endLine":9,"endColumn":24},{"ruleId":"243","severity":1,"message":"247","line":9,"column":26,"nodeType":"245","messageId":"246","endLine":9,"endColumn":34},{"ruleId":"243","severity":1,"message":"248","line":13,"column":3,"nodeType":"245","messageId":"246","endLine":13,"endColumn":15},{"ruleId":"243","severity":1,"message":"249","line":14,"column":3,"nodeType":"245","messageId":"246","endLine":14,"endColumn":17},{"ruleId":"243","severity":1,"message":"250","line":44,"column":7,"nodeType":"245","messageId":"246","endLine":44,"endColumn":9},{"ruleId":"243","severity":1,"message":"251","line":59,"column":7,"nodeType":"245","messageId":"246","endLine":59,"endColumn":18},{"ruleId":"252","severity":1,"message":"253","line":104,"column":6,"nodeType":"254","endLine":104,"endColumn":8,"suggestions":"255"},{"ruleId":"243","severity":1,"message":"256","line":13,"column":19,"nodeType":"245","messageId":"246","endLine":13,"endColumn":23},{"ruleId":"257","severity":1,"message":"258","line":56,"column":17,"nodeType":"259","messageId":"260","endLine":56,"endColumn":19},{"ruleId":"243","severity":1,"message":"261","line":5,"column":9,"nodeType":"245","messageId":"246","endLine":5,"endColumn":16},{"ruleId":"243","severity":1,"message":"262","line":6,"column":5,"nodeType":"245","messageId":"246","endLine":6,"endColumn":13},{"ruleId":"243","severity":1,"message":"263","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":25},{"ruleId":"243","severity":1,"message":"264","line":3,"column":8,"nodeType":"245","messageId":"246","endLine":3,"endColumn":14},{"ruleId":"243","severity":1,"message":"265","line":6,"column":10,"nodeType":"245","messageId":"246","endLine":6,"endColumn":18},{"ruleId":"243","severity":1,"message":"266","line":6,"column":20,"nodeType":"245","messageId":"246","endLine":6,"endColumn":28},{"ruleId":"243","severity":1,"message":"267","line":6,"column":30,"nodeType":"245","messageId":"246","endLine":6,"endColumn":37},{"ruleId":"243","severity":1,"message":"268","line":7,"column":10,"nodeType":"245","messageId":"246","endLine":7,"endColumn":17},{"ruleId":"243","severity":1,"message":"269","line":9,"column":8,"nodeType":"245","messageId":"246","endLine":9,"endColumn":19},{"ruleId":"243","severity":1,"message":"270","line":1,"column":27,"nodeType":"245","messageId":"246","endLine":1,"endColumn":38},{"ruleId":"243","severity":1,"message":"264","line":2,"column":8,"nodeType":"245","messageId":"246","endLine":2,"endColumn":14},{"ruleId":"243","severity":1,"message":"271","line":4,"column":10,"nodeType":"245","messageId":"246","endLine":4,"endColumn":17},{"ruleId":"243","severity":1,"message":"272","line":4,"column":19,"nodeType":"245","messageId":"246","endLine":4,"endColumn":24},{"ruleId":"243","severity":1,"message":"273","line":4,"column":35,"nodeType":"245","messageId":"246","endLine":4,"endColumn":40},{"ruleId":"243","severity":1,"message":"274","line":8,"column":17,"nodeType":"245","messageId":"246","endLine":8,"endColumn":21},{"ruleId":"243","severity":1,"message":"275","line":8,"column":29,"nodeType":"245","messageId":"246","endLine":8,"endColumn":35},{"ruleId":"243","severity":1,"message":"276","line":8,"column":37,"nodeType":"245","messageId":"246","endLine":8,"endColumn":41},{"ruleId":"243","severity":1,"message":"277","line":10,"column":10,"nodeType":"245","messageId":"246","endLine":10,"endColumn":15},{"ruleId":"243","severity":1,"message":"278","line":45,"column":7,"nodeType":"245","messageId":"246","endLine":45,"endColumn":23},{"ruleId":"243","severity":1,"message":"279","line":107,"column":22,"nodeType":"245","messageId":"246","endLine":107,"endColumn":35},{"ruleId":"243","severity":1,"message":"280","line":112,"column":20,"nodeType":"245","messageId":"246","endLine":112,"endColumn":31},{"ruleId":"252","severity":1,"message":"281","line":22,"column":6,"nodeType":"254","endLine":22,"endColumn":8,"suggestions":"282"},{"ruleId":"252","severity":1,"message":"283","line":29,"column":6,"nodeType":"254","endLine":29,"endColumn":15,"suggestions":"284"},{"ruleId":"252","severity":1,"message":"285","line":29,"column":7,"nodeType":"286","endLine":29,"endColumn":14},{"ruleId":"243","severity":1,"message":"287","line":2,"column":17,"nodeType":"245","messageId":"246","endLine":2,"endColumn":26},{"ruleId":"243","severity":1,"message":"288","line":13,"column":16,"nodeType":"245","messageId":"246","endLine":13,"endColumn":23},{"ruleId":"243","severity":1,"message":"287","line":1,"column":30,"nodeType":"245","messageId":"246","endLine":1,"endColumn":39},{"ruleId":"243","severity":1,"message":"289","line":46,"column":7,"nodeType":"245","messageId":"246","endLine":46,"endColumn":19},{"ruleId":"257","severity":1,"message":"290","line":123,"column":13,"nodeType":"291","messageId":"292","endLine":123,"endColumn":20},{"ruleId":"243","severity":1,"message":"293","line":1,"column":8,"nodeType":"245","messageId":"246","endLine":1,"endColumn":15},{"ruleId":"243","severity":1,"message":"264","line":2,"column":8,"nodeType":"245","messageId":"246","endLine":2,"endColumn":14},{"ruleId":"243","severity":1,"message":"294","line":1,"column":38,"nodeType":"245","messageId":"246","endLine":1,"endColumn":49},{"ruleId":"243","severity":1,"message":"295","line":2,"column":25,"nodeType":"245","messageId":"246","endLine":2,"endColumn":31},{"ruleId":"243","severity":1,"message":"265","line":7,"column":10,"nodeType":"245","messageId":"246","endLine":7,"endColumn":18},{"ruleId":"252","severity":1,"message":"296","line":30,"column":6,"nodeType":"254","endLine":30,"endColumn":42,"suggestions":"297"},{"ruleId":"243","severity":1,"message":"298","line":14,"column":11,"nodeType":"245","messageId":"246","endLine":14,"endColumn":16},{"ruleId":"299","severity":1,"message":"300","line":1,"column":1,"nodeType":"301","messageId":"302","endLine":1,"endColumn":14,"fix":"303"},"no-native-reassign",["304"],"no-negated-in-lhs",["305"],"no-unused-vars","'ConfigProvider' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","'initAllFiles' is defined but never used.","'importChildren' is defined but never used.","'fs' is assigned a value but never used.","'reportTypes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeFile', 'activeFileId', and 'openClickedFile'. Either include them or remove the dependency array.","ArrayExpression",["306"],"'path' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'TabPane' is assigned a value but never used.","'location' is assigned a value but never used.","'useState' is defined but never used.","'moment' is defined but never used.","'EAimType' is defined but never used.","'EAimSort' is defined but never used.","'initAim' is defined but never used.","'message' is defined but never used.","'EmptyStatus' is defined but never used.","'useCallback' is defined but never used.","'IColumn' is defined but never used.","'ITask' is defined but never used.","'ERate' is defined but never used.","'Rate' is defined but never used.","'Button' is defined but never used.","'Menu' is defined but never used.","'ITodo' is defined but never used.","'deleteColumnTask' is assigned a value but never used.","'setTaskRepeat' is assigned a value but never used.","'setSortType' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'targetKeyCode'. Either include it or remove the dependency array.",["307"],"React Hook useEffect has missing dependencies: 'menus' and 'targetClass'. Either include them or remove the dependency array.",["308"],"React Hook useEffect has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","SpreadElement","'useEffect' is defined but never used.","'setData' is assigned a value but never used.","'initialValue' is assigned a value but never used.","Array.prototype.some() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'shortid' is defined but never used.","'ChangeEvent' is defined but never used.","'Select' is defined but never used.","React Hook useEffect has missing dependencies: 'data.branchs', 'data.desc', 'data.startDate', and 'data.times'. Either include them or remove the dependency array.",["309"],"'title' is assigned a value but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"310","text":"311"},"no-global-assign","no-unsafe-negation",{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},[0,13],"","Update the dependencies array to be: [activeFile, activeFileId, openClickedFile]",{"range":"320","text":"321"},"Update the dependencies array to be: [targetKeyCode]",{"range":"322","text":"323"},"Update the dependencies array to be: [menus, targetClass]",{"range":"324","text":"325"},"Update the dependencies array to be: [activeFile.id, activeFile.isLoaded, data.branchs, data.desc, data.startDate, data.times]",{"range":"326","text":"327"},[3154,3156],"[activeFile, activeFileId, openClickedFile]",[686,688],"[targetKeyCode]",[1045,1054],"[menus, targetClass]",[1165,1201],"[activeFile.id, activeFile.isLoaded, data.branchs, data.desc, data.startDate, data.times]"]