[{"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/index.js":"1","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/App.js":"2","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/reportWebVitals.js":"3","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/antdIcons.js":"4","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/FileList.js":"5","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/FileSearch.js":"6","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/todo/index.js":"7","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/note/index.js":"8","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/index.js":"9","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/helper.js":"10","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/hooks/useContextMenu.js":"11","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/hooks/useKeyPressed.js":"12","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/todo/TodoList.js":"13","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/todo/initial.js":"14","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/EditAim.js":"15","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/initial.js":"16","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/AimList.js":"17","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/note/initial.js":"18","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Column.js":"19","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Task.js":"20","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/treeHelper.js":"21","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/fileHelper.js":"22","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/hooks/useIpcRenderer.js":"23","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/setting/index.js":"24","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/crash/index.js":"25","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/VEditor.js":"26"},{"size":916,"mtime":1610296200881,"results":"27","hashOfConfig":"28"},{"size":10668,"mtime":1611591649327,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1607156125945,"results":"30","hashOfConfig":"28"},{"size":861,"mtime":1610184870996,"results":"31","hashOfConfig":"28"},{"size":5500,"mtime":1611586916415,"results":"32","hashOfConfig":"28"},{"size":1978,"mtime":1611460694007,"results":"33","hashOfConfig":"28"},{"size":1061,"mtime":1610198892850,"results":"34","hashOfConfig":"28"},{"size":441,"mtime":1611589897165,"results":"35","hashOfConfig":"28"},{"size":2729,"mtime":1610198915311,"results":"36","hashOfConfig":"28"},{"size":658,"mtime":1610271712589,"results":"37","hashOfConfig":"28"},{"size":1112,"mtime":1610185807008,"results":"38","hashOfConfig":"28"},{"size":746,"mtime":1610185824134,"results":"39","hashOfConfig":"28"},{"size":3838,"mtime":1610185059191,"results":"40","hashOfConfig":"28"},{"size":1006,"mtime":1610185260057,"results":"41","hashOfConfig":"28"},{"size":6685,"mtime":1610185605487,"results":"42","hashOfConfig":"28"},{"size":773,"mtime":1610185767507,"results":"43","hashOfConfig":"28"},{"size":2346,"mtime":1610250059618,"results":"44","hashOfConfig":"28"},{"size":688,"mtime":1610185412764,"results":"45","hashOfConfig":"28"},{"size":986,"mtime":1610184733421,"results":"46","hashOfConfig":"28"},{"size":958,"mtime":1610208057449,"results":"47","hashOfConfig":"28"},{"size":7008,"mtime":1610289048020,"results":"48","hashOfConfig":"28"},{"size":447,"mtime":1610257880565,"results":"49","hashOfConfig":"28"},{"size":429,"mtime":1610366549107,"results":"50","hashOfConfig":"28"},{"size":4752,"mtime":1610873685202,"results":"51","hashOfConfig":"28"},{"size":103,"mtime":1610287098559,"results":"52","hashOfConfig":"28"},{"size":1901,"mtime":1611591188926,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1teqt1h",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"56"},"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/index.js",[],["116","117"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/App.js",["118"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/reportWebVitals.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/antdIcons.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/FileList.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/FileSearch.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/todo/index.js",["119","120","121","122"],"import React, { useState } from 'react';\n// import { useIdb } from 'react-use-idb';\nimport moment from 'moment';\nimport styles from './index.less';\nimport shortid from 'shortid';\nimport { ITodo, newTodo, ESort, initTodo } from './initial';\nimport { message } from 'antd';\nimport TodoList from './TodoList';\n\nconst Todo = (props) => {\n  const newId = shortid.generate();\n  const initTodos = initTodo(newTodo(moment(), newId), newId);\n  const [allTodos, setAllTodos] = useState(initTodos);\n  const { currentId = '', editId, data = [] } = allTodos || {};\n  const [currentTodo] = data.filter((item) => item.id === currentId);\n\n  const changeCurrentTodo = (todo) => {\n    const newDatas = data.filter((item) => item.id !== currentId);\n    newDatas.push({ ...todo, modifyTime: moment().valueOf() });\n    setAllTodos({ ...allTodos, data: newDatas });\n  };\n\n  return (\n    <div className={styles.Todo}>\n      <div className={styles.content}>\n        <TodoList todoData={currentTodo} onChange={changeCurrentTodo} />\n      </div>\n    </div>\n  );\n};\n\nexport default Todo;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/note/index.js",["123"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/index.js",["124"],"import React, { useState } from 'react';\n// import { useIdb } from 'react-use-idb';\nimport moment from 'moment';\nimport styles from './index.less';\nimport AimList from './AimList';\nimport { EAimType, EAimSort, initAim } from './initial';\nimport { message } from 'antd';\nimport EditAim from './EditAim';\nimport EmptyStatus from '../../public/empty.png';\n\nconst Aim = (props) => {\n  const initAims = initAim(moment());\n  const [allAims, setAllAims] = useState(initAims);\n  const { currentId = allAims.data[0].id, editId, data = [] } = allAims;\n  const [currentAim] = data.filter((item) => item.id === currentId);\n  console.log('currentAim', initAims, currentAim);\n  const changeCurrentAim = (aim) => {\n    const newDatas = data.filter((item) => item.id !== currentId);\n    newDatas.push({ ...aim, modifyTime: moment().valueOf() });\n    setAllAims({ ...allAims, editId: '', data: newDatas });\n  };\n\n  const addBranchTimes = (index) => {\n    const { data } = allAims;\n    const newData = data.map((item) => {\n      if (item.id === currentId) {\n        item.currentTimes += 1;\n        if (index >= 0) {\n          item.branchs[index].currentTimes += 1;\n        }\n      }\n      return item;\n    });\n\n    setAllAims({\n      ...allAims,\n      data: newData,\n    });\n  };\n  const onEditChange = (type, id, title) => {\n    if (type === EAimType.start) {\n      setAllAims({ ...allAims, editId: id });\n      return;\n    }\n    const { data } = allAims;\n    if (type === EAimType.delete) {\n      const newData = data.filter((item) => item.id !== id);\n      setAllAims({ ...allAims, data: newData });\n      return;\n    }\n    if (type === EAimType.top) {\n      const newData = data.map((item) => {\n        if (item.id === id) {\n          item.sort =\n            item.sort === EAimSort.top ? EAimSort.normal : EAimSort.top;\n          item.modifyTime = moment().valueOf();\n        }\n        return item;\n      });\n      setAllAims({ ...allAims, editId: '', data: newData });\n      return;\n    }\n    if (type === EAimType.rename) {\n      if (!title) {\n        message.error('标题不能为空');\n        return;\n      }\n      const newData = data.map((item) => {\n        if (item.id === id) {\n          item.title = title;\n          item.modifyTime = moment().valueOf();\n        }\n        return item;\n      });\n      setAllAims({ ...allAims, editId: '', data: newData });\n    }\n  };\n\n  return (\n    <div className={styles.Aim}>\n      <div className={styles.content}>\n        <EditAim\n          editId={editId}\n          data={currentAim}\n          onEditChange={onEditChange}\n          onSubmit={changeCurrentAim}\n        />\n        <AimList data={currentAim} addBranchTimes={addBranchTimes} />\n      </div>\n    </div>\n  );\n};\nexport default Aim;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/helper.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/hooks/useContextMenu.js",["125"],"import { useEffect, useRef } from 'react';\nimport { getParentNode } from '../utils/helper';\n// import nodejs modules\nconst { remote } = window.require('electron');\nconst { Menu, MenuItem } = remote;\n\nconst useContextMenu = (menus, targetClass) => {\n  const clickElement = useRef(null);\n  useEffect(() => {\n    const menu = new Menu();\n    menus.forEach((item) => {\n      menu.append(new MenuItem(item));\n    });\n    const handleContextMenu = ({ target }) => {\n      // 只有 e.target被 target 包裹时才出现\n      // const targetEle = document.querySelector(target);\n      // if (targetEle && targetEle.contains(e.target)) {\n      //if (target.classList.contains(targetClass)) {\n      const parentNode = getParentNode(target, targetClass);\n      if (parentNode) {\n        clickElement.current = parentNode;\n        menu.popup({ window: remote.getCurrentWindow() });\n      }\n    };\n    window.addEventListener('contextmenu', handleContextMenu);\n    return () => {\n      window.removeEventListener('contextmenu', handleContextMenu);\n    };\n  }, []);\n  return clickElement;\n};\n\nexport default useContextMenu;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/hooks/useKeyPressed.js",["126"],"import { useState, useEffect } from 'react';\n\nconst useKeyPressed = (targetKeyCode) => {\n  const [keyPressed, setKeyPressed] = useState(false);\n  useEffect(() => {\n    const keyDownHandler = ({ keyCode }) => {\n      if (keyCode === targetKeyCode) {\n        setKeyPressed(true);\n      }\n    };\n    const keyUpHandler = ({ keyCode }) => {\n      if (keyCode === targetKeyCode) {\n        setKeyPressed(false);\n      }\n    };\n    document.addEventListener('keyup', keyUpHandler);\n    document.addEventListener('keydown', keyDownHandler);\n    return () => {\n      document.removeEventListener('keyup', keyUpHandler);\n      document.removeEventListener('keydown', keyDownHandler);\n    };\n  }, []);\n  return keyPressed;\n};\n\nexport default useKeyPressed;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/todo/TodoList.js",["127","128","129","130","131","132","133"],"import React, { useState } from 'react';\nimport moment from 'moment';\nimport styles from './index.less';\nimport { IColumn, ITask, EStatus, ERate, ERepeat } from './initial';\nimport shortid from 'shortid';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport Column from '../components/Column';\nimport { Input, Rate, Dropdown, Button, Menu } from 'antd';\nimport { ITodo } from './initial';\n\nconst switchColumnTask = (todoData, source, destination) => {\n  const { columns } = todoData;\n  let task;\n  let targetColumnIndex;\n  const newColumns = columns.map((column, index) => {\n    if (column.id === source.droppableId) {\n      task = column.tasks[source.index];\n      column.tasks.splice(source.index, 1);\n    }\n    if (column.id === destination.droppableId) {\n      targetColumnIndex = index;\n    }\n    return column;\n  });\n  if ((targetColumnIndex || targetColumnIndex === 0) && task) {\n    newColumns[targetColumnIndex].tasks.splice(destination.index, 0, task);\n  }\n  return { ...todoData, columns: newColumns };\n};\n\nconst deleteColumnTask = (todoData, source) => ({\n  ...todoData,\n  columns: todoData.columns.map((column) => {\n    if (column.id === source.droppableId) {\n      column.tasks.splice(source.index, 1);\n    }\n    return {\n      ...column,\n    };\n  }),\n});\n\nconst sortTaskByRate = (columns)=>\n  columns.map((column) => {\n    column.tasks.sort((a, b) => b.rate - a.rate);\n    return column;\n  });\n\n\nconst TodoList = (props) => {\n  const { todoData, onChange } = props;\n  const { columns = [] } = todoData;\n  const [taskRate, setTaskRate] = useState(ERate.zero);\n  const [inputTask, setInputTask] = useState('');\n  const [taskRepeat, setTaskRepeat] = useState(ERepeat.once);\n\n  const handleDragEnd = (result) => {\n    const { source, destination } = result;\n    if (!destination) {\n      const newTodoData = deleteColumnTask({ ...todoData }, source);\n      onChange(newTodoData);\n      return;\n    }\n    if (\n      source.droppableId === destination.droppableId &&\n      source.index === destination.index\n    ) {\n      return;\n    }\n    const newTodoData = switchColumnTask(todoData, source, destination);\n    onChange(newTodoData);\n  };\n  const rate = (\n    <Rate\n      allowClear={false}\n      value={taskRate}\n      defaultValue={ERate.zero}\n      count={4}\n      tooltips={[\n        '不紧急不重要',\n        '不紧急很重要',\n        '很紧急不重要',\n        '很紧急很重要',\n      ]}\n      style={{ fontSize: 14 }}\n      onChange={setTaskRate}\n    />\n  );\n  const handleAddTask = (value) => {\n    if (!inputTask) {\n      return;\n    }\n    columns[0].tasks.unshift({\n      id: shortid.generate(),\n      status: EStatus.todo,\n      content: inputTask,\n      rate: taskRate,\n      repeat: taskRepeat,\n    });\n    onChange({ ...todoData, columns });\n    setInputTask('');\n    setTaskRate(ERate.one);\n  };\n\n  const sortedColumns = sortTaskByRate(columns);\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      {/* <div className={styles.title}>象限法则日程</div> */}\n      <Input.Search\n        value={inputTask}\n        className={styles.inputSearch}\n        placeholder=\"添加代办事项，记得打上紧急重要分哦～\"\n        enterButton={\n          <Button type=\"primary\" style={{ width: 80, background: '#6E6E6E' }}>\n            添加\n          </Button>\n        }\n        onChange={(e) => setInputTask(e.target.value)}\n        style={{\n          display: 'block',\n          width: '46%',\n          margin: '0 auto 12px',\n          marginTop: 30,\n        }}\n        size=\"middle\"\n        suffix={rate}\n        onSearch={handleAddTask}\n      />\n      <div className={styles.columns}>\n        {sortedColumns.map((column) => {\n          return <Column key={column.id} column={column} />;\n        })}\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default TodoList;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/todo/initial.js",["134","135"],"import shortid from 'shortid';\nimport moment from 'moment';\n\nexport const ERepeat = {\n  once: 0,\n  everyday: 1,\n  weekly: 2,\n};\n\nexport const ERate = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  three: 3,\n  four: 4,\n};\n\nexport const EStatus = {\n  todo: 0,\n  doing: 1,\n  done: 2,\n};\n\nexport const ESort = {\n  top: 1,\n  normal: 2,\n};\n\nexport const newTodo = (momentFn, id) => {\n  console.log('momentFn', momentFn, id);\n  const curTime = momentFn.valueOf();\n  return {\n    id,\n    title: momentFn.format('YYYYMMDD'),\n    createTime: curTime,\n    modifyTime: curTime,\n    sort: ESort.normal,\n    columns: [\n      {\n        id: 'column-todo',\n        name: '代办',\n        tasks: [],\n      },\n      {\n        id: 'column-inprogress',\n        name: '进行中',\n        tasks: [],\n      },\n      {\n        id: 'column-done',\n        name: '已完成',\n        tasks: [],\n      },\n    ],\n  };\n};\n\nexport const initTodo = (newTodo, newId) => {\n  return {\n    currentId: newId,\n    editId: '',\n    data: [newTodo],\n  };\n};\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/EditAim.js",["136","137","138"],"import React, { useState, useEffect, ChangeEvent } from 'react';\nimport { Input, Button, Select, DatePicker, InputNumber } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport styles from './index.less';\nimport shortid from 'shortid';\nimport { EAimType } from './initial';\n\nconst EditAim = (props) => {\n  const { data, editId, onSubmit, onEditChange } = props || {};\n  const [title, setTitle] = useState(data.title || '');\n  const [desc, setDesc] = useState(data.desc || '');\n  const [times, setTimes] = useState(data.times || 0);\n  const [startDate, setStartDate] = useState(\n    data.startDate || moment().format('YYYYMMDD')\n  );\n  const [branchs, setBranchs] = useState(\n    data.branchs || [{ id: shortid.generate(), name: '' }]\n  );\n  useEffect(() => {\n    setTitle(data.title);\n    setDesc(data.desc);\n    setTimes(data.times);\n    setStartDate(data.startDate);\n    setBranchs(data.branchs);\n  }, [data.id]);\n\n  const handleAddBranch = () => {\n    branchs.push({\n      id: shortid.generate(),\n      name: '',\n      desc: '',\n      times: 0,\n      currentTimes: 0,\n    });\n    setBranchs([...branchs]);\n    if (branchs.length === 1) {\n      setTimes(0);\n    }\n  };\n\n  const handleSubmit = () => {\n    onSubmit({\n      ...data,\n      createTime: moment().valueOf(),\n      title,\n      desc,\n      times,\n      startDate,\n      branchs,\n    });\n  };\n  const handleBranchChange = (key, e, index) => {\n    let newBranchs = [...branchs];\n    newBranchs[index][key] = e.target.value;\n    setBranchs(newBranchs);\n  };\n  const setBranchTimes = (num, index) => {\n    let newBranchs = [...branchs];\n    setTimes(times - newBranchs[index].times + num);\n    newBranchs[index].times = num;\n    setBranchs(newBranchs);\n  };\n  console.log('editAim', data.id);\n  const isEditing = data.id === editId;\n  return (\n    <div className={styles.EditAim}>\n      <div className={styles.formItem}>\n        <span className={styles.label}>目标名称：</span>\n        {isEditing ? (\n          <Input\n            onChange={(e) => setTitle(e.target.value)}\n            value={title}\n            style={{ width: '60%' }}\n            placeholder=\"请输入\"\n          />\n        ) : (\n          <div className={styles.aimTitle}>\n            {title}\n            <span\n              className={styles.edit}\n              onClick={() => onEditChange(EAimType.start, data.id)}\n            >\n              编辑\n            </span>\n          </div>\n        )}\n      </div>\n      <div className={styles.formItem}>\n        <span className={styles.label}>描述：</span>\n        {isEditing ? (\n          <Input.TextArea\n            rows={2}\n            onChange={(e) => setDesc(e.target.value)}\n            value={desc}\n            style={{ width: '60%' }}\n            placeholder=\"请输入\"\n          />\n        ) : (\n          <div style={{ width: '60%', wordWrap: 'break-word' }}>{desc}</div>\n        )}\n      </div>\n      {branchs.map((branch, index) => {\n        if (!branch) return null;\n        if (!isEditing && !branch.name) return null;\n        return (\n          <div key={branch.id}>\n            <div className={styles.formItem}>\n              <span className={styles.label}>分支{index + 1}：</span>\n              {isEditing ? (\n                <div className={styles.branchTitle}>\n                  <Input\n                    value={branch.name}\n                    onChange={(e) => handleBranchChange('name', e, index)}\n                    placeholder=\"请输入\"\n                  />\n                  <div className={styles.branchTimes}>\n                    <InputNumber\n                      placeholder=\"打卡次数\"\n                      style={{ flex: 1, margin: '0 6px' }}\n                      min={0}\n                      value={branch.times}\n                      onChange={(val) => setBranchTimes(Number(val), index)}\n                    />\n                    次打卡\n                  </div>\n                </div>\n              ) : (\n                <div className={styles.branchTitle}>\n                  {branch.name}\n                  <span>{branch.times}次打卡</span>\n                </div>\n              )}\n            </div>\n            <div className={styles.formItem}>\n              <span className={styles.label}></span>\n              {isEditing ? (\n                <Input.TextArea\n                  value={branch.desc}\n                  onChange={(e) => handleBranchChange('desc', e, index)}\n                  rows={2}\n                  style={{ width: '60%' }}\n                  placeholder=\"请输入\"\n                />\n              ) : (\n                <div style={{ width: '60%' }}>{branch.desc}</div>\n              )}\n            </div>\n          </div>\n        );\n      })}\n      {isEditing && (\n        <div className={styles.formItem}>\n          <span className={styles.label}></span>\n          <Button\n            type=\"dashed\"\n            style={{ width: '60%' }}\n            onClick={handleAddBranch}\n          >\n            <PlusOutlined /> 添加分支\n          </Button>\n        </div>\n      )}\n\n      <div className={styles.formItem}>\n        <span className={styles.label}>开始时间：</span>\n        <div className={styles.dateTimes} style={{ width: '60%' }}>\n          <div style={{ flex: 1 }}>\n            {isEditing ? (\n              <DatePicker\n                value={moment(startDate)}\n                onChange={(date) =>\n                  setStartDate(moment(date).format('YYYYMMDD'))\n                }\n                placeholder=\"开始时间\"\n                style={{ width: 280 }}\n              />\n            ) : (\n              <div>{startDate}</div>\n            )}\n          </div>\n          <div className={styles.times}>\n            <span className={styles.label}>预期投入：</span>\n            {isEditing ? (\n              <InputNumber\n                disabled={branchs.length > 0}\n                style={{ flex: 1, marginRight: 4 }}\n                min={0}\n                value={times}\n                onChange={(val) => setTimes(Number(val))}\n              />\n            ) : (\n              <span style={{ color: 'red', marginRight: 4 }}>{times}</span>\n            )}\n            次打卡\n          </div>\n        </div>\n      </div>\n      {isEditing && (\n        <div className={styles.formItem}>\n          <span className={styles.label}></span>\n          <div style={{ width: '60%', textAlign: 'left' }}>\n            <Button\n              type=\"primary\"\n              style={{ width: 180 }}\n              onClick={handleSubmit}\n            >\n              保存\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EditAim;\n","/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/initial.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/aim/AimList.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/note/initial.js",[],["139","140"],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Column.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/Task.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/treeHelper.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/utils/fileHelper.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/hooks/useIpcRenderer.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/setting/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/crash/index.js",[],"/Users/jacklee/Project/cloud-doc相关/cloud-note/src/components/VEditor.js",["141","142","143"],"import { Component, useEffect } from 'react';\nimport Vditor from 'vditor';\nimport './VEditor.css';\n\nconst VEditor = ({ value, onSave }) => {\n  console.log('value', value);\n  useEffect(() => {\n    const vditor = new Vditor('vditor', {\n      toolbar: [],\n      toolbarConfig: {\n        pin: false,\n        hide: false,\n      },\n      mode: 'ir',\n      outline: false,\n      preview: {\n        theme: 'wechat',\n        markdown: {\n          codeBlockPreview: false,\n        },\n        hljs: {\n          enable: true,\n          lineNumber: true,\n        },\n      },\n      value,\n      typewriterMode: true,\n      cache: {\n        enable: false,\n      },\n      input(val) {\n        console.log('onsave', val, value);\n        // if (val && val !== value) {\n        onSave(val);\n        // }\n      },\n    });\n  }, [value]);\n\n  return <div id=\"vditor\" />;\n};\n\n// class VEditor extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       value: props.value,\n//     };\n//   }\n//   componentDidUpdate() {}\n//   componentDidMount() {\n//     const { value } = this.state;\n//     const { onSave } = this.props;\n//     const vditor = new Vditor('vditor', {\n//       toolbar: [],\n//       toolbarConfig: {\n//         pin: false,\n//         hide: false,\n//       },\n//       mode: 'ir',\n//       outline: false,\n//       preview: {\n//         theme: 'wechat',\n//         markdown: {\n//           codeBlockPreview: false,\n//         },\n//         hljs: {\n//           enable: true,\n//           lineNumber: true,\n//         },\n//       },\n//       typewriterMode: true,\n//       cache: {\n//         enable: false,\n//       },\n//       blur(val) {\n//         onSave(val);\n//       },\n//       after() {\n//         vditor.setValue(value);\n//       },\n//     });\n//   }\n\n//   render() {\n//     return <div id=\"vditor\" className=\"vditor-reset\" />;\n//   }\n// }\n\nexport default VEditor;\n",{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":57,"column":9,"nodeType":"150","messageId":"151","endLine":57,"endColumn":21},{"ruleId":"148","severity":1,"message":"152","line":6,"column":10,"nodeType":"150","messageId":"151","endLine":6,"endColumn":15},{"ruleId":"148","severity":1,"message":"153","line":6,"column":26,"nodeType":"150","messageId":"151","endLine":6,"endColumn":31},{"ruleId":"148","severity":1,"message":"154","line":7,"column":10,"nodeType":"150","messageId":"151","endLine":7,"endColumn":17},{"ruleId":"148","severity":1,"message":"155","line":14,"column":27,"nodeType":"150","messageId":"151","endLine":14,"endColumn":33},{"ruleId":"148","severity":1,"message":"156","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":22},{"ruleId":"148","severity":1,"message":"157","line":9,"column":8,"nodeType":"150","messageId":"151","endLine":9,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":29,"column":6,"nodeType":"160","endLine":29,"endColumn":8,"suggestions":"161"},{"ruleId":"158","severity":1,"message":"162","line":22,"column":6,"nodeType":"160","endLine":22,"endColumn":8,"suggestions":"163"},{"ruleId":"148","severity":1,"message":"164","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":14},{"ruleId":"148","severity":1,"message":"165","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":17},{"ruleId":"148","severity":1,"message":"166","line":4,"column":19,"nodeType":"150","messageId":"151","endLine":4,"endColumn":24},{"ruleId":"148","severity":1,"message":"167","line":8,"column":23,"nodeType":"150","messageId":"151","endLine":8,"endColumn":31},{"ruleId":"148","severity":1,"message":"168","line":8,"column":41,"nodeType":"150","messageId":"151","endLine":8,"endColumn":45},{"ruleId":"148","severity":1,"message":"152","line":9,"column":10,"nodeType":"150","messageId":"151","endLine":9,"endColumn":15},{"ruleId":"148","severity":1,"message":"169","line":55,"column":22,"nodeType":"150","messageId":"151","endLine":55,"endColumn":35},{"ruleId":"148","severity":1,"message":"170","line":1,"column":8,"nodeType":"150","messageId":"151","endLine":1,"endColumn":15},{"ruleId":"148","severity":1,"message":"164","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":14},{"ruleId":"148","severity":1,"message":"171","line":1,"column":38,"nodeType":"150","messageId":"151","endLine":1,"endColumn":49},{"ruleId":"148","severity":1,"message":"172","line":2,"column":25,"nodeType":"150","messageId":"151","endLine":2,"endColumn":31},{"ruleId":"158","severity":1,"message":"173","line":26,"column":6,"nodeType":"160","endLine":26,"endColumn":15,"suggestions":"174"},{"ruleId":"144","replacedBy":"175"},{"ruleId":"146","replacedBy":"176"},{"ruleId":"148","severity":1,"message":"177","line":1,"column":10,"nodeType":"150","messageId":"151","endLine":1,"endColumn":19},{"ruleId":"148","severity":1,"message":"178","line":8,"column":11,"nodeType":"150","messageId":"151","endLine":8,"endColumn":17},{"ruleId":"158","severity":1,"message":"179","line":38,"column":6,"nodeType":"160","endLine":38,"endColumn":13,"suggestions":"180"},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"no-unused-vars","'unsavedFiles' is assigned a value but never used.","Identifier","unusedVar","'ITodo' is defined but never used.","'ESort' is defined but never used.","'message' is defined but never used.","'editId' is assigned a value but never used.","'useIcpRenderer' is defined but never used.","'EmptyStatus' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'menus' and 'targetClass'. Either include them or remove the dependency array.","ArrayExpression",["183"],"React Hook useEffect has a missing dependency: 'targetKeyCode'. Either include it or remove the dependency array.",["184"],"'moment' is defined but never used.","'IColumn' is defined but never used.","'ITask' is defined but never used.","'Dropdown' is defined but never used.","'Menu' is defined but never used.","'setTaskRepeat' is assigned a value but never used.","'shortid' is defined but never used.","'ChangeEvent' is defined but never used.","'Select' is defined but never used.","React Hook useEffect has missing dependencies: 'data.branchs', 'data.desc', 'data.startDate', 'data.times', and 'data.title'. Either include them or remove the dependency array.",["185"],["181"],["182"],"'Component' is defined but never used.","'vditor' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onSave'. Either include it or remove the dependency array. If 'onSave' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["186"],"no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},"Update the dependencies array to be: [menus, targetClass]",{"range":"195","text":"196"},"Update the dependencies array to be: [targetKeyCode]",{"range":"197","text":"198"},"Update the dependencies array to be: [data.branchs, data.desc, data.id, data.startDate, data.times, data.title]",{"range":"199","text":"200"},"Update the dependencies array to be: [onSave, value]",{"range":"201","text":"202"},[1031,1033],"[menus, targetClass]",[686,688],"[targetKeyCode]",[949,958],"[data.branchs, data.desc, data.id, data.startDate, data.times, data.title]",[807,814],"[onSave, value]"]